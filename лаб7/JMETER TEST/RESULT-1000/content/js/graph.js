/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 692.0, "minX": 0.0, "maxY": 11149.0, "series": [{"data": [[0.0, 692.0], [0.1, 903.0], [0.2, 954.0], [0.3, 954.0], [0.4, 981.0], [0.5, 988.0], [0.6, 1163.0], [0.7, 1179.0], [0.8, 1184.0], [0.9, 1216.0], [1.0, 1223.0], [1.1, 1255.0], [1.2, 1269.0], [1.3, 1273.0], [1.4, 1273.0], [1.5, 1304.0], [1.6, 1333.0], [1.7, 1358.0], [1.8, 1366.0], [1.9, 1371.0], [2.0, 1373.0], [2.1, 1386.0], [2.2, 1389.0], [2.3, 1408.0], [2.4, 1423.0], [2.5, 1423.0], [2.6, 1436.0], [2.7, 1457.0], [2.8, 1470.0], [2.9, 1470.0], [3.0, 1470.0], [3.1, 1579.0], [3.2, 1592.0], [3.3, 1600.0], [3.4, 1601.0], [3.5, 1636.0], [3.6, 1638.0], [3.7, 1650.0], [3.8, 1652.0], [3.9, 1655.0], [4.0, 1738.0], [4.1, 1742.0], [4.2, 1744.0], [4.3, 1744.0], [4.4, 1745.0], [4.5, 1752.0], [4.6, 1753.0], [4.7, 1759.0], [4.8, 1761.0], [4.9, 1771.0], [5.0, 1774.0], [5.1, 1778.0], [5.2, 1795.0], [5.3, 1833.0], [5.4, 1837.0], [5.5, 1851.0], [5.6, 1856.0], [5.7, 1859.0], [5.8, 1877.0], [5.9, 1885.0], [6.0, 1885.0], [6.1, 1885.0], [6.2, 1895.0], [6.3, 1896.0], [6.4, 1897.0], [6.5, 1900.0], [6.6, 1902.0], [6.7, 1911.0], [6.8, 1915.0], [6.9, 1933.0], [7.0, 1933.0], [7.1, 1938.0], [7.2, 1942.0], [7.3, 1944.0], [7.4, 1952.0], [7.5, 1973.0], [7.6, 1975.0], [7.7, 2029.0], [7.8, 2039.0], [7.9, 2039.0], [8.0, 2046.0], [8.1, 2053.0], [8.2, 2055.0], [8.3, 2055.0], [8.4, 2069.0], [8.5, 2085.0], [8.6, 2086.0], [8.7, 2090.0], [8.8, 2090.0], [8.9, 2092.0], [9.0, 2099.0], [9.1, 2107.0], [9.2, 2112.0], [9.3, 2113.0], [9.4, 2118.0], [9.5, 2119.0], [9.6, 2120.0], [9.7, 2122.0], [9.8, 2122.0], [9.9, 2138.0], [10.0, 2141.0], [10.1, 2146.0], [10.2, 2164.0], [10.3, 2166.0], [10.4, 2171.0], [10.5, 2172.0], [10.6, 2176.0], [10.7, 2182.0], [10.8, 2184.0], [10.9, 2186.0], [11.0, 2197.0], [11.1, 2201.0], [11.2, 2208.0], [11.3, 2214.0], [11.4, 2215.0], [11.5, 2217.0], [11.6, 2222.0], [11.7, 2224.0], [11.8, 2226.0], [11.9, 2231.0], [12.0, 2233.0], [12.1, 2234.0], [12.2, 2238.0], [12.3, 2244.0], [12.4, 2252.0], [12.5, 2255.0], [12.6, 2256.0], [12.7, 2259.0], [12.8, 2261.0], [12.9, 2262.0], [13.0, 2262.0], [13.1, 2270.0], [13.2, 2273.0], [13.3, 2274.0], [13.4, 2276.0], [13.5, 2279.0], [13.6, 2280.0], [13.7, 2281.0], [13.8, 2298.0], [13.9, 2298.0], [14.0, 2303.0], [14.1, 2304.0], [14.2, 2306.0], [14.3, 2312.0], [14.4, 2318.0], [14.5, 2318.0], [14.6, 2319.0], [14.7, 2320.0], [14.8, 2320.0], [14.9, 2320.0], [15.0, 2321.0], [15.1, 2321.0], [15.2, 2321.0], [15.3, 2321.0], [15.4, 2323.0], [15.5, 2325.0], [15.6, 2329.0], [15.7, 2333.0], [15.8, 2333.0], [15.9, 2335.0], [16.0, 2335.0], [16.1, 2336.0], [16.2, 2337.0], [16.3, 2338.0], [16.4, 2339.0], [16.5, 2340.0], [16.6, 2342.0], [16.7, 2344.0], [16.8, 2346.0], [16.9, 2351.0], [17.0, 2354.0], [17.1, 2357.0], [17.2, 2358.0], [17.3, 2363.0], [17.4, 2376.0], [17.5, 2392.0], [17.6, 2392.0], [17.7, 2393.0], [17.8, 2393.0], [17.9, 2399.0], [18.0, 2401.0], [18.1, 2406.0], [18.2, 2406.0], [18.3, 2407.0], [18.4, 2407.0], [18.5, 2413.0], [18.6, 2415.0], [18.7, 2415.0], [18.8, 2418.0], [18.9, 2419.0], [19.0, 2422.0], [19.1, 2424.0], [19.2, 2425.0], [19.3, 2425.0], [19.4, 2425.0], [19.5, 2430.0], [19.6, 2434.0], [19.7, 2434.0], [19.8, 2435.0], [19.9, 2441.0], [20.0, 2444.0], [20.1, 2444.0], [20.2, 2462.0], [20.3, 2464.0], [20.4, 2468.0], [20.5, 2469.0], [20.6, 2470.0], [20.7, 2470.0], [20.8, 2475.0], [20.9, 2481.0], [21.0, 2481.0], [21.1, 2482.0], [21.2, 2483.0], [21.3, 2484.0], [21.4, 2486.0], [21.5, 2487.0], [21.6, 2489.0], [21.7, 2489.0], [21.8, 2492.0], [21.9, 2495.0], [22.0, 2495.0], [22.1, 2496.0], [22.2, 2496.0], [22.3, 2514.0], [22.4, 2514.0], [22.5, 2517.0], [22.6, 2518.0], [22.7, 2526.0], [22.8, 2526.0], [22.9, 2527.0], [23.0, 2530.0], [23.1, 2536.0], [23.2, 2542.0], [23.3, 2547.0], [23.4, 2556.0], [23.5, 2560.0], [23.6, 2566.0], [23.7, 2575.0], [23.8, 2577.0], [23.9, 2591.0], [24.0, 2606.0], [24.1, 2619.0], [24.2, 2622.0], [24.3, 2622.0], [24.4, 2634.0], [24.5, 2652.0], [24.6, 2659.0], [24.7, 2697.0], [24.8, 2699.0], [24.9, 2700.0], [25.0, 2710.0], [25.1, 2718.0], [25.2, 2726.0], [25.3, 2734.0], [25.4, 2735.0], [25.5, 2740.0], [25.6, 2745.0], [25.7, 2746.0], [25.8, 2748.0], [25.9, 2752.0], [26.0, 2766.0], [26.1, 2768.0], [26.2, 2789.0], [26.3, 2791.0], [26.4, 2792.0], [26.5, 2797.0], [26.6, 2799.0], [26.7, 2799.0], [26.8, 2809.0], [26.9, 2810.0], [27.0, 2810.0], [27.1, 2810.0], [27.2, 2810.0], [27.3, 2811.0], [27.4, 2811.0], [27.5, 2812.0], [27.6, 2815.0], [27.7, 2816.0], [27.8, 2816.0], [27.9, 2818.0], [28.0, 2818.0], [28.1, 2827.0], [28.2, 2829.0], [28.3, 2830.0], [28.4, 2832.0], [28.5, 2835.0], [28.6, 2837.0], [28.7, 2838.0], [28.8, 2841.0], [28.9, 2843.0], [29.0, 2844.0], [29.1, 2846.0], [29.2, 2848.0], [29.3, 2849.0], [29.4, 2851.0], [29.5, 2852.0], [29.6, 2857.0], [29.7, 2857.0], [29.8, 2859.0], [29.9, 2859.0], [30.0, 2874.0], [30.1, 2877.0], [30.2, 2877.0], [30.3, 2880.0], [30.4, 2881.0], [30.5, 2881.0], [30.6, 2882.0], [30.7, 2885.0], [30.8, 2893.0], [30.9, 2894.0], [31.0, 2895.0], [31.1, 2895.0], [31.2, 2896.0], [31.3, 2899.0], [31.4, 2900.0], [31.5, 2903.0], [31.6, 2909.0], [31.7, 2911.0], [31.8, 2911.0], [31.9, 2914.0], [32.0, 2914.0], [32.1, 2917.0], [32.2, 2918.0], [32.3, 2918.0], [32.4, 2919.0], [32.5, 2921.0], [32.6, 2922.0], [32.7, 2923.0], [32.8, 2929.0], [32.9, 2933.0], [33.0, 2933.0], [33.1, 2933.0], [33.2, 2934.0], [33.3, 2938.0], [33.4, 2941.0], [33.5, 2944.0], [33.6, 2954.0], [33.7, 2963.0], [33.8, 2965.0], [33.9, 2966.0], [34.0, 2967.0], [34.1, 2970.0], [34.2, 2986.0], [34.3, 3006.0], [34.4, 3025.0], [34.5, 3029.0], [34.6, 3073.0], [34.7, 3077.0], [34.8, 3086.0], [34.9, 3094.0], [35.0, 3099.0], [35.1, 3103.0], [35.2, 3106.0], [35.3, 3107.0], [35.4, 3113.0], [35.5, 3117.0], [35.6, 3121.0], [35.7, 3123.0], [35.8, 3125.0], [35.9, 3126.0], [36.0, 3130.0], [36.1, 3130.0], [36.2, 3135.0], [36.3, 3141.0], [36.4, 3141.0], [36.5, 3142.0], [36.6, 3145.0], [36.7, 3153.0], [36.8, 3156.0], [36.9, 3160.0], [37.0, 3160.0], [37.1, 3163.0], [37.2, 3165.0], [37.3, 3165.0], [37.4, 3165.0], [37.5, 3169.0], [37.6, 3170.0], [37.7, 3170.0], [37.8, 3171.0], [37.9, 3171.0], [38.0, 3175.0], [38.1, 3175.0], [38.2, 3175.0], [38.3, 3176.0], [38.4, 3177.0], [38.5, 3177.0], [38.6, 3179.0], [38.7, 3180.0], [38.8, 3181.0], [38.9, 3183.0], [39.0, 3185.0], [39.1, 3187.0], [39.2, 3192.0], [39.3, 3195.0], [39.4, 3195.0], [39.5, 3196.0], [39.6, 3201.0], [39.7, 3203.0], [39.8, 3203.0], [39.9, 3204.0], [40.0, 3206.0], [40.1, 3207.0], [40.2, 3210.0], [40.3, 3214.0], [40.4, 3218.0], [40.5, 3219.0], [40.6, 3222.0], [40.7, 3224.0], [40.8, 3225.0], [40.9, 3230.0], [41.0, 3239.0], [41.1, 3239.0], [41.2, 3239.0], [41.3, 3241.0], [41.4, 3241.0], [41.5, 3243.0], [41.6, 3243.0], [41.7, 3244.0], [41.8, 3247.0], [41.9, 3248.0], [42.0, 3251.0], [42.1, 3255.0], [42.2, 3256.0], [42.3, 3256.0], [42.4, 3257.0], [42.5, 3257.0], [42.6, 3257.0], [42.7, 3258.0], [42.8, 3260.0], [42.9, 3262.0], [43.0, 3263.0], [43.1, 3263.0], [43.2, 3265.0], [43.3, 3265.0], [43.4, 3265.0], [43.5, 3267.0], [43.6, 3268.0], [43.7, 3268.0], [43.8, 3270.0], [43.9, 3270.0], [44.0, 3271.0], [44.1, 3274.0], [44.2, 3276.0], [44.3, 3277.0], [44.4, 3278.0], [44.5, 3279.0], [44.6, 3284.0], [44.7, 3284.0], [44.8, 3290.0], [44.9, 3291.0], [45.0, 3292.0], [45.1, 3296.0], [45.2, 3298.0], [45.3, 3299.0], [45.4, 3302.0], [45.5, 3302.0], [45.6, 3302.0], [45.7, 3304.0], [45.8, 3305.0], [45.9, 3306.0], [46.0, 3309.0], [46.1, 3309.0], [46.2, 3309.0], [46.3, 3310.0], [46.4, 3312.0], [46.5, 3316.0], [46.6, 3320.0], [46.7, 3321.0], [46.8, 3322.0], [46.9, 3323.0], [47.0, 3323.0], [47.1, 3323.0], [47.2, 3323.0], [47.3, 3326.0], [47.4, 3327.0], [47.5, 3330.0], [47.6, 3331.0], [47.7, 3332.0], [47.8, 3332.0], [47.9, 3335.0], [48.0, 3335.0], [48.1, 3340.0], [48.2, 3341.0], [48.3, 3344.0], [48.4, 3347.0], [48.5, 3347.0], [48.6, 3348.0], [48.7, 3348.0], [48.8, 3349.0], [48.9, 3350.0], [49.0, 3350.0], [49.1, 3351.0], [49.2, 3353.0], [49.3, 3354.0], [49.4, 3357.0], [49.5, 3363.0], [49.6, 3363.0], [49.7, 3364.0], [49.8, 3364.0], [49.9, 3365.0], [50.0, 3376.0], [50.1, 3376.0], [50.2, 3380.0], [50.3, 3382.0], [50.4, 3386.0], [50.5, 3390.0], [50.6, 3397.0], [50.7, 3399.0], [50.8, 3400.0], [50.9, 3402.0], [51.0, 3403.0], [51.1, 3406.0], [51.2, 3408.0], [51.3, 3409.0], [51.4, 3410.0], [51.5, 3413.0], [51.6, 3417.0], [51.7, 3420.0], [51.8, 3421.0], [51.9, 3421.0], [52.0, 3422.0], [52.1, 3422.0], [52.2, 3422.0], [52.3, 3423.0], [52.4, 3424.0], [52.5, 3425.0], [52.6, 3426.0], [52.7, 3427.0], [52.8, 3429.0], [52.9, 3431.0], [53.0, 3433.0], [53.1, 3433.0], [53.2, 3434.0], [53.3, 3435.0], [53.4, 3437.0], [53.5, 3440.0], [53.6, 3443.0], [53.7, 3444.0], [53.8, 3446.0], [53.9, 3448.0], [54.0, 3453.0], [54.1, 3455.0], [54.2, 3455.0], [54.3, 3457.0], [54.4, 3457.0], [54.5, 3457.0], [54.6, 3458.0], [54.7, 3461.0], [54.8, 3461.0], [54.9, 3473.0], [55.0, 3473.0], [55.1, 3475.0], [55.2, 3477.0], [55.3, 3479.0], [55.4, 3480.0], [55.5, 3482.0], [55.6, 3483.0], [55.7, 3483.0], [55.8, 3483.0], [55.9, 3484.0], [56.0, 3484.0], [56.1, 3485.0], [56.2, 3486.0], [56.3, 3488.0], [56.4, 3489.0], [56.5, 3491.0], [56.6, 3491.0], [56.7, 3492.0], [56.8, 3493.0], [56.9, 3494.0], [57.0, 3497.0], [57.1, 3502.0], [57.2, 3505.0], [57.3, 3507.0], [57.4, 3507.0], [57.5, 3508.0], [57.6, 3510.0], [57.7, 3512.0], [57.8, 3513.0], [57.9, 3516.0], [58.0, 3520.0], [58.1, 3523.0], [58.2, 3524.0], [58.3, 3528.0], [58.4, 3532.0], [58.5, 3534.0], [58.6, 3542.0], [58.7, 3555.0], [58.8, 3558.0], [58.9, 3560.0], [59.0, 3561.0], [59.1, 3562.0], [59.2, 3563.0], [59.3, 3565.0], [59.4, 3566.0], [59.5, 3572.0], [59.6, 3577.0], [59.7, 3581.0], [59.8, 3584.0], [59.9, 3585.0], [60.0, 3585.0], [60.1, 3598.0], [60.2, 3606.0], [60.3, 3608.0], [60.4, 3608.0], [60.5, 3611.0], [60.6, 3631.0], [60.7, 3633.0], [60.8, 3633.0], [60.9, 3635.0], [61.0, 3646.0], [61.1, 3647.0], [61.2, 3658.0], [61.3, 3659.0], [61.4, 3659.0], [61.5, 3661.0], [61.6, 3664.0], [61.7, 3670.0], [61.8, 3671.0], [61.9, 3671.0], [62.0, 3671.0], [62.1, 3671.0], [62.2, 3672.0], [62.3, 3676.0], [62.4, 3676.0], [62.5, 3677.0], [62.6, 3680.0], [62.7, 3683.0], [62.8, 3687.0], [62.9, 3704.0], [63.0, 3707.0], [63.1, 3708.0], [63.2, 3714.0], [63.3, 3727.0], [63.4, 3731.0], [63.5, 3734.0], [63.6, 3735.0], [63.7, 3735.0], [63.8, 3740.0], [63.9, 3741.0], [64.0, 3742.0], [64.1, 3747.0], [64.2, 3747.0], [64.3, 3747.0], [64.4, 3754.0], [64.5, 3755.0], [64.6, 3755.0], [64.7, 3765.0], [64.8, 3766.0], [64.9, 3768.0], [65.0, 3772.0], [65.1, 3779.0], [65.2, 3797.0], [65.3, 3817.0], [65.4, 3823.0], [65.5, 3824.0], [65.6, 3831.0], [65.7, 3832.0], [65.8, 3888.0], [65.9, 3890.0], [66.0, 3900.0], [66.1, 3903.0], [66.2, 3905.0], [66.3, 3931.0], [66.4, 3931.0], [66.5, 3932.0], [66.6, 3932.0], [66.7, 3938.0], [66.8, 3940.0], [66.9, 3944.0], [67.0, 3945.0], [67.1, 3947.0], [67.2, 3953.0], [67.3, 3961.0], [67.4, 3962.0], [67.5, 3963.0], [67.6, 3963.0], [67.7, 3966.0], [67.8, 3970.0], [67.9, 3990.0], [68.0, 4003.0], [68.1, 4008.0], [68.2, 4009.0], [68.3, 4011.0], [68.4, 4013.0], [68.5, 4016.0], [68.6, 4017.0], [68.7, 4018.0], [68.8, 4020.0], [68.9, 4021.0], [69.0, 4027.0], [69.1, 4044.0], [69.2, 4050.0], [69.3, 4051.0], [69.4, 4052.0], [69.5, 4071.0], [69.6, 4080.0], [69.7, 4109.0], [69.8, 4123.0], [69.9, 4124.0], [70.0, 4131.0], [70.1, 4132.0], [70.2, 4155.0], [70.3, 4155.0], [70.4, 4158.0], [70.5, 4159.0], [70.6, 4160.0], [70.7, 4161.0], [70.8, 4166.0], [70.9, 4170.0], [71.0, 4175.0], [71.1, 4179.0], [71.2, 4179.0], [71.3, 4207.0], [71.4, 4207.0], [71.5, 4208.0], [71.6, 4210.0], [71.7, 4213.0], [71.8, 4214.0], [71.9, 4233.0], [72.0, 4234.0], [72.1, 4236.0], [72.2, 4236.0], [72.3, 4240.0], [72.4, 4245.0], [72.5, 4246.0], [72.6, 4249.0], [72.7, 4250.0], [72.8, 4250.0], [72.9, 4251.0], [73.0, 4253.0], [73.1, 4255.0], [73.2, 4257.0], [73.3, 4269.0], [73.4, 4273.0], [73.5, 4273.0], [73.6, 4274.0], [73.7, 4276.0], [73.8, 4283.0], [73.9, 4286.0], [74.0, 4289.0], [74.1, 4295.0], [74.2, 4299.0], [74.3, 4302.0], [74.4, 4302.0], [74.5, 4307.0], [74.6, 4313.0], [74.7, 4314.0], [74.8, 4314.0], [74.9, 4315.0], [75.0, 4315.0], [75.1, 4316.0], [75.2, 4317.0], [75.3, 4317.0], [75.4, 4317.0], [75.5, 4326.0], [75.6, 4330.0], [75.7, 4337.0], [75.8, 4340.0], [75.9, 4350.0], [76.0, 4350.0], [76.1, 4354.0], [76.2, 4355.0], [76.3, 4356.0], [76.4, 4358.0], [76.5, 4360.0], [76.6, 4364.0], [76.7, 4364.0], [76.8, 4366.0], [76.9, 4367.0], [77.0, 4368.0], [77.1, 4368.0], [77.2, 4369.0], [77.3, 4369.0], [77.4, 4380.0], [77.5, 4382.0], [77.6, 4382.0], [77.7, 4392.0], [77.8, 4402.0], [77.9, 4412.0], [78.0, 4416.0], [78.1, 4418.0], [78.2, 4420.0], [78.3, 4426.0], [78.4, 4426.0], [78.5, 4427.0], [78.6, 4428.0], [78.7, 4433.0], [78.8, 4436.0], [78.9, 4447.0], [79.0, 4449.0], [79.1, 4453.0], [79.2, 4456.0], [79.3, 4456.0], [79.4, 4460.0], [79.5, 4462.0], [79.6, 4465.0], [79.7, 4465.0], [79.8, 4466.0], [79.9, 4467.0], [80.0, 4468.0], [80.1, 4468.0], [80.2, 4468.0], [80.3, 4469.0], [80.4, 4469.0], [80.5, 4475.0], [80.6, 4475.0], [80.7, 4475.0], [80.8, 4476.0], [80.9, 4477.0], [81.0, 4477.0], [81.1, 4484.0], [81.2, 4488.0], [81.3, 4497.0], [81.4, 4498.0], [81.5, 4505.0], [81.6, 4506.0], [81.7, 4506.0], [81.8, 4510.0], [81.9, 4513.0], [82.0, 4515.0], [82.1, 4517.0], [82.2, 4522.0], [82.3, 4523.0], [82.4, 4526.0], [82.5, 4534.0], [82.6, 4535.0], [82.7, 4539.0], [82.8, 4547.0], [82.9, 4548.0], [83.0, 4549.0], [83.1, 4563.0], [83.2, 4565.0], [83.3, 4570.0], [83.4, 4570.0], [83.5, 4576.0], [83.6, 4582.0], [83.7, 4595.0], [83.8, 4595.0], [83.9, 4603.0], [84.0, 4605.0], [84.1, 4623.0], [84.2, 4633.0], [84.3, 4641.0], [84.4, 4645.0], [84.5, 4653.0], [84.6, 4654.0], [84.7, 4657.0], [84.8, 4667.0], [84.9, 4668.0], [85.0, 4671.0], [85.1, 4674.0], [85.2, 4674.0], [85.3, 4680.0], [85.4, 4683.0], [85.5, 4689.0], [85.6, 4689.0], [85.7, 4690.0], [85.8, 4691.0], [85.9, 4708.0], [86.0, 4729.0], [86.1, 4736.0], [86.2, 4747.0], [86.3, 4747.0], [86.4, 4763.0], [86.5, 4799.0], [86.6, 4800.0], [86.7, 4809.0], [86.8, 4811.0], [86.9, 4822.0], [87.0, 4833.0], [87.1, 4852.0], [87.2, 4855.0], [87.3, 4856.0], [87.4, 4859.0], [87.5, 4862.0], [87.6, 4898.0], [87.7, 4898.0], [87.8, 4901.0], [87.9, 4916.0], [88.0, 4942.0], [88.1, 4960.0], [88.2, 4960.0], [88.3, 4966.0], [88.4, 4968.0], [88.5, 4970.0], [88.6, 4983.0], [88.7, 4994.0], [88.8, 4994.0], [88.9, 5004.0], [89.0, 5040.0], [89.1, 5055.0], [89.2, 5066.0], [89.3, 5088.0], [89.4, 5119.0], [89.5, 5121.0], [89.6, 5125.0], [89.7, 5127.0], [89.8, 5130.0], [89.9, 5131.0], [90.0, 5131.0], [90.1, 5141.0], [90.2, 5155.0], [90.3, 5160.0], [90.4, 5162.0], [90.5, 5173.0], [90.6, 5224.0], [90.7, 5255.0], [90.8, 5349.0], [90.9, 5376.0], [91.0, 5380.0], [91.1, 5399.0], [91.2, 5399.0], [91.3, 5472.0], [91.4, 5472.0], [91.5, 5474.0], [91.6, 5476.0], [91.7, 5527.0], [91.8, 5582.0], [91.9, 5639.0], [92.0, 5654.0], [92.1, 5663.0], [92.2, 5677.0], [92.3, 5690.0], [92.4, 5699.0], [92.5, 5702.0], [92.6, 5719.0], [92.7, 5749.0], [92.8, 5770.0], [92.9, 5809.0], [93.0, 5820.0], [93.1, 5826.0], [93.2, 5850.0], [93.3, 5854.0], [93.4, 5857.0], [93.5, 5863.0], [93.6, 5865.0], [93.7, 5871.0], [93.8, 5882.0], [93.9, 5939.0], [94.0, 5967.0], [94.1, 5969.0], [94.2, 6012.0], [94.3, 6014.0], [94.4, 6025.0], [94.5, 6055.0], [94.6, 6062.0], [94.7, 6102.0], [94.8, 6137.0], [94.9, 6165.0], [95.0, 6185.0], [95.1, 6187.0], [95.2, 6210.0], [95.3, 6295.0], [95.4, 6336.0], [95.5, 6412.0], [95.6, 6422.0], [95.7, 6514.0], [95.8, 6526.0], [95.9, 6548.0], [96.0, 6562.0], [96.1, 6653.0], [96.2, 6673.0], [96.3, 6735.0], [96.4, 6791.0], [96.5, 6828.0], [96.6, 6903.0], [96.7, 6912.0], [96.8, 6917.0], [96.9, 7013.0], [97.0, 7050.0], [97.1, 7162.0], [97.2, 7200.0], [97.3, 7202.0], [97.4, 7231.0], [97.5, 7407.0], [97.6, 7494.0], [97.7, 7576.0], [97.8, 7592.0], [97.9, 7655.0], [98.0, 7696.0], [98.1, 7780.0], [98.2, 7869.0], [98.3, 8074.0], [98.4, 8189.0], [98.5, 8304.0], [98.6, 8409.0], [98.7, 8676.0], [98.8, 8742.0], [98.9, 8789.0], [99.0, 8813.0], [99.1, 8818.0], [99.2, 8852.0], [99.3, 8894.0], [99.4, 8939.0], [99.5, 8940.0], [99.6, 8970.0], [99.7, 8972.0], [99.8, 9238.0], [99.9, 9374.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 1103.0], [0.1, 1112.0], [0.2, 1118.0], [0.3, 1118.0], [0.4, 1126.0], [0.5, 1127.0], [0.6, 1134.0], [0.7, 1135.0], [0.8, 1143.0], [0.9, 1144.0], [1.0, 1149.0], [1.1, 1154.0], [1.2, 1154.0], [1.3, 1155.0], [1.4, 1167.0], [1.5, 1167.0], [1.6, 1168.0], [1.7, 1168.0], [1.8, 1172.0], [1.9, 1180.0], [2.0, 1182.0], [2.1, 1182.0], [2.2, 1184.0], [2.3, 1184.0], [2.4, 1186.0], [2.5, 1186.0], [2.6, 1187.0], [2.7, 1188.0], [2.8, 1189.0], [2.9, 1201.0], [3.0, 1202.0], [3.1, 1210.0], [3.2, 1210.0], [3.3, 1211.0], [3.4, 1211.0], [3.5, 1214.0], [3.6, 1215.0], [3.7, 1215.0], [3.8, 1216.0], [3.9, 1218.0], [4.0, 1225.0], [4.1, 1226.0], [4.2, 1229.0], [4.3, 1232.0], [4.4, 1233.0], [4.5, 1233.0], [4.6, 1236.0], [4.7, 1252.0], [4.8, 1260.0], [4.9, 1271.0], [5.0, 1271.0], [5.1, 1284.0], [5.2, 1288.0], [5.3, 1291.0], [5.4, 1293.0], [5.5, 1299.0], [5.6, 1312.0], [5.7, 1317.0], [5.8, 1317.0], [5.9, 1323.0], [6.0, 1325.0], [6.1, 1329.0], [6.2, 1330.0], [6.3, 1333.0], [6.4, 1333.0], [6.5, 1335.0], [6.6, 1338.0], [6.7, 1340.0], [6.8, 1344.0], [6.9, 1347.0], [7.0, 1349.0], [7.1, 1352.0], [7.2, 1354.0], [7.3, 1355.0], [7.4, 1361.0], [7.5, 1364.0], [7.6, 1371.0], [7.7, 1375.0], [7.8, 1375.0], [7.9, 1376.0], [8.0, 1380.0], [8.1, 1385.0], [8.2, 1398.0], [8.3, 1401.0], [8.4, 1402.0], [8.5, 1403.0], [8.6, 1404.0], [8.7, 1406.0], [8.8, 1406.0], [8.9, 1407.0], [9.0, 1408.0], [9.1, 1410.0], [9.2, 1410.0], [9.3, 1411.0], [9.4, 1413.0], [9.5, 1414.0], [9.6, 1414.0], [9.7, 1414.0], [9.8, 1414.0], [9.9, 1415.0], [10.0, 1415.0], [10.1, 1418.0], [10.2, 1418.0], [10.3, 1419.0], [10.4, 1419.0], [10.5, 1419.0], [10.6, 1419.0], [10.7, 1421.0], [10.8, 1422.0], [10.9, 1423.0], [11.0, 1426.0], [11.1, 1426.0], [11.2, 1427.0], [11.3, 1428.0], [11.4, 1429.0], [11.5, 1430.0], [11.6, 1430.0], [11.7, 1432.0], [11.8, 1434.0], [11.9, 1434.0], [12.0, 1436.0], [12.1, 1437.0], [12.2, 1437.0], [12.3, 1441.0], [12.4, 1442.0], [12.5, 1443.0], [12.6, 1444.0], [12.7, 1445.0], [12.8, 1446.0], [12.9, 1446.0], [13.0, 1447.0], [13.1, 1448.0], [13.2, 1450.0], [13.3, 1451.0], [13.4, 1451.0], [13.5, 1451.0], [13.6, 1451.0], [13.7, 1452.0], [13.8, 1452.0], [13.9, 1452.0], [14.0, 1452.0], [14.1, 1452.0], [14.2, 1453.0], [14.3, 1453.0], [14.4, 1453.0], [14.5, 1453.0], [14.6, 1453.0], [14.7, 1454.0], [14.8, 1454.0], [14.9, 1454.0], [15.0, 1454.0], [15.1, 1454.0], [15.2, 1455.0], [15.3, 1456.0], [15.4, 1457.0], [15.5, 1457.0], [15.6, 1461.0], [15.7, 1462.0], [15.8, 1462.0], [15.9, 1463.0], [16.0, 1464.0], [16.1, 1464.0], [16.2, 1464.0], [16.3, 1465.0], [16.4, 1466.0], [16.5, 1466.0], [16.6, 1466.0], [16.7, 1466.0], [16.8, 1467.0], [16.9, 1468.0], [17.0, 1468.0], [17.1, 1468.0], [17.2, 1468.0], [17.3, 1468.0], [17.4, 1468.0], [17.5, 1468.0], [17.6, 1468.0], [17.7, 1468.0], [17.8, 1468.0], [17.9, 1470.0], [18.0, 1476.0], [18.1, 1476.0], [18.2, 1476.0], [18.3, 1478.0], [18.4, 1479.0], [18.5, 1479.0], [18.6, 1479.0], [18.7, 1481.0], [18.8, 1483.0], [18.9, 1486.0], [19.0, 1490.0], [19.1, 1492.0], [19.2, 1493.0], [19.3, 1493.0], [19.4, 1493.0], [19.5, 1494.0], [19.6, 1496.0], [19.7, 1496.0], [19.8, 1496.0], [19.9, 1496.0], [20.0, 1496.0], [20.1, 1497.0], [20.2, 1497.0], [20.3, 1498.0], [20.4, 1498.0], [20.5, 1499.0], [20.6, 1499.0], [20.7, 1499.0], [20.8, 1499.0], [20.9, 1499.0], [21.0, 1500.0], [21.1, 1500.0], [21.2, 1501.0], [21.3, 1502.0], [21.4, 1502.0], [21.5, 1502.0], [21.6, 1502.0], [21.7, 1503.0], [21.8, 1503.0], [21.9, 1503.0], [22.0, 1503.0], [22.1, 1503.0], [22.2, 1504.0], [22.3, 1504.0], [22.4, 1504.0], [22.5, 1504.0], [22.6, 1505.0], [22.7, 1505.0], [22.8, 1505.0], [22.9, 1505.0], [23.0, 1505.0], [23.1, 1505.0], [23.2, 1506.0], [23.3, 1506.0], [23.4, 1506.0], [23.5, 1506.0], [23.6, 1506.0], [23.7, 1506.0], [23.8, 1507.0], [23.9, 1508.0], [24.0, 1509.0], [24.1, 1511.0], [24.2, 1512.0], [24.3, 1513.0], [24.4, 1518.0], [24.5, 1524.0], [24.6, 1526.0], [24.7, 1526.0], [24.8, 1530.0], [24.9, 1534.0], [25.0, 1537.0], [25.1, 1540.0], [25.2, 1544.0], [25.3, 1545.0], [25.4, 1557.0], [25.5, 1558.0], [25.6, 1561.0], [25.7, 1567.0], [25.8, 1569.0], [25.9, 1574.0], [26.0, 1575.0], [26.1, 1575.0], [26.2, 1577.0], [26.3, 1577.0], [26.4, 1579.0], [26.5, 1580.0], [26.6, 1581.0], [26.7, 1582.0], [26.8, 1585.0], [26.9, 1586.0], [27.0, 1594.0], [27.1, 1595.0], [27.2, 1596.0], [27.3, 1600.0], [27.4, 1601.0], [27.5, 1602.0], [27.6, 1603.0], [27.7, 1604.0], [27.8, 1604.0], [27.9, 1608.0], [28.0, 1609.0], [28.1, 1609.0], [28.2, 1609.0], [28.3, 1612.0], [28.4, 1615.0], [28.5, 1617.0], [28.6, 1617.0], [28.7, 1618.0], [28.8, 1618.0], [28.9, 1620.0], [29.0, 1620.0], [29.1, 1620.0], [29.2, 1621.0], [29.3, 1621.0], [29.4, 1622.0], [29.5, 1622.0], [29.6, 1624.0], [29.7, 1629.0], [29.8, 1631.0], [29.9, 1632.0], [30.0, 1632.0], [30.1, 1632.0], [30.2, 1633.0], [30.3, 1635.0], [30.4, 1635.0], [30.5, 1637.0], [30.6, 1638.0], [30.7, 1638.0], [30.8, 1639.0], [30.9, 1639.0], [31.0, 1640.0], [31.1, 1640.0], [31.2, 1645.0], [31.3, 1645.0], [31.4, 1648.0], [31.5, 1649.0], [31.6, 1654.0], [31.7, 1654.0], [31.8, 1655.0], [31.9, 1655.0], [32.0, 1656.0], [32.1, 1656.0], [32.2, 1657.0], [32.3, 1658.0], [32.4, 1658.0], [32.5, 1659.0], [32.6, 1659.0], [32.7, 1660.0], [32.8, 1660.0], [32.9, 1662.0], [33.0, 1665.0], [33.1, 1667.0], [33.2, 1668.0], [33.3, 1673.0], [33.4, 1676.0], [33.5, 1679.0], [33.6, 1680.0], [33.7, 1683.0], [33.8, 1684.0], [33.9, 1684.0], [34.0, 1694.0], [34.1, 1696.0], [34.2, 1700.0], [34.3, 1705.0], [34.4, 1708.0], [34.5, 1716.0], [34.6, 1718.0], [34.7, 1728.0], [34.8, 1730.0], [34.9, 1737.0], [35.0, 1746.0], [35.1, 1746.0], [35.2, 1747.0], [35.3, 1747.0], [35.4, 1748.0], [35.5, 1748.0], [35.6, 1748.0], [35.7, 1749.0], [35.8, 1752.0], [35.9, 1753.0], [36.0, 1763.0], [36.1, 1764.0], [36.2, 1766.0], [36.3, 1766.0], [36.4, 1767.0], [36.5, 1771.0], [36.6, 1774.0], [36.7, 1778.0], [36.8, 1780.0], [36.9, 1780.0], [37.0, 1781.0], [37.1, 1782.0], [37.2, 1786.0], [37.3, 1787.0], [37.4, 1787.0], [37.5, 1790.0], [37.6, 1790.0], [37.7, 1800.0], [37.8, 1801.0], [37.9, 1804.0], [38.0, 1806.0], [38.1, 1806.0], [38.2, 1806.0], [38.3, 1807.0], [38.4, 1807.0], [38.5, 1809.0], [38.6, 1811.0], [38.7, 1811.0], [38.8, 1812.0], [38.9, 1812.0], [39.0, 1817.0], [39.1, 1817.0], [39.2, 1817.0], [39.3, 1818.0], [39.4, 1820.0], [39.5, 1821.0], [39.6, 1822.0], [39.7, 1822.0], [39.8, 1823.0], [39.9, 1829.0], [40.0, 1835.0], [40.1, 1836.0], [40.2, 1841.0], [40.3, 1841.0], [40.4, 1841.0], [40.5, 1842.0], [40.6, 1843.0], [40.7, 1844.0], [40.8, 1846.0], [40.9, 1847.0], [41.0, 1848.0], [41.1, 1849.0], [41.2, 1849.0], [41.3, 1850.0], [41.4, 1851.0], [41.5, 1852.0], [41.6, 1852.0], [41.7, 1853.0], [41.8, 1855.0], [41.9, 1856.0], [42.0, 1857.0], [42.1, 1857.0], [42.2, 1859.0], [42.3, 1861.0], [42.4, 1866.0], [42.5, 1866.0], [42.6, 1868.0], [42.7, 1869.0], [42.8, 1870.0], [42.9, 1870.0], [43.0, 1872.0], [43.1, 1875.0], [43.2, 1876.0], [43.3, 1877.0], [43.4, 1877.0], [43.5, 1878.0], [43.6, 1878.0], [43.7, 1878.0], [43.8, 1879.0], [43.9, 1881.0], [44.0, 1884.0], [44.1, 1884.0], [44.2, 1884.0], [44.3, 1885.0], [44.4, 1886.0], [44.5, 1886.0], [44.6, 1887.0], [44.7, 1888.0], [44.8, 1888.0], [44.9, 1888.0], [45.0, 1888.0], [45.1, 1888.0], [45.2, 1889.0], [45.3, 1890.0], [45.4, 1890.0], [45.5, 1891.0], [45.6, 1891.0], [45.7, 1893.0], [45.8, 1895.0], [45.9, 1897.0], [46.0, 1901.0], [46.1, 1902.0], [46.2, 1902.0], [46.3, 1903.0], [46.4, 1903.0], [46.5, 1904.0], [46.6, 1906.0], [46.7, 1906.0], [46.8, 1907.0], [46.9, 1907.0], [47.0, 1908.0], [47.1, 1908.0], [47.2, 1910.0], [47.3, 1911.0], [47.4, 1913.0], [47.5, 1916.0], [47.6, 1917.0], [47.7, 1918.0], [47.8, 1920.0], [47.9, 1920.0], [48.0, 1920.0], [48.1, 1922.0], [48.2, 1926.0], [48.3, 1928.0], [48.4, 1928.0], [48.5, 1928.0], [48.6, 1928.0], [48.7, 1929.0], [48.8, 1929.0], [48.9, 1929.0], [49.0, 1931.0], [49.1, 1931.0], [49.2, 1932.0], [49.3, 1933.0], [49.4, 1934.0], [49.5, 1939.0], [49.6, 1939.0], [49.7, 1940.0], [49.8, 1941.0], [49.9, 1941.0], [50.0, 1943.0], [50.1, 1943.0], [50.2, 1943.0], [50.3, 1944.0], [50.4, 1944.0], [50.5, 1945.0], [50.6, 1946.0], [50.7, 1947.0], [50.8, 1947.0], [50.9, 1948.0], [51.0, 1948.0], [51.1, 1949.0], [51.2, 1953.0], [51.3, 1953.0], [51.4, 1955.0], [51.5, 1955.0], [51.6, 1956.0], [51.7, 1956.0], [51.8, 1957.0], [51.9, 1957.0], [52.0, 1959.0], [52.1, 1960.0], [52.2, 1962.0], [52.3, 1964.0], [52.4, 1965.0], [52.5, 1965.0], [52.6, 1968.0], [52.7, 1968.0], [52.8, 1968.0], [52.9, 1968.0], [53.0, 1969.0], [53.1, 1969.0], [53.2, 1969.0], [53.3, 1971.0], [53.4, 1972.0], [53.5, 1972.0], [53.6, 1972.0], [53.7, 1973.0], [53.8, 1973.0], [53.9, 1974.0], [54.0, 1974.0], [54.1, 1975.0], [54.2, 1977.0], [54.3, 1977.0], [54.4, 1977.0], [54.5, 1978.0], [54.6, 1978.0], [54.7, 1979.0], [54.8, 1979.0], [54.9, 1982.0], [55.0, 1982.0], [55.1, 1983.0], [55.2, 1983.0], [55.3, 1984.0], [55.4, 1986.0], [55.5, 1993.0], [55.6, 1993.0], [55.7, 1993.0], [55.8, 1996.0], [55.9, 1996.0], [56.0, 1999.0], [56.1, 2001.0], [56.2, 2008.0], [56.3, 2009.0], [56.4, 2011.0], [56.5, 2128.0], [56.6, 2147.0], [56.7, 2148.0], [56.8, 2187.0], [56.9, 2191.0], [57.0, 2196.0], [57.1, 2209.0], [57.2, 2222.0], [57.3, 2232.0], [57.4, 2237.0], [57.5, 2239.0], [57.6, 2241.0], [57.7, 2242.0], [57.8, 2245.0], [57.9, 2246.0], [58.0, 2247.0], [58.1, 2248.0], [58.2, 2248.0], [58.3, 2249.0], [58.4, 2249.0], [58.5, 2250.0], [58.6, 2251.0], [58.7, 2251.0], [58.8, 2252.0], [58.9, 2252.0], [59.0, 2253.0], [59.1, 2253.0], [59.2, 2254.0], [59.3, 2255.0], [59.4, 2255.0], [59.5, 2255.0], [59.6, 2256.0], [59.7, 2257.0], [59.8, 2258.0], [59.9, 2259.0], [60.0, 2260.0], [60.1, 2260.0], [60.2, 2260.0], [60.3, 2261.0], [60.4, 2261.0], [60.5, 2261.0], [60.6, 2264.0], [60.7, 2269.0], [60.8, 2270.0], [60.9, 2274.0], [61.0, 2279.0], [61.1, 2299.0], [61.2, 2324.0], [61.3, 2341.0], [61.4, 2347.0], [61.5, 2350.0], [61.6, 2350.0], [61.7, 2351.0], [61.8, 2367.0], [61.9, 2372.0], [62.0, 2392.0], [62.1, 2394.0], [62.2, 2397.0], [62.3, 2415.0], [62.4, 2419.0], [62.5, 2427.0], [62.6, 2435.0], [62.7, 2444.0], [62.8, 2449.0], [62.9, 2450.0], [63.0, 2451.0], [63.1, 2462.0], [63.2, 2467.0], [63.3, 2467.0], [63.4, 2468.0], [63.5, 2469.0], [63.6, 2472.0], [63.7, 2472.0], [63.8, 2475.0], [63.9, 2476.0], [64.0, 2476.0], [64.1, 2477.0], [64.2, 2477.0], [64.3, 2479.0], [64.4, 2480.0], [64.5, 2482.0], [64.6, 2482.0], [64.7, 2486.0], [64.8, 2486.0], [64.9, 2489.0], [65.0, 2492.0], [65.1, 2494.0], [65.2, 2497.0], [65.3, 2501.0], [65.4, 2505.0], [65.5, 2506.0], [65.6, 2510.0], [65.7, 2520.0], [65.8, 2526.0], [65.9, 2530.0], [66.0, 2533.0], [66.1, 2534.0], [66.2, 2534.0], [66.3, 2536.0], [66.4, 2537.0], [66.5, 2538.0], [66.6, 2538.0], [66.7, 2539.0], [66.8, 2542.0], [66.9, 2545.0], [67.0, 2546.0], [67.1, 2546.0], [67.2, 2547.0], [67.3, 2548.0], [67.4, 2552.0], [67.5, 2555.0], [67.6, 2559.0], [67.7, 2562.0], [67.8, 2568.0], [67.9, 2569.0], [68.0, 2569.0], [68.1, 2575.0], [68.2, 2576.0], [68.3, 2582.0], [68.4, 2583.0], [68.5, 2592.0], [68.6, 2592.0], [68.7, 2592.0], [68.8, 2593.0], [68.9, 2595.0], [69.0, 2596.0], [69.1, 2600.0], [69.2, 2600.0], [69.3, 2605.0], [69.4, 2606.0], [69.5, 2606.0], [69.6, 2607.0], [69.7, 2607.0], [69.8, 2607.0], [69.9, 2607.0], [70.0, 2610.0], [70.1, 2611.0], [70.2, 2612.0], [70.3, 2613.0], [70.4, 2615.0], [70.5, 2616.0], [70.6, 2617.0], [70.7, 2618.0], [70.8, 2618.0], [70.9, 2621.0], [71.0, 2624.0], [71.1, 2624.0], [71.2, 2629.0], [71.3, 2632.0], [71.4, 2635.0], [71.5, 2638.0], [71.6, 2642.0], [71.7, 2642.0], [71.8, 2643.0], [71.9, 2643.0], [72.0, 2644.0], [72.1, 2645.0], [72.2, 2647.0], [72.3, 2648.0], [72.4, 2648.0], [72.5, 2649.0], [72.6, 2655.0], [72.7, 2656.0], [72.8, 2662.0], [72.9, 2662.0], [73.0, 2667.0], [73.1, 2667.0], [73.2, 2669.0], [73.3, 2669.0], [73.4, 2669.0], [73.5, 2671.0], [73.6, 2672.0], [73.7, 2673.0], [73.8, 2673.0], [73.9, 2680.0], [74.0, 2681.0], [74.1, 2685.0], [74.2, 2685.0], [74.3, 2702.0], [74.4, 2703.0], [74.5, 2704.0], [74.6, 2707.0], [74.7, 2709.0], [74.8, 2710.0], [74.9, 2710.0], [75.0, 2713.0], [75.1, 2716.0], [75.2, 2716.0], [75.3, 2718.0], [75.4, 2718.0], [75.5, 2718.0], [75.6, 2721.0], [75.7, 2722.0], [75.8, 2723.0], [75.9, 2725.0], [76.0, 2725.0], [76.1, 2735.0], [76.2, 2736.0], [76.3, 2737.0], [76.4, 2737.0], [76.5, 2770.0], [76.6, 2772.0], [76.7, 2772.0], [76.8, 2774.0], [76.9, 2775.0], [77.0, 2776.0], [77.1, 2779.0], [77.2, 2782.0], [77.3, 2782.0], [77.4, 2784.0], [77.5, 2786.0], [77.6, 2792.0], [77.7, 2793.0], [77.8, 2794.0], [77.9, 2795.0], [78.0, 2798.0], [78.1, 2804.0], [78.2, 2804.0], [78.3, 2809.0], [78.4, 2817.0], [78.5, 2818.0], [78.6, 2818.0], [78.7, 2822.0], [78.8, 2823.0], [78.9, 2829.0], [79.0, 2829.0], [79.1, 2832.0], [79.2, 2834.0], [79.3, 2836.0], [79.4, 2837.0], [79.5, 2848.0], [79.6, 2853.0], [79.7, 2854.0], [79.8, 2854.0], [79.9, 2854.0], [80.0, 2857.0], [80.1, 2859.0], [80.2, 2859.0], [80.3, 2876.0], [80.4, 2881.0], [80.5, 2886.0], [80.6, 2887.0], [80.7, 2890.0], [80.8, 2899.0], [80.9, 2908.0], [81.0, 2909.0], [81.1, 2909.0], [81.2, 2914.0], [81.3, 2916.0], [81.4, 2921.0], [81.5, 2934.0], [81.6, 2937.0], [81.7, 2947.0], [81.8, 2947.0], [81.9, 2948.0], [82.0, 2949.0], [82.1, 2949.0], [82.2, 2949.0], [82.3, 2949.0], [82.4, 2950.0], [82.5, 2951.0], [82.6, 2953.0], [82.7, 2959.0], [82.8, 2965.0], [82.9, 2966.0], [83.0, 2968.0], [83.1, 2969.0], [83.2, 2971.0], [83.3, 2971.0], [83.4, 2976.0], [83.5, 2978.0], [83.6, 2978.0], [83.7, 2979.0], [83.8, 2980.0], [83.9, 2980.0], [84.0, 2981.0], [84.1, 2981.0], [84.2, 2983.0], [84.3, 2994.0], [84.4, 2995.0], [84.5, 2997.0], [84.6, 2997.0], [84.7, 2998.0], [84.8, 2998.0], [84.9, 2999.0], [85.0, 3000.0], [85.1, 3002.0], [85.2, 3016.0], [85.3, 3016.0], [85.4, 3027.0], [85.5, 3031.0], [85.6, 3066.0], [85.7, 3068.0], [85.8, 3068.0], [85.9, 3068.0], [86.0, 3071.0], [86.1, 3071.0], [86.2, 3072.0], [86.3, 3073.0], [86.4, 3074.0], [86.5, 3074.0], [86.6, 3074.0], [86.7, 3081.0], [86.8, 3086.0], [86.9, 3088.0], [87.0, 3090.0], [87.1, 3090.0], [87.2, 3091.0], [87.3, 3094.0], [87.4, 3097.0], [87.5, 3097.0], [87.6, 3100.0], [87.7, 3100.0], [87.8, 3101.0], [87.9, 3102.0], [88.0, 3104.0], [88.1, 3106.0], [88.2, 3107.0], [88.3, 3112.0], [88.4, 3113.0], [88.5, 3115.0], [88.6, 3119.0], [88.7, 3120.0], [88.8, 3120.0], [88.9, 3120.0], [89.0, 3120.0], [89.1, 3122.0], [89.2, 3123.0], [89.3, 3123.0], [89.4, 3123.0], [89.5, 3124.0], [89.6, 3125.0], [89.7, 3130.0], [89.8, 3133.0], [89.9, 3134.0], [90.0, 3135.0], [90.1, 3138.0], [90.2, 3152.0], [90.3, 3160.0], [90.4, 3165.0], [90.5, 3165.0], [90.6, 3165.0], [90.7, 3169.0], [90.8, 3172.0], [90.9, 3172.0], [91.0, 3175.0], [91.1, 3178.0], [91.2, 3183.0], [91.3, 3184.0], [91.4, 3184.0], [91.5, 3190.0], [91.6, 3195.0], [91.7, 3195.0], [91.8, 3195.0], [91.9, 3196.0], [92.0, 3198.0], [92.1, 3201.0], [92.2, 3212.0], [92.3, 3213.0], [92.4, 3214.0], [92.5, 3215.0], [92.6, 3216.0], [92.7, 3216.0], [92.8, 3216.0], [92.9, 3217.0], [93.0, 3220.0], [93.1, 3220.0], [93.2, 3221.0], [93.3, 3224.0], [93.4, 3224.0], [93.5, 3224.0], [93.6, 3228.0], [93.7, 3229.0], [93.8, 3231.0], [93.9, 3242.0], [94.0, 3247.0], [94.1, 3249.0], [94.2, 3250.0], [94.3, 3252.0], [94.4, 3253.0], [94.5, 3254.0], [94.6, 3268.0], [94.7, 3273.0], [94.8, 3273.0], [94.9, 3273.0], [95.0, 3274.0], [95.1, 3274.0], [95.2, 3276.0], [95.3, 3278.0], [95.4, 3279.0], [95.5, 3281.0], [95.6, 3282.0], [95.7, 3285.0], [95.8, 3285.0], [95.9, 3285.0], [96.0, 3285.0], [96.1, 3287.0], [96.2, 3287.0], [96.3, 3287.0], [96.4, 3291.0], [96.5, 3298.0], [96.6, 3298.0], [96.7, 3300.0], [96.8, 3300.0], [96.9, 3302.0], [97.0, 3303.0], [97.1, 3305.0], [97.2, 3305.0], [97.3, 3306.0], [97.4, 3307.0], [97.5, 3308.0], [97.6, 3312.0], [97.7, 3312.0], [97.8, 3314.0], [97.9, 3318.0], [98.0, 3463.0], [98.1, 3464.0], [98.2, 3468.0], [98.3, 3468.0], [98.4, 3469.0], [98.5, 3469.0], [98.6, 3469.0], [98.7, 3469.0], [98.8, 3469.0], [98.9, 3470.0], [99.0, 3470.0], [99.1, 3471.0], [99.2, 3473.0], [99.3, 3477.0], [99.4, 3477.0], [99.5, 3491.0], [99.6, 3502.0], [99.7, 3504.0], [99.8, 3514.0], [99.9, 3518.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 3521.0], [0.1, 3543.0], [0.2, 3553.0], [0.3, 3553.0], [0.4, 3582.0], [0.5, 3596.0], [0.6, 3599.0], [0.7, 3610.0], [0.8, 3636.0], [0.9, 3666.0], [1.0, 3674.0], [1.1, 3697.0], [1.2, 3735.0], [1.3, 3740.0], [1.4, 3740.0], [1.5, 3790.0], [1.6, 3874.0], [1.7, 3879.0], [1.8, 3884.0], [1.9, 3891.0], [2.0, 3902.0], [2.1, 3913.0], [2.2, 3927.0], [2.3, 3927.0], [2.4, 3952.0], [2.5, 3956.0], [2.6, 3962.0], [2.7, 3973.0], [2.8, 3974.0], [2.9, 3981.0], [3.0, 3983.0], [3.1, 3983.0], [3.2, 3993.0], [3.3, 4004.0], [3.4, 4014.0], [3.5, 4016.0], [3.6, 4019.0], [3.7, 4041.0], [3.8, 4043.0], [3.9, 4043.0], [4.0, 4054.0], [4.1, 4054.0], [4.2, 4059.0], [4.3, 4066.0], [4.4, 4066.0], [4.5, 4070.0], [4.6, 4074.0], [4.7, 4083.0], [4.8, 4085.0], [4.9, 4096.0], [5.0, 4105.0], [5.1, 4108.0], [5.2, 4108.0], [5.3, 4111.0], [5.4, 4115.0], [5.5, 4119.0], [5.6, 4123.0], [5.7, 4128.0], [5.8, 4129.0], [5.9, 4152.0], [6.0, 4160.0], [6.1, 4165.0], [6.2, 4167.0], [6.3, 4170.0], [6.4, 4180.0], [6.5, 4187.0], [6.6, 4198.0], [6.7, 4206.0], [6.8, 4211.0], [6.9, 4216.0], [7.0, 4220.0], [7.1, 4236.0], [7.2, 4243.0], [7.3, 4244.0], [7.4, 4246.0], [7.5, 4271.0], [7.6, 4277.0], [7.7, 4287.0], [7.8, 4287.0], [7.9, 4295.0], [8.0, 4295.0], [8.1, 4305.0], [8.2, 4306.0], [8.3, 4310.0], [8.4, 4312.0], [8.5, 4316.0], [8.6, 4317.0], [8.7, 4317.0], [8.8, 4321.0], [8.9, 4333.0], [9.0, 4335.0], [9.1, 4339.0], [9.2, 4341.0], [9.3, 4342.0], [9.4, 4347.0], [9.5, 4351.0], [9.6, 4360.0], [9.7, 4367.0], [9.8, 4368.0], [9.9, 4372.0], [10.0, 4373.0], [10.1, 4375.0], [10.2, 4381.0], [10.3, 4386.0], [10.4, 4391.0], [10.5, 4395.0], [10.6, 4399.0], [10.7, 4401.0], [10.8, 4409.0], [10.9, 4413.0], [11.0, 4418.0], [11.1, 4419.0], [11.2, 4421.0], [11.3, 4426.0], [11.4, 4430.0], [11.5, 4442.0], [11.6, 4444.0], [11.7, 4446.0], [11.8, 4453.0], [11.9, 4454.0], [12.0, 4455.0], [12.1, 4456.0], [12.2, 4464.0], [12.3, 4467.0], [12.4, 4475.0], [12.5, 4479.0], [12.6, 4482.0], [12.7, 4487.0], [12.8, 4497.0], [12.9, 4500.0], [13.0, 4504.0], [13.1, 4506.0], [13.2, 4509.0], [13.3, 4512.0], [13.4, 4520.0], [13.5, 4523.0], [13.6, 4530.0], [13.7, 4536.0], [13.8, 4536.0], [13.9, 4542.0], [14.0, 4543.0], [14.1, 4553.0], [14.2, 4554.0], [14.3, 4558.0], [14.4, 4560.0], [14.5, 4566.0], [14.6, 4568.0], [14.7, 4574.0], [14.8, 4574.0], [14.9, 4579.0], [15.0, 4580.0], [15.1, 4581.0], [15.2, 4582.0], [15.3, 4583.0], [15.4, 4585.0], [15.5, 4587.0], [15.6, 4591.0], [15.7, 4591.0], [15.8, 4593.0], [15.9, 4594.0], [16.0, 4595.0], [16.1, 4597.0], [16.2, 4598.0], [16.3, 4598.0], [16.4, 4601.0], [16.5, 4602.0], [16.6, 4602.0], [16.7, 4602.0], [16.8, 4607.0], [16.9, 4608.0], [17.0, 4616.0], [17.1, 4617.0], [17.2, 4619.0], [17.3, 4621.0], [17.4, 4622.0], [17.5, 4625.0], [17.6, 4629.0], [17.7, 4630.0], [17.8, 4633.0], [17.9, 4637.0], [18.0, 4643.0], [18.1, 4646.0], [18.2, 4647.0], [18.3, 4648.0], [18.4, 4649.0], [18.5, 4650.0], [18.6, 4651.0], [18.7, 4653.0], [18.8, 4659.0], [18.9, 4662.0], [19.0, 4663.0], [19.1, 4666.0], [19.2, 4669.0], [19.3, 4673.0], [19.4, 4673.0], [19.5, 4674.0], [19.6, 4676.0], [19.7, 4676.0], [19.8, 4678.0], [19.9, 4678.0], [20.0, 4687.0], [20.1, 4688.0], [20.2, 4688.0], [20.3, 4692.0], [20.4, 4692.0], [20.5, 4693.0], [20.6, 4695.0], [20.7, 4703.0], [20.8, 4705.0], [20.9, 4706.0], [21.0, 4708.0], [21.1, 4708.0], [21.2, 4711.0], [21.3, 4715.0], [21.4, 4717.0], [21.5, 4717.0], [21.6, 4717.0], [21.7, 4722.0], [21.8, 4723.0], [21.9, 4724.0], [22.0, 4725.0], [22.1, 4726.0], [22.2, 4726.0], [22.3, 4729.0], [22.4, 4729.0], [22.5, 4732.0], [22.6, 4732.0], [22.7, 4734.0], [22.8, 4740.0], [22.9, 4743.0], [23.0, 4747.0], [23.1, 4750.0], [23.2, 4753.0], [23.3, 4757.0], [23.4, 4758.0], [23.5, 4758.0], [23.6, 4761.0], [23.7, 4768.0], [23.8, 4770.0], [23.9, 4774.0], [24.0, 4778.0], [24.1, 4779.0], [24.2, 4780.0], [24.3, 4783.0], [24.4, 4784.0], [24.5, 4789.0], [24.6, 4789.0], [24.7, 4790.0], [24.8, 4791.0], [24.9, 4792.0], [25.0, 4792.0], [25.1, 4792.0], [25.2, 4794.0], [25.3, 4795.0], [25.4, 4797.0], [25.5, 4804.0], [25.6, 4814.0], [25.7, 4818.0], [25.8, 4819.0], [25.9, 4822.0], [26.0, 4826.0], [26.1, 4826.0], [26.2, 4829.0], [26.3, 4834.0], [26.4, 4837.0], [26.5, 4844.0], [26.6, 4844.0], [26.7, 4846.0], [26.8, 4848.0], [26.9, 4853.0], [27.0, 4853.0], [27.1, 4863.0], [27.2, 4863.0], [27.3, 4864.0], [27.4, 4866.0], [27.5, 4870.0], [27.6, 4871.0], [27.7, 4872.0], [27.8, 4873.0], [27.9, 4875.0], [28.0, 4876.0], [28.1, 4877.0], [28.2, 4880.0], [28.3, 4880.0], [28.4, 4883.0], [28.5, 4885.0], [28.6, 4888.0], [28.7, 4890.0], [28.8, 4892.0], [28.9, 4892.0], [29.0, 4894.0], [29.1, 4895.0], [29.2, 4898.0], [29.3, 4902.0], [29.4, 4911.0], [29.5, 4913.0], [29.6, 4915.0], [29.7, 4915.0], [29.8, 4915.0], [29.9, 4916.0], [30.0, 4917.0], [30.1, 4917.0], [30.2, 4918.0], [30.3, 4919.0], [30.4, 4920.0], [30.5, 4920.0], [30.6, 4922.0], [30.7, 4924.0], [30.8, 4924.0], [30.9, 4927.0], [31.0, 4929.0], [31.1, 4930.0], [31.2, 4931.0], [31.3, 4938.0], [31.4, 4939.0], [31.5, 4946.0], [31.6, 4946.0], [31.7, 4952.0], [31.8, 4959.0], [31.9, 4960.0], [32.0, 4961.0], [32.1, 4961.0], [32.2, 4964.0], [32.3, 4965.0], [32.4, 4965.0], [32.5, 4966.0], [32.6, 4976.0], [32.7, 4980.0], [32.8, 4984.0], [32.9, 4988.0], [33.0, 4993.0], [33.1, 4993.0], [33.2, 4995.0], [33.3, 4997.0], [33.4, 4998.0], [33.5, 5014.0], [33.6, 5015.0], [33.7, 5016.0], [33.8, 5019.0], [33.9, 5020.0], [34.0, 5025.0], [34.1, 5027.0], [34.2, 5031.0], [34.3, 5035.0], [34.4, 5038.0], [34.5, 5040.0], [34.6, 5044.0], [34.7, 5045.0], [34.8, 5047.0], [34.9, 5047.0], [35.0, 5049.0], [35.1, 5050.0], [35.2, 5052.0], [35.3, 5056.0], [35.4, 5060.0], [35.5, 5061.0], [35.6, 5065.0], [35.7, 5065.0], [35.8, 5070.0], [35.9, 5074.0], [36.0, 5076.0], [36.1, 5076.0], [36.2, 5081.0], [36.3, 5082.0], [36.4, 5084.0], [36.5, 5098.0], [36.6, 5099.0], [36.7, 5100.0], [36.8, 5103.0], [36.9, 5103.0], [37.0, 5107.0], [37.1, 5108.0], [37.2, 5117.0], [37.3, 5119.0], [37.4, 5123.0], [37.5, 5127.0], [37.6, 5136.0], [37.7, 5136.0], [37.8, 5140.0], [37.9, 5144.0], [38.0, 5155.0], [38.1, 5156.0], [38.2, 5157.0], [38.3, 5157.0], [38.4, 5157.0], [38.5, 5159.0], [38.6, 5159.0], [38.7, 5160.0], [38.8, 5161.0], [38.9, 5163.0], [39.0, 5165.0], [39.1, 5165.0], [39.2, 5166.0], [39.3, 5169.0], [39.4, 5170.0], [39.5, 5178.0], [39.6, 5188.0], [39.7, 5189.0], [39.8, 5192.0], [39.9, 5195.0], [40.0, 5195.0], [40.1, 5196.0], [40.2, 5196.0], [40.3, 5197.0], [40.4, 5197.0], [40.5, 5203.0], [40.6, 5204.0], [40.7, 5205.0], [40.8, 5207.0], [40.9, 5220.0], [41.0, 5227.0], [41.1, 5230.0], [41.2, 5233.0], [41.3, 5236.0], [41.4, 5242.0], [41.5, 5246.0], [41.6, 5247.0], [41.7, 5248.0], [41.8, 5248.0], [41.9, 5250.0], [42.0, 5251.0], [42.1, 5251.0], [42.2, 5263.0], [42.3, 5263.0], [42.4, 5268.0], [42.5, 5268.0], [42.6, 5270.0], [42.7, 5270.0], [42.8, 5272.0], [42.9, 5273.0], [43.0, 5273.0], [43.1, 5273.0], [43.2, 5284.0], [43.3, 5289.0], [43.4, 5294.0], [43.5, 5305.0], [43.6, 5312.0], [43.7, 5312.0], [43.8, 5313.0], [43.9, 5318.0], [44.0, 5326.0], [44.1, 5332.0], [44.2, 5333.0], [44.3, 5334.0], [44.4, 5336.0], [44.5, 5337.0], [44.6, 5339.0], [44.7, 5342.0], [44.8, 5342.0], [44.9, 5343.0], [45.0, 5352.0], [45.1, 5352.0], [45.2, 5355.0], [45.3, 5359.0], [45.4, 5362.0], [45.5, 5364.0], [45.6, 5369.0], [45.7, 5369.0], [45.8, 5373.0], [45.9, 5380.0], [46.0, 5381.0], [46.1, 5383.0], [46.2, 5383.0], [46.3, 5386.0], [46.4, 5388.0], [46.5, 5388.0], [46.6, 5388.0], [46.7, 5389.0], [46.8, 5389.0], [46.9, 5393.0], [47.0, 5394.0], [47.1, 5396.0], [47.2, 5399.0], [47.3, 5404.0], [47.4, 5404.0], [47.5, 5404.0], [47.6, 5406.0], [47.7, 5406.0], [47.8, 5407.0], [47.9, 5407.0], [48.0, 5411.0], [48.1, 5411.0], [48.2, 5413.0], [48.3, 5419.0], [48.4, 5425.0], [48.5, 5425.0], [48.6, 5425.0], [48.7, 5425.0], [48.8, 5425.0], [48.9, 5426.0], [49.0, 5429.0], [49.1, 5430.0], [49.2, 5431.0], [49.3, 5431.0], [49.4, 5440.0], [49.5, 5440.0], [49.6, 5442.0], [49.7, 5443.0], [49.8, 5445.0], [49.9, 5446.0], [50.0, 5457.0], [50.1, 5463.0], [50.2, 5468.0], [50.3, 5468.0], [50.4, 5471.0], [50.5, 5473.0], [50.6, 5473.0], [50.7, 5475.0], [50.8, 5480.0], [50.9, 5481.0], [51.0, 5481.0], [51.1, 5482.0], [51.2, 5482.0], [51.3, 5496.0], [51.4, 5499.0], [51.5, 5502.0], [51.6, 5507.0], [51.7, 5510.0], [51.8, 5516.0], [51.9, 5525.0], [52.0, 5553.0], [52.1, 5559.0], [52.2, 5563.0], [52.3, 5564.0], [52.4, 5565.0], [52.5, 5570.0], [52.6, 5571.0], [52.7, 5580.0], [52.8, 5581.0], [52.9, 5606.0], [53.0, 5608.0], [53.1, 5613.0], [53.2, 5617.0], [53.3, 5623.0], [53.4, 5639.0], [53.5, 5642.0], [53.6, 5642.0], [53.7, 5646.0], [53.8, 5670.0], [53.9, 5672.0], [54.0, 5673.0], [54.1, 5675.0], [54.2, 5675.0], [54.3, 5678.0], [54.4, 5690.0], [54.5, 5690.0], [54.6, 5693.0], [54.7, 5705.0], [54.8, 5706.0], [54.9, 5708.0], [55.0, 5709.0], [55.1, 5710.0], [55.2, 5713.0], [55.3, 5717.0], [55.4, 5719.0], [55.5, 5719.0], [55.6, 5720.0], [55.7, 5721.0], [55.8, 5724.0], [55.9, 5724.0], [56.0, 5725.0], [56.1, 5727.0], [56.2, 5732.0], [56.3, 5738.0], [56.4, 5742.0], [56.5, 5744.0], [56.6, 5746.0], [56.7, 5753.0], [56.8, 5760.0], [56.9, 5760.0], [57.0, 5802.0], [57.1, 5802.0], [57.2, 5807.0], [57.3, 5809.0], [57.4, 5810.0], [57.5, 5811.0], [57.6, 5819.0], [57.7, 5823.0], [57.8, 5825.0], [57.9, 5832.0], [58.0, 5833.0], [58.1, 5837.0], [58.2, 5837.0], [58.3, 5844.0], [58.4, 5849.0], [58.5, 5852.0], [58.6, 5856.0], [58.7, 5857.0], [58.8, 5861.0], [58.9, 5868.0], [59.0, 5869.0], [59.1, 5869.0], [59.2, 5890.0], [59.3, 5893.0], [59.4, 5894.0], [59.5, 5896.0], [59.6, 5897.0], [59.7, 5898.0], [59.8, 5906.0], [59.9, 5910.0], [60.0, 5914.0], [60.1, 5916.0], [60.2, 5920.0], [60.3, 5920.0], [60.4, 5924.0], [60.5, 5927.0], [60.6, 5932.0], [60.7, 5933.0], [60.8, 5935.0], [60.9, 5937.0], [61.0, 5938.0], [61.1, 5943.0], [61.2, 5944.0], [61.3, 5946.0], [61.4, 5947.0], [61.5, 5947.0], [61.6, 5948.0], [61.7, 5950.0], [61.8, 5951.0], [61.9, 5953.0], [62.0, 5954.0], [62.1, 5955.0], [62.2, 5958.0], [62.3, 5967.0], [62.4, 5971.0], [62.5, 5973.0], [62.6, 5977.0], [62.7, 5978.0], [62.8, 5979.0], [62.9, 5990.0], [63.0, 5992.0], [63.1, 5993.0], [63.2, 5993.0], [63.3, 5996.0], [63.4, 5999.0], [63.5, 6008.0], [63.6, 6008.0], [63.7, 6015.0], [63.8, 6017.0], [63.9, 6019.0], [64.0, 6021.0], [64.1, 6021.0], [64.2, 6023.0], [64.3, 6026.0], [64.4, 6027.0], [64.5, 6028.0], [64.6, 6029.0], [64.7, 6036.0], [64.8, 6037.0], [64.9, 6038.0], [65.0, 6040.0], [65.1, 6040.0], [65.2, 6047.0], [65.3, 6049.0], [65.4, 6050.0], [65.5, 6051.0], [65.6, 6053.0], [65.7, 6057.0], [65.8, 6058.0], [65.9, 6059.0], [66.0, 6063.0], [66.1, 6063.0], [66.2, 6063.0], [66.3, 6063.0], [66.4, 6072.0], [66.5, 6075.0], [66.6, 6087.0], [66.7, 6088.0], [66.8, 6088.0], [66.9, 6091.0], [67.0, 6096.0], [67.1, 6098.0], [67.2, 6098.0], [67.3, 6098.0], [67.4, 6101.0], [67.5, 6102.0], [67.6, 6108.0], [67.7, 6111.0], [67.8, 6113.0], [67.9, 6114.0], [68.0, 6115.0], [68.1, 6116.0], [68.2, 6121.0], [68.3, 6124.0], [68.4, 6125.0], [68.5, 6137.0], [68.6, 6137.0], [68.7, 6138.0], [68.8, 6144.0], [68.9, 6147.0], [69.0, 6152.0], [69.1, 6152.0], [69.2, 6153.0], [69.3, 6154.0], [69.4, 6168.0], [69.5, 6179.0], [69.6, 6182.0], [69.7, 6184.0], [69.8, 6186.0], [69.9, 6192.0], [70.0, 6196.0], [70.1, 6196.0], [70.2, 6199.0], [70.3, 6213.0], [70.4, 6213.0], [70.5, 6215.0], [70.6, 6216.0], [70.7, 6217.0], [70.8, 6218.0], [70.9, 6219.0], [71.0, 6226.0], [71.1, 6239.0], [71.2, 6252.0], [71.3, 6265.0], [71.4, 6271.0], [71.5, 6286.0], [71.6, 6289.0], [71.7, 6291.0], [71.8, 6294.0], [71.9, 6294.0], [72.0, 6295.0], [72.1, 6295.0], [72.2, 6296.0], [72.3, 6306.0], [72.4, 6307.0], [72.5, 6311.0], [72.6, 6313.0], [72.7, 6331.0], [72.8, 6338.0], [72.9, 6338.0], [73.0, 6343.0], [73.1, 6344.0], [73.2, 6348.0], [73.3, 6348.0], [73.4, 6356.0], [73.5, 6364.0], [73.6, 6365.0], [73.7, 6368.0], [73.8, 6369.0], [73.9, 6374.0], [74.0, 6378.0], [74.1, 6394.0], [74.2, 6401.0], [74.3, 6403.0], [74.4, 6410.0], [74.5, 6412.0], [74.6, 6419.0], [74.7, 6419.0], [74.8, 6425.0], [74.9, 6427.0], [75.0, 6435.0], [75.1, 6446.0], [75.2, 6454.0], [75.3, 6472.0], [75.4, 6476.0], [75.5, 6488.0], [75.6, 6490.0], [75.7, 6496.0], [75.8, 6499.0], [75.9, 6503.0], [76.0, 6509.0], [76.1, 6512.0], [76.2, 6517.0], [76.3, 6517.0], [76.4, 6518.0], [76.5, 6523.0], [76.6, 6525.0], [76.7, 6525.0], [76.8, 6526.0], [76.9, 6526.0], [77.0, 6532.0], [77.1, 6534.0], [77.2, 6535.0], [77.3, 6536.0], [77.4, 6543.0], [77.5, 6548.0], [77.6, 6550.0], [77.7, 6556.0], [77.8, 6558.0], [77.9, 6560.0], [78.0, 6572.0], [78.1, 6573.0], [78.2, 6573.0], [78.3, 6573.0], [78.4, 6578.0], [78.5, 6579.0], [78.6, 6582.0], [78.7, 6586.0], [78.8, 6590.0], [78.9, 6594.0], [79.0, 6601.0], [79.1, 6604.0], [79.2, 6622.0], [79.3, 6626.0], [79.4, 6628.0], [79.5, 6644.0], [79.6, 6647.0], [79.7, 6651.0], [79.8, 6654.0], [79.9, 6658.0], [80.0, 6658.0], [80.1, 6665.0], [80.2, 6697.0], [80.3, 6704.0], [80.4, 6708.0], [80.5, 6737.0], [80.6, 6740.0], [80.7, 6742.0], [80.8, 6744.0], [80.9, 6744.0], [81.0, 6744.0], [81.1, 6755.0], [81.2, 6755.0], [81.3, 6757.0], [81.4, 6760.0], [81.5, 6766.0], [81.6, 6788.0], [81.7, 6789.0], [81.8, 6794.0], [81.9, 6795.0], [82.0, 6824.0], [82.1, 6825.0], [82.2, 6831.0], [82.3, 6832.0], [82.4, 6855.0], [82.5, 6855.0], [82.6, 6856.0], [82.7, 6859.0], [82.8, 6860.0], [82.9, 6863.0], [83.0, 6869.0], [83.1, 6877.0], [83.2, 6880.0], [83.3, 6884.0], [83.4, 6885.0], [83.5, 6892.0], [83.6, 6902.0], [83.7, 6908.0], [83.8, 6909.0], [83.9, 6912.0], [84.0, 6913.0], [84.1, 6915.0], [84.2, 6922.0], [84.3, 6923.0], [84.4, 6923.0], [84.5, 6925.0], [84.6, 6940.0], [84.7, 6940.0], [84.8, 6960.0], [84.9, 6960.0], [85.0, 6962.0], [85.1, 6968.0], [85.2, 6977.0], [85.3, 6993.0], [85.4, 7009.0], [85.5, 7015.0], [85.6, 7015.0], [85.7, 7016.0], [85.8, 7018.0], [85.9, 7025.0], [86.0, 7030.0], [86.1, 7031.0], [86.2, 7036.0], [86.3, 7036.0], [86.4, 7039.0], [86.5, 7043.0], [86.6, 7048.0], [86.7, 7052.0], [86.8, 7054.0], [86.9, 7062.0], [87.0, 7066.0], [87.1, 7070.0], [87.2, 7073.0], [87.3, 7095.0], [87.4, 7115.0], [87.5, 7118.0], [87.6, 7131.0], [87.7, 7132.0], [87.8, 7137.0], [87.9, 7162.0], [88.0, 7168.0], [88.1, 7171.0], [88.2, 7182.0], [88.3, 7187.0], [88.4, 7191.0], [88.5, 7218.0], [88.6, 7219.0], [88.7, 7225.0], [88.8, 7227.0], [88.9, 7234.0], [89.0, 7241.0], [89.1, 7263.0], [89.2, 7270.0], [89.3, 7275.0], [89.4, 7279.0], [89.5, 7288.0], [89.6, 7299.0], [89.7, 7300.0], [89.8, 7319.0], [89.9, 7325.0], [90.0, 7327.0], [90.1, 7329.0], [90.2, 7338.0], [90.3, 7348.0], [90.4, 7401.0], [90.5, 7429.0], [90.6, 7430.0], [90.7, 7433.0], [90.8, 7455.0], [90.9, 7475.0], [91.0, 7480.0], [91.1, 7480.0], [91.2, 7480.0], [91.3, 7483.0], [91.4, 7496.0], [91.5, 7497.0], [91.6, 7498.0], [91.7, 7529.0], [91.8, 7536.0], [91.9, 7541.0], [92.0, 7550.0], [92.1, 7595.0], [92.2, 7597.0], [92.3, 7599.0], [92.4, 7611.0], [92.5, 7629.0], [92.6, 7629.0], [92.7, 7635.0], [92.8, 7635.0], [92.9, 7639.0], [93.0, 7640.0], [93.1, 7645.0], [93.2, 7649.0], [93.3, 7656.0], [93.4, 7657.0], [93.5, 7658.0], [93.6, 7660.0], [93.7, 7668.0], [93.8, 7677.0], [93.9, 7677.0], [94.0, 7684.0], [94.1, 7735.0], [94.2, 7739.0], [94.3, 7766.0], [94.4, 7793.0], [94.5, 7828.0], [94.6, 7841.0], [94.7, 7842.0], [94.8, 7864.0], [94.9, 7869.0], [95.0, 7903.0], [95.1, 7947.0], [95.2, 8006.0], [95.3, 8030.0], [95.4, 8041.0], [95.5, 8097.0], [95.6, 8107.0], [95.7, 8132.0], [95.8, 8175.0], [95.9, 8196.0], [96.0, 8242.0], [96.1, 8248.0], [96.2, 8285.0], [96.3, 8398.0], [96.4, 8537.0], [96.5, 8847.0], [96.6, 8875.0], [96.7, 8999.0], [96.8, 9063.0], [96.9, 9131.0], [97.0, 9149.0], [97.1, 9258.0], [97.2, 9350.0], [97.3, 9396.0], [97.4, 9508.0], [97.5, 9651.0], [97.6, 9765.0], [97.7, 9990.0], [97.8, 10002.0], [97.9, 10087.0], [98.0, 10119.0], [98.1, 10128.0], [98.2, 10152.0], [98.3, 10154.0], [98.4, 10165.0], [98.5, 10168.0], [98.6, 10178.0], [98.7, 10242.0], [98.8, 10249.0], [98.9, 10364.0], [99.0, 10382.0], [99.1, 10484.0], [99.2, 10491.0], [99.3, 10539.0], [99.4, 10572.0], [99.5, 10661.0], [99.6, 10714.0], [99.7, 10736.0], [99.8, 10788.0], [99.9, 11149.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 600.0, "maxY": 127.0, "series": [{"data": [[600.0, 1.0], [900.0, 5.0], [1100.0, 3.0], [1200.0, 5.0], [1300.0, 8.0], [1400.0, 8.0], [1500.0, 2.0], [1600.0, 7.0], [1700.0, 14.0], [1800.0, 12.0], [1900.0, 12.0], [2000.0, 14.0], [2100.0, 20.0], [2200.0, 29.0], [2300.0, 40.0], [2400.0, 42.0], [2500.0, 17.0], [2600.0, 9.0], [2800.0, 46.0], [2700.0, 19.0], [2900.0, 29.0], [3000.0, 8.0], [3100.0, 45.0], [3200.0, 58.0], [3300.0, 54.0], [3400.0, 63.0], [3500.0, 31.0], [3600.0, 27.0], [3700.0, 24.0], [3800.0, 7.0], [3900.0, 20.0], [4000.0, 17.0], [4100.0, 16.0], [4200.0, 30.0], [4300.0, 36.0], [4400.0, 37.0], [4600.0, 20.0], [4500.0, 24.0], [4700.0, 7.0], [4800.0, 12.0], [4900.0, 11.0], [5100.0, 12.0], [5000.0, 5.0], [5200.0, 2.0], [5300.0, 5.0], [5400.0, 4.0], [5500.0, 2.0], [5600.0, 6.0], [5800.0, 10.0], [5700.0, 4.0], [5900.0, 3.0], [6000.0, 5.0], [6100.0, 5.0], [6200.0, 2.0], [6300.0, 1.0], [6400.0, 2.0], [6500.0, 4.0], [6600.0, 2.0], [6800.0, 1.0], [6900.0, 3.0], [6700.0, 2.0], [7100.0, 1.0], [7000.0, 2.0], [7400.0, 2.0], [7200.0, 3.0], [7500.0, 2.0], [7600.0, 2.0], [7700.0, 1.0], [7800.0, 1.0], [8100.0, 1.0], [8000.0, 1.0], [8300.0, 1.0], [8400.0, 1.0], [8700.0, 2.0], [8600.0, 1.0], [8800.0, 4.0], [8900.0, 4.0], [9200.0, 1.0], [9300.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1100.0, 28.0], [1200.0, 28.0], [1300.0, 27.0], [1400.0, 127.0], [1500.0, 62.0], [1600.0, 69.0], [1700.0, 35.0], [1800.0, 83.0], [1900.0, 101.0], [2000.0, 4.0], [2100.0, 6.0], [2200.0, 41.0], [2300.0, 11.0], [2400.0, 30.0], [2500.0, 38.0], [2600.0, 52.0], [2700.0, 39.0], [2800.0, 28.0], [2900.0, 41.0], [3000.0, 26.0], [3100.0, 45.0], [3300.0, 13.0], [3200.0, 46.0], [3400.0, 16.0], [3500.0, 4.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[3500.0, 7.0], [3600.0, 5.0], [3700.0, 3.0], [3800.0, 4.0], [3900.0, 13.0], [4000.0, 18.0], [4100.0, 17.0], [4200.0, 14.0], [4300.0, 26.0], [4500.0, 35.0], [4400.0, 22.0], [4600.0, 42.0], [4700.0, 48.0], [4800.0, 38.0], [5000.0, 32.0], [4900.0, 42.0], [5100.0, 38.0], [5200.0, 30.0], [5300.0, 38.0], [5400.0, 42.0], [5500.0, 14.0], [5600.0, 18.0], [5700.0, 23.0], [5800.0, 28.0], [5900.0, 37.0], [6000.0, 39.0], [6100.0, 29.0], [6200.0, 20.0], [6300.0, 19.0], [6400.0, 17.0], [6500.0, 32.0], [6600.0, 13.0], [6700.0, 17.0], [6800.0, 16.0], [6900.0, 18.0], [7000.0, 20.0], [7100.0, 11.0], [7200.0, 12.0], [7300.0, 7.0], [7400.0, 13.0], [7500.0, 7.0], [7600.0, 17.0], [7700.0, 4.0], [7800.0, 5.0], [7900.0, 2.0], [8000.0, 4.0], [8100.0, 4.0], [8200.0, 3.0], [8300.0, 1.0], [8500.0, 1.0], [8800.0, 2.0], [9000.0, 1.0], [9100.0, 2.0], [8900.0, 1.0], [9200.0, 1.0], [9300.0, 2.0], [9500.0, 1.0], [9600.0, 1.0], [9700.0, 1.0], [10000.0, 2.0], [10100.0, 7.0], [9900.0, 1.0], [10200.0, 2.0], [10300.0, 2.0], [10400.0, 2.0], [10700.0, 3.0], [10500.0, 2.0], [10600.0, 1.0], [11100.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 212.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1846.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 212.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 942.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1846.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 503.31399999999917, "minX": 1.70282034E12, "maxY": 503.31399999999917, "series": [{"data": [[1.70282034E12, 503.31399999999917]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282034E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 692.0, "minX": 1.0, "maxY": 11149.0, "series": [{"data": [[2.0, 8074.0], [3.0, 9238.0], [4.0, 8894.0], [5.0, 8972.0], [6.0, 8970.0], [7.0, 8940.0], [8.0, 8852.0], [9.0, 8939.0], [10.0, 8818.0], [11.0, 8789.0], [12.0, 8813.0], [13.0, 7231.0], [14.0, 7592.0], [15.0, 7655.0], [16.0, 8676.0], [17.0, 8742.0], [18.0, 7013.0], [19.0, 6791.0], [20.0, 8409.0], [21.0, 7202.0], [22.0, 7200.0], [23.0, 7050.0], [24.0, 8189.0], [25.0, 8304.0], [26.0, 6903.0], [27.0, 6548.0], [28.0, 7869.0], [29.0, 7696.0], [30.0, 7780.0], [31.0, 7576.0], [33.0, 7407.0], [32.0, 7162.0], [35.0, 6917.0], [34.0, 7494.0], [37.0, 6673.0], [36.0, 6735.0], [39.0, 6828.0], [38.0, 6912.0], [41.0, 6653.0], [40.0, 6210.0], [43.0, 6102.0], [42.0, 6526.0], [45.0, 6562.0], [44.0, 5173.0], [47.0, 6514.0], [46.0, 6165.0], [49.0, 6025.0], [48.0, 6412.0], [51.0, 6062.0], [50.0, 6336.0], [53.0, 6012.0], [52.0, 6422.0], [55.0, 6295.0], [54.0, 4970.0], [57.0, 6185.0], [56.0, 6187.0], [59.0, 6137.0], [58.0, 5850.0], [61.0, 5857.0], [60.0, 6055.0], [63.0, 5969.0], [62.0, 5854.0], [67.0, 5882.0], [66.0, 5939.0], [65.0, 6014.0], [64.0, 5749.0], [71.0, 5871.0], [70.0, 5863.0], [69.0, 5967.0], [68.0, 5809.0], [75.0, 5719.0], [74.0, 5865.0], [73.0, 5472.0], [72.0, 5820.0], [78.0, 5677.0], [77.0, 5399.0], [76.0, 5770.0], [81.0, 5263.333333333333], [87.0, 4667.0], [86.0, 5694.5], [84.0, 5058.0], [91.0, 4469.0], [90.0, 4534.0], [89.0, 4653.0], [88.0, 4657.0], [99.0, 5380.0], [98.0, 4477.0], [97.0, 4453.0], [96.0, 4699.4], [102.0, 4515.0], [101.0, 4513.0], [100.0, 5654.0], [107.0, 4361.0], [106.0, 4462.5], [108.0, 4510.0], [115.0, 4354.0], [114.0, 5663.0], [113.0, 4491.0], [119.0, 4021.0], [118.0, 4179.0], [117.0, 4432.0], [123.0, 4149.0], [122.0, 4179.0], [120.0, 3990.0], [126.0, 4161.0], [125.0, 4011.0], [124.0, 4155.0], [133.0, 5582.0], [132.0, 3290.0], [131.0, 4364.0], [130.0, 4307.0], [129.0, 4016.0], [128.0, 4740.0], [143.0, 5121.0], [142.0, 3779.0], [141.0, 4426.0], [140.0, 4981.75], [139.0, 4456.0], [138.0, 4901.0], [150.0, 4086.5], [148.0, 5122.0], [146.0, 4236.0], [145.0, 4236.0], [144.0, 4484.0], [159.0, 4408.0], [156.0, 4208.0], [155.0, 4123.0], [154.0, 5376.0], [153.0, 5167.666666666667], [166.0, 4369.666666666667], [165.0, 3766.0], [162.0, 5198.0], [160.0, 4170.0], [175.0, 4022.0], [173.0, 4708.0], [172.0, 4207.0], [170.0, 4003.0], [169.0, 3943.3333333333335], [182.0, 3707.0], [181.0, 3741.0], [179.0, 3944.0], [178.0, 5224.0], [177.0, 3947.0], [176.0, 3945.0], [189.0, 5162.0], [188.0, 3970.0], [187.0, 3421.0], [186.0, 4747.0], [185.0, 5022.0], [199.0, 4250.666666666667], [196.0, 5004.0], [195.0, 4262.666666666667], [193.0, 4525.333333333333], [207.0, 5131.0], [206.0, 5129.0], [204.0, 5130.0], [203.0, 3881.5], [202.0, 3831.0], [201.0, 3735.0], [215.0, 3581.0], [214.0, 3520.0], [213.0, 4966.0], [212.0, 3323.0], [210.0, 3676.0], [209.0, 3888.0], [208.0, 4994.0], [223.0, 4898.0], [222.0, 4994.0], [221.0, 4284.0], [219.0, 3309.0], [218.0, 4960.0], [216.0, 4968.0], [230.0, 3323.0], [229.0, 4898.0], [228.0, 4523.0], [227.0, 4983.0], [226.0, 4374.5], [224.0, 3485.0], [239.0, 4747.0], [238.0, 3425.0], [237.0, 4553.5], [233.0, 4719.0], [232.0, 3938.0], [247.0, 3671.0], [244.0, 3672.0], [242.0, 3422.0], [241.0, 4625.5], [255.0, 4822.0], [254.0, 4811.0], [252.0, 4212.666666666667], [249.0, 4023.6666666666665], [248.0, 3535.0], [259.0, 3754.5], [271.0, 4466.0], [267.0, 3683.0], [265.0, 3655.5], [263.0, 3376.0], [262.0, 3747.0], [261.0, 3747.0], [257.0, 3755.0], [256.0, 4799.5], [285.0, 3446.0], [284.0, 3347.0], [283.0, 4449.0], [282.0, 2441.0], [281.0, 3408.0], [280.0, 4124.5], [276.0, 3588.0], [274.0, 3292.0], [273.0, 3457.0], [272.0, 3561.75], [303.0, 3808.0], [302.0, 3926.0], [292.0, 3423.0], [291.0, 3491.0], [290.0, 3921.0], [288.0, 4301.0], [307.0, 3676.0], [317.0, 4234.0], [318.0, 4119.333333333333], [316.0, 4605.0], [305.0, 4668.0], [304.0, 3413.5], [306.0, 4691.0], [313.0, 4539.0], [312.0, 3687.0], [311.0, 3462.6666666666665], [310.0, 4683.0], [309.0, 3458.3333333333335], [308.0, 2850.5], [334.0, 4178.666666666667], [331.0, 3209.6666666666665], [328.0, 3890.8333333333335], [326.0, 4276.0], [324.0, 3750.5], [321.0, 4603.0], [348.0, 3551.25], [351.0, 3175.0], [350.0, 4623.0], [349.0, 4654.0], [344.0, 3181.0], [343.0, 4535.0], [342.0, 3381.0], [339.0, 4339.666666666667], [338.0, 4394.5], [366.0, 2934.0], [367.0, 2752.0], [365.0, 3332.0], [364.0, 3335.0], [363.0, 3335.0], [362.0, 3364.0], [361.0, 3363.0], [360.0, 3185.0], [359.0, 3383.0], [354.0, 3160.0], [357.0, 3508.0], [356.0, 3959.75], [382.0, 4415.25], [378.0, 3359.25], [374.0, 3225.0], [373.0, 3355.0], [371.0, 4497.0], [370.0, 4360.0], [369.0, 4402.0], [368.0, 4355.0], [399.0, 4077.5], [395.0, 3312.5], [393.0, 3332.0], [392.0, 4120.0], [390.0, 4350.0], [389.0, 4288.0], [413.0, 4368.0], [415.0, 3770.0], [412.0, 4431.5], [410.0, 3030.6666666666665], [408.0, 4313.0], [406.0, 3962.0], [405.0, 4289.0], [404.0, 2976.0], [401.0, 3203.0], [431.0, 4358.0], [427.0, 4367.2], [422.0, 2748.0], [421.0, 2746.0], [420.0, 2740.0], [419.0, 4361.0], [447.0, 4286.0], [446.0, 4271.666666666667], [440.0, 4129.333333333334], [437.0, 4316.0], [433.0, 3661.5], [462.0, 4131.0], [463.0, 3890.0], [461.0, 4250.0], [460.0, 2622.0], [459.0, 3274.0], [458.0, 4278.0], [456.0, 4213.0], [455.0, 4272.0], [451.0, 4112.8], [448.0, 4270.0], [453.0, 4233.0], [478.0, 2918.0], [477.0, 3903.0], [476.0, 3351.0], [474.0, 4051.0], [473.0, 4080.0], [472.0, 2699.5], [470.0, 3105.25], [466.0, 2892.0], [495.0, 3006.0], [494.0, 2681.3333333333335], [483.0, 3438.0], [482.0, 2890.3333333333335], [491.0, 2577.0], [490.0, 2799.0], [489.0, 2857.0], [488.0, 2810.0], [487.0, 4080.5], [485.0, 3659.0], [484.0, 4044.0], [510.0, 3324.0], [508.0, 3480.0], [506.0, 2721.0], [503.0, 2146.0], [502.0, 2342.6666666666665], [499.0, 3670.0], [498.0, 3961.0], [497.0, 3802.0], [527.0, 3695.5], [542.0, 3356.0], [536.0, 3448.6], [519.0, 3337.3333333333335], [516.0, 3072.6666666666665], [531.0, 3469.0], [529.0, 1752.5], [526.0, 3680.0], [524.0, 2969.5], [522.0, 3659.0], [521.0, 2340.0], [520.0, 3598.0], [575.0, 3316.0], [566.0, 2824.3750000000005], [558.0, 3233.5], [554.0, 3392.5], [555.0, 3255.0], [551.0, 3364.25], [547.0, 3371.0], [546.0, 2462.0], [594.0, 3536.6666666666665], [606.0, 2234.0], [607.0, 2354.0], [592.0, 3475.0], [604.0, 2263.0], [601.0, 1833.0], [600.0, 3075.75], [584.0, 3182.75], [577.0, 3284.0], [576.0, 3179.0], [580.0, 3211.5], [579.0, 3306.6666666666665], [583.0, 3511.0], [598.0, 3427.25], [597.0, 3260.0], [595.0, 3061.6666666666665], [623.0, 3148.4], [632.0, 2252.0], [631.0, 2291.75], [627.0, 3130.75], [620.0, 3422.0], [619.0, 2675.0], [618.0, 2802.5], [616.0, 2898.3333333333335], [615.0, 2342.0], [614.0, 3239.0], [613.0, 2337.0], [667.0, 2599.6666666666665], [670.0, 2349.0], [671.0, 2813.0], [668.0, 2323.0], [665.0, 2417.5], [664.0, 2197.0], [661.0, 2086.0], [656.0, 2129.75], [655.0, 2304.5], [640.0, 2838.8750000000005], [645.0, 2321.0], [642.0, 2418.0], [654.0, 2185.5], [653.0, 2110.0], [652.0, 2282.5], [649.0, 3413.0], [648.0, 2318.0], [702.0, 3210.0], [703.0, 2671.6666666666665], [691.0, 2933.0], [699.0, 3107.0], [698.0, 2141.0], [697.0, 2166.0], [696.0, 2171.0], [686.0, 2683.0], [673.0, 2244.0], [676.0, 2273.8], [674.0, 2676.5], [678.0, 2262.0], [677.0, 2182.0], [685.0, 2321.0], [684.0, 3282.5], [680.0, 2226.0], [695.0, 3406.0], [694.0, 2457.6], [693.0, 2321.0], [692.0, 2107.0], [733.0, 2238.0], [728.0, 2859.5], [724.0, 2860.0833333333335], [722.0, 2392.0], [718.0, 3528.0], [717.0, 3441.5], [716.0, 2122.0], [707.0, 2431.0], [766.0, 2348.5], [767.0, 2336.0], [764.0, 1184.0], [763.0, 3364.0], [762.0, 3244.25], [741.0, 3268.416666666667], [758.0, 3130.5], [757.0, 3344.0], [755.0, 2029.0], [750.0, 2735.6666666666665], [747.0, 3463.0], [745.0, 3389.25], [798.0, 1859.0], [799.0, 2970.0], [797.0, 2320.0], [796.0, 3007.0], [795.0, 2919.0], [775.0, 3296.0], [774.0, 3287.0], [772.0, 1774.0], [771.0, 3444.0], [770.0, 1916.0], [789.0, 2726.0], [787.0, 3365.0], [784.0, 2338.0], [782.0, 3299.0], [781.0, 2234.0], [780.0, 1778.0], [779.0, 3123.0], [778.0, 2449.0], [776.0, 2138.0], [800.0, 1942.0], [861.0, 2893.0], [863.0, 3037.5], [851.0, 2943.764705882353], [850.0, 2941.409090909091], [860.0, 3171.0], [859.0, 3263.0], [858.0, 3265.0], [857.0, 2792.0], [856.0, 2280.0], [847.0, 3086.0], [844.0, 2950.3333333333335], [843.0, 2993.5], [841.0, 2881.0], [853.0, 3202.5], [852.0, 3047.8], [889.0, 2345.75], [881.0, 2514.0], [893.0, 2584.6666666666665], [894.0, 1897.0], [880.0, 2944.0], [890.0, 2527.0], [888.0, 1579.0], [871.0, 2606.0], [870.0, 2827.0], [869.0, 3248.5], [867.0, 3243.0], [866.0, 3175.0], [865.0, 2888.5], [879.0, 1856.0], [878.0, 2881.0], [877.0, 3177.0], [876.0, 1933.0], [875.0, 2818.0], [887.0, 2877.0], [883.0, 1915.0], [882.0, 2967.0], [913.0, 2484.0], [924.0, 2703.5], [922.0, 2266.5], [920.0, 2416.0], [902.0, 2868.0], [899.0, 2117.2], [917.0, 1650.0], [916.0, 1742.0], [915.0, 2340.0], [912.0, 2184.5], [911.0, 1752.0], [908.0, 1753.0], [905.0, 1223.0], [904.0, 2880.0], [958.0, 1269.0], [959.0, 1423.0], [946.0, 2894.5], [944.0, 1745.0], [957.0, 1389.0], [956.0, 1216.0], [955.0, 1739.6666666666667], [954.0, 2697.0], [952.0, 1371.0], [930.0, 2522.0], [929.0, 2227.0], [928.0, 2816.0], [943.0, 2764.5], [941.0, 2262.0], [940.0, 1882.6666666666667], [939.0, 2314.3333333333335], [938.0, 2323.6666666666665], [937.0, 2745.0], [950.0, 1423.0], [949.0, 1386.0], [948.0, 1366.0], [947.0, 2857.0], [986.0, 1950.6363636363635], [980.0, 2112.4545454545455], [964.0, 1471.0], [962.0, 1163.0], [961.0, 1333.0], [960.0, 1592.0], [1000.0, 1954.3333333333335], [994.0, 692.0], [993.0, 1989.7142857142858], [1.0, 9374.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[503.3140000000004, 3597.335999999998]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 3074.0], [3.0, 1423.0], [4.0, 1271.0], [5.0, 1182.0], [6.0, 1766.0], [7.0, 1774.0], [8.0, 1299.0], [9.0, 1600.0], [10.0, 1969.0], [11.0, 1453.0], [12.0, 1436.0], [13.0, 2947.0], [14.0, 2397.0], [15.0, 2823.0], [16.0, 1452.0], [17.0, 1618.0], [18.0, 3477.0], [19.0, 3100.0], [20.0, 1972.0], [21.0, 2562.0], [22.0, 2450.0], [23.0, 3068.0], [24.0, 1979.0], [25.0, 1202.0], [26.0, 3184.0], [27.0, 2710.0], [28.0, 1481.0], [29.0, 1453.0], [30.0, 1216.0], [31.0, 1820.0], [33.0, 1468.0], [32.0, 1968.0], [35.0, 1620.0], [34.0, 1569.0], [37.0, 1612.0], [36.0, 1506.0], [39.0, 1347.0], [38.0, 1934.0], [41.0, 1454.0], [40.0, 1659.0], [43.0, 1493.0], [42.0, 1872.0], [45.0, 1631.0], [44.0, 2494.0], [47.0, 1580.0], [46.0, 1876.0], [49.0, 1504.0], [48.0, 1430.0], [51.0, 1801.0], [50.0, 1911.0], [53.0, 1829.0], [52.0, 1581.0], [55.0, 1608.0], [54.0, 2713.0], [57.0, 1947.0], [56.0, 1461.0], [59.0, 1201.0], [58.0, 1916.0], [61.0, 1782.0], [60.0, 1973.0], [63.0, 1977.0], [62.0, 1881.0], [67.0, 1946.0], [66.0, 1800.0], [65.0, 1639.0], [64.0, 1891.0], [71.0, 1806.0], [70.0, 1437.0], [69.0, 1434.0], [68.0, 1983.0], [75.0, 1463.0], [74.0, 1483.0], [73.0, 1957.0], [72.0, 1857.0], [78.0, 1978.0], [77.0, 1503.0], [76.0, 1841.0], [81.0, 2074.3333333333335], [87.0, 2367.0], [86.0, 1963.5], [84.0, 2136.0], [91.0, 3165.0], [90.0, 2255.0], [89.0, 2252.0], [88.0, 2534.0], [99.0, 1847.0], [98.0, 3120.0], [97.0, 3175.0], [96.0, 2571.8], [102.0, 2953.0], [101.0, 2505.0], [100.0, 1385.0], [107.0, 2821.6666666666665], [106.0, 2815.0], [108.0, 2255.0], [115.0, 2477.0], [114.0, 1887.0], [113.0, 2938.0], [119.0, 2947.0], [118.0, 3100.0], [117.0, 2748.0], [123.0, 2956.0], [122.0, 3285.0], [120.0, 3502.0], [126.0, 2779.0], [125.0, 2914.0], [124.0, 3133.0], [133.0, 1513.0], [132.0, 3282.0], [131.0, 2476.0], [130.0, 2569.0], [129.0, 3463.0], [128.0, 2722.0], [143.0, 1505.0], [142.0, 3279.0], [141.0, 2644.0], [140.0, 1910.5], [139.0, 2583.0], [138.0, 2102.0], [150.0, 2867.0], [148.0, 1909.0], [146.0, 2254.0], [145.0, 2648.0], [144.0, 2546.0], [159.0, 2474.3333333333335], [156.0, 2979.0], [155.0, 3195.0], [154.0, 1252.0], [153.0, 1810.6666666666667], [166.0, 2358.0], [165.0, 3468.0], [162.0, 1607.0], [160.0, 2998.0], [175.0, 3103.0], [173.0, 1604.0], [172.0, 2582.0], [170.0, 3221.0], [169.0, 3054.6666666666665], [182.0, 2937.0], [181.0, 2861.5], [179.0, 3122.0], [178.0, 1811.0], [177.0, 2710.0], [176.0, 3216.0], [189.0, 1746.0], [188.0, 2886.0], [187.0, 3300.0], [186.0, 1466.0], [185.0, 1903.0], [199.0, 2559.6666666666665], [196.0, 2011.0], [195.0, 2423.6666666666665], [193.0, 1988.3333333333333], [207.0, 1419.0], [206.0, 1447.5], [204.0, 1730.0], [203.0, 2817.0], [202.0, 2506.0], [201.0, 3273.0], [215.0, 3273.0], [214.0, 3081.0], [213.0, 1943.0], [212.0, 3249.0], [210.0, 3285.0], [209.0, 2969.0], [208.0, 1432.0], [223.0, 1890.0], [222.0, 1414.0], [221.0, 2239.0], [219.0, 3278.0], [218.0, 1451.0], [216.0, 1486.0], [230.0, 3469.0], [229.0, 1844.0], [228.0, 1497.0], [227.0, 1134.0], [226.0, 1946.0], [224.0, 2908.0], [239.0, 1601.0], [238.0, 3071.0], [237.0, 1986.25], [233.0, 1627.0], [232.0, 2467.0], [247.0, 2555.0], [244.0, 2472.0], [242.0, 2921.0], [241.0, 1750.0], [255.0, 1875.0], [254.0, 1928.0], [252.0, 2150.6666666666665], [249.0, 2404.6666666666665], [248.0, 2682.0], [259.0, 2681.0], [271.0, 1561.0], [267.0, 2418.0], [265.0, 2853.5], [263.0, 2632.0], [262.0, 2778.5], [261.0, 2595.0], [257.0, 2818.0], [256.0, 1698.0], [285.0, 2546.0], [284.0, 2721.0], [283.0, 1747.0], [282.0, 3303.0], [281.0, 3195.0], [280.0, 1923.25], [276.0, 2744.5], [274.0, 2934.0], [273.0, 3190.0], [272.0, 2583.0], [303.0, 2435.3333333333335], [302.0, 2334.5], [292.0, 3107.0], [291.0, 2997.0], [290.0, 2151.0], [288.0, 1858.0], [307.0, 2148.0], [317.0, 1479.0], [318.0, 2229.6666666666665], [316.0, 1929.0], [305.0, 1427.0], [304.0, 2582.0], [306.0, 1508.0], [313.0, 1457.0], [312.0, 2222.0], [311.0, 2487.0], [310.0, 1418.0], [309.0, 2603.3333333333335], [308.0, 3013.0], [334.0, 2075.3333333333335], [331.0, 3177.3333333333335], [328.0, 2256.0], [326.0, 1870.0], [324.0, 2112.5], [321.0, 1447.0], [348.0, 2678.5], [351.0, 2775.0], [350.0, 1530.0], [349.0, 1408.0], [344.0, 2662.0], [343.0, 1455.0], [342.0, 2770.0], [339.0, 1428.3333333333333], [338.0, 1735.0], [366.0, 3469.0], [367.0, 3518.0], [365.0, 2997.0], [364.0, 2607.0], [363.0, 2971.0], [362.0, 3000.0], [361.0, 2613.0], [360.0, 2737.0], [359.0, 2370.0], [354.0, 2786.0], [357.0, 2629.0], [356.0, 1874.25], [382.0, 1632.75], [378.0, 2566.5], [374.0, 2241.0], [373.0, 2710.5], [371.0, 1656.0], [370.0, 1977.0], [369.0, 1450.0], [368.0, 1454.0], [399.0, 2106.75], [395.0, 2265.5], [393.0, 2793.0], [392.0, 1692.0], [390.0, 1452.0], [389.0, 1479.5714285714287], [413.0, 1811.0], [415.0, 1640.5], [412.0, 1393.0], [410.0, 2828.6666666666665], [408.0, 1957.0], [406.0, 1468.0], [405.0, 1317.0], [404.0, 3094.5], [401.0, 2998.0], [431.0, 1614.0], [427.0, 1475.6], [422.0, 3469.0], [421.0, 3470.0], [420.0, 3477.0], [419.0, 1395.5], [447.0, 1524.0], [446.0, 1547.0], [440.0, 1648.5], [437.0, 1633.0], [433.0, 2050.5], [462.0, 1928.0], [463.0, 1870.0], [461.0, 1574.0], [460.0, 3468.0], [459.0, 2642.0], [458.0, 1390.5], [456.0, 1429.0], [455.0, 1419.6666666666667], [451.0, 1656.4], [448.0, 1751.0], [453.0, 1705.0], [478.0, 2980.0], [477.0, 1857.0], [476.0, 2039.5], [474.0, 1956.0], [473.0, 1444.0], [472.0, 2951.0], [470.0, 2858.25], [466.0, 2996.3333333333335], [495.0, 2718.0], [494.0, 2860.3333333333335], [483.0, 2362.0], [482.0, 2749.0], [491.0, 2672.0], [490.0, 2261.0], [489.0, 2246.0], [488.0, 2451.0], [487.0, 1520.5], [485.0, 1498.0], [484.0, 1903.0], [510.0, 2142.6666666666665], [508.0, 1965.0], [506.0, 2708.3333333333335], [503.0, 2804.0], [502.0, 3048.3333333333335], [499.0, 1901.0], [498.0, 1233.0], [497.0, 1558.5], [527.0, 1450.5], [542.0, 1590.6666666666667], [536.0, 1695.0], [519.0, 1808.6666666666667], [516.0, 2338.1666666666665], [531.0, 1729.5], [529.0, 3281.5], [526.0, 1965.0], [524.0, 2471.0], [522.0, 1982.0], [521.0, 2782.0], [520.0, 1859.0], [575.0, 1639.3333333333333], [566.0, 2302.75], [558.0, 1844.25], [554.0, 1648.0], [555.0, 1949.0], [551.0, 1794.75], [547.0, 1573.5], [546.0, 2995.0], [594.0, 1486.3333333333333], [606.0, 2816.5], [607.0, 2341.0], [592.0, 1354.0], [604.0, 2896.6666666666665], [601.0, 2981.0], [600.0, 1835.75], [584.0, 2062.25], [577.0, 1886.0], [576.0, 1468.0], [580.0, 1693.5], [579.0, 1681.3333333333333], [583.0, 1767.75], [598.0, 1576.75], [597.0, 1929.0], [595.0, 2077.6666666666665], [623.0, 1959.2], [632.0, 2596.0], [631.0, 2732.75], [627.0, 1744.25], [620.0, 1352.0], [619.0, 2355.0], [618.0, 2624.5], [616.0, 1878.6666666666667], [615.0, 2255.0], [614.0, 1888.0], [613.0, 2264.0], [667.0, 2526.6666666666665], [670.0, 2952.0], [671.0, 2597.5], [668.0, 2887.0], [665.0, 2615.5], [664.0, 2479.0], [661.0, 2671.0], [656.0, 2791.25], [655.0, 2648.5], [640.0, 2321.5], [645.0, 2253.0], [642.0, 2854.0], [654.0, 2918.0], [653.0, 3062.0], [652.0, 2686.0], [649.0, 1993.0], [648.0, 2468.0], [702.0, 1787.0], [703.0, 2666.0], [691.0, 1654.0], [699.0, 1499.0], [698.0, 2736.0], [697.0, 3229.0], [696.0, 3212.0], [686.0, 2172.25], [673.0, 2673.0], [676.0, 2951.2], [674.0, 2726.5], [678.0, 3106.0], [677.0, 3224.0], [685.0, 2258.0], [684.0, 1722.0], [680.0, 2592.0], [695.0, 1464.0], [694.0, 2421.2], [693.0, 2600.0], [692.0, 3281.0], [733.0, 3074.0], [728.0, 2121.75], [724.0, 2047.916666666667], [722.0, 2536.0], [718.0, 1676.0], [717.0, 1699.5], [716.0, 3250.0], [707.0, 2731.0], [766.0, 2783.0], [767.0, 2859.0], [764.0, 3298.0], [763.0, 1974.0], [762.0, 1729.25], [741.0, 1607.25], [758.0, 1805.8333333333335], [757.0, 1344.0], [755.0, 2662.0], [750.0, 2128.0], [747.0, 1793.0], [745.0, 1589.0], [798.0, 3125.0], [799.0, 1931.0], [797.0, 2593.0], [796.0, 1936.0], [795.0, 1499.0], [775.0, 1973.0], [774.0, 1459.0], [772.0, 3300.0], [771.0, 1700.0], [770.0, 2692.6666666666665], [789.0, 1617.0], [787.0, 1640.0], [784.0, 2154.5], [782.0, 1210.0], [781.0, 2350.0], [780.0, 3469.0], [779.0, 1902.0], [778.0, 2119.5], [776.0, 2257.0], [800.0, 3165.0], [861.0, 1886.0], [863.0, 1567.0], [851.0, 1739.5882352941176], [850.0, 1732.3181818181818], [860.0, 1878.0], [859.0, 1622.0], [858.0, 1188.0], [857.0, 1478.0], [856.0, 2256.3333333333335], [847.0, 1790.0], [844.0, 1614.6666666666667], [843.0, 1363.0], [841.0, 1908.0], [853.0, 1242.5], [852.0, 1549.2], [889.0, 2238.75], [881.0, 1502.0], [893.0, 1936.0], [894.0, 2667.0], [880.0, 1767.0], [890.0, 1928.0], [888.0, 2462.0], [871.0, 1603.0], [870.0, 1540.0], [869.0, 1433.5], [867.0, 1673.0], [866.0, 1841.0], [865.0, 1690.0], [879.0, 2324.0], [878.0, 1752.0], [877.0, 1476.0], [876.0, 2480.0], [875.0, 1671.5], [887.0, 1852.0], [883.0, 2444.0], [882.0, 1632.0], [913.0, 1968.0], [924.0, 1632.5], [922.0, 2047.0], [920.0, 1532.6666666666667], [902.0, 1422.3333333333333], [899.0, 2250.8], [917.0, 2252.0], [916.0, 2638.0], [915.0, 1997.5], [912.0, 2218.333333333333], [911.0, 2542.0], [908.0, 2848.0], [905.0, 2899.0], [904.0, 1186.0], [958.0, 3312.0], [959.0, 2673.0], [946.0, 1198.5], [944.0, 2817.0], [957.0, 3201.0], [956.0, 2971.0], [955.0, 2466.6666666666665], [954.0, 1790.0], [952.0, 3220.0], [930.0, 1913.0], [929.0, 1822.0], [928.0, 1167.0], [943.0, 1721.5], [941.0, 1665.0], [940.0, 2637.0], [939.0, 2015.3333333333333], [938.0, 2148.6666666666665], [937.0, 1419.0], [950.0, 2681.0], [949.0, 2576.0], [948.0, 3130.0], [947.0, 1696.0], [986.0, 1864.1818181818182], [980.0, 1836.818181818182], [964.0, 2546.0], [962.0, 2716.0], [961.0, 3196.0], [960.0, 2606.0], [1000.0, 1979.0], [994.0, 3178.0], [993.0, 1968.5714285714287], [1.0, 1189.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[503.3140000000004, 2147.315]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 11149.0], [3.0, 10661.0], [4.0, 10165.0], [5.0, 10154.0], [6.0, 10736.0], [7.0, 10714.0], [8.0, 10152.0], [9.0, 10539.0], [10.0, 10788.0], [11.0, 10242.0], [12.0, 10249.0], [13.0, 10178.0], [14.0, 9990.0], [15.0, 10484.0], [16.0, 10128.0], [17.0, 10364.0], [18.0, 10491.0], [19.0, 10002.0], [20.0, 10382.0], [21.0, 9765.0], [22.0, 9651.0], [23.0, 10119.0], [24.0, 10168.0], [25.0, 9508.0], [26.0, 10087.0], [27.0, 9258.0], [28.0, 9350.0], [29.0, 9149.0], [30.0, 8999.0], [31.0, 9396.0], [33.0, 8875.0], [32.0, 9131.0], [35.0, 8537.0], [34.0, 9063.0], [37.0, 8285.0], [36.0, 8242.0], [39.0, 8175.0], [38.0, 8847.0], [41.0, 8107.0], [40.0, 7869.0], [43.0, 7595.0], [42.0, 8398.0], [45.0, 8196.0], [44.0, 7668.0], [47.0, 8097.0], [46.0, 8041.0], [49.0, 7529.0], [48.0, 7842.0], [51.0, 7864.0], [50.0, 8248.0], [53.0, 7841.0], [52.0, 8006.0], [55.0, 7903.0], [54.0, 7684.0], [57.0, 8132.0], [56.0, 7649.0], [59.0, 7338.0], [58.0, 7766.0], [61.0, 7639.0], [60.0, 8030.0], [63.0, 7947.0], [62.0, 7735.0], [67.0, 7828.0], [66.0, 7739.0], [65.0, 7657.0], [64.0, 7640.0], [71.0, 7677.0], [70.0, 7300.0], [69.0, 7401.0], [68.0, 7793.0], [75.0, 7182.0], [74.0, 7348.0], [73.0, 7430.0], [72.0, 7677.0], [78.0, 7656.0], [77.0, 6902.0], [76.0, 7611.0], [81.0, 7342.0], [87.0, 7043.0], [86.0, 7659.0], [84.0, 7201.666666666667], [91.0, 7635.0], [90.0, 6789.0], [89.0, 6915.0], [88.0, 7191.0], [99.0, 7227.0], [98.0, 7599.0], [97.0, 7629.0], [96.0, 7271.6], [102.0, 7480.0], [101.0, 7018.0], [100.0, 7039.0], [107.0, 7196.333333333333], [106.0, 7278.0], [108.0, 6766.0], [115.0, 6831.0], [114.0, 7550.0], [113.0, 7435.6], [119.0, 6968.0], [118.0, 7279.0], [117.0, 7184.0], [123.0, 7105.0], [122.0, 7483.0], [120.0, 7496.0], [126.0, 6940.0], [125.0, 6925.0], [124.0, 7288.0], [133.0, 7095.0], [132.0, 6572.0], [131.0, 6855.0], [130.0, 6877.0], [129.0, 7480.0], [128.0, 7477.5], [143.0, 6626.0], [142.0, 7168.0], [141.0, 7070.0], [140.0, 6899.0], [139.0, 7062.0], [138.0, 7003.5], [150.0, 6953.5], [148.0, 7031.5], [146.0, 6490.0], [145.0, 6885.0], [144.0, 7030.0], [159.0, 6882.666666666667], [156.0, 7187.0], [155.0, 7319.0], [154.0, 6628.0], [153.0, 6978.666666666667], [166.0, 6729.333333333333], [165.0, 7234.0], [162.0, 6805.5], [160.0, 7171.0], [175.0, 7125.0], [173.0, 6313.0], [172.0, 6789.5], [170.0, 7225.0], [169.0, 6998.333333333333], [182.0, 6644.0], [181.0, 6603.0], [179.0, 7066.0], [178.0, 7036.0], [177.0, 6658.0], [176.0, 7162.0], [189.0, 6908.0], [188.0, 6922.0], [187.0, 6832.0], [186.0, 6213.0], [185.0, 6925.0], [199.0, 6814.666666666667], [196.0, 7016.0], [195.0, 6687.333333333333], [193.0, 6514.0], [207.0, 6550.0], [206.0, 6577.0], [204.0, 6860.0], [203.0, 6698.5], [202.0, 6338.0], [201.0, 7009.0], [215.0, 6856.0], [214.0, 6601.0], [213.0, 6909.0], [212.0, 6667.5], [210.0, 6962.0], [209.0, 6869.0], [208.0, 6427.0], [223.0, 6788.0], [222.0, 6410.0], [221.0, 6525.5], [219.0, 6594.0], [218.0, 6411.0], [216.0, 6454.0], [230.0, 6794.0], [229.0, 6742.0], [228.0, 6021.0], [227.0, 6121.0], [226.0, 6330.5], [224.0, 6394.0], [239.0, 6348.0], [238.0, 6496.0], [237.0, 6539.75], [233.0, 6346.0], [232.0, 6419.0], [247.0, 6291.0], [244.0, 6144.0], [242.0, 6344.0], [241.0, 6376.0], [255.0, 6697.0], [254.0, 6740.0], [252.0, 6363.666666666667], [249.0, 6428.333333333333], [248.0, 6217.5], [259.0, 6442.0], [271.0, 6028.0], [267.0, 6101.0], [265.0, 6511.0], [263.0, 6008.0], [262.0, 6525.5], [261.0, 6369.0], [257.0, 6573.0], [256.0, 6498.0], [285.0, 5993.0], [284.0, 6072.0], [283.0, 6196.0], [282.0, 5744.0], [281.0, 6604.0], [280.0, 6048.5], [276.0, 6333.0], [274.0, 6226.0], [273.0, 6647.0], [272.0, 6152.0], [303.0, 6243.666666666667], [302.0, 6261.0], [292.0, 6532.0], [291.0, 6488.0], [290.0, 6072.0], [288.0, 6162.666666666667], [307.0, 5825.0], [317.0, 5713.0], [318.0, 6350.0], [316.0, 6535.0], [305.0, 6096.0], [304.0, 5995.5], [306.0, 6199.0], [313.0, 5996.0], [312.0, 5914.0], [311.0, 5950.333333333333], [310.0, 6101.0], [309.0, 6062.666666666667], [308.0, 5863.5], [334.0, 6255.0], [331.0, 6387.666666666667], [328.0, 6151.833333333333], [326.0, 6147.0], [324.0, 5863.0], [321.0, 6050.0], [348.0, 6231.25], [351.0, 5950.0], [350.0, 6153.0], [349.0, 6063.0], [344.0, 5844.0], [343.0, 5990.0], [342.0, 6152.333333333333], [339.0, 5768.0], [338.0, 6130.0], [366.0, 6403.0], [367.0, 6368.0], [365.0, 6331.0], [364.0, 5943.0], [363.0, 6307.0], [362.0, 6365.0], [361.0, 5977.0], [360.0, 5924.0], [359.0, 5754.0], [354.0, 5946.0], [357.0, 6138.0], [356.0, 5834.5], [382.0, 6048.75], [378.0, 5930.25], [374.0, 5468.0], [373.0, 6070.5], [371.0, 6154.0], [370.0, 6338.0], [369.0, 5852.0], [368.0, 5809.0], [399.0, 6184.75], [395.0, 5583.5], [393.0, 6137.0], [392.0, 5812.5], [390.0, 5802.0], [389.0, 5770.0], [413.0, 6179.0], [415.0, 5411.0], [412.0, 5825.5], [410.0, 5861.0], [408.0, 6271.0], [406.0, 5430.0], [405.0, 5606.0], [404.0, 6071.0], [401.0, 6215.0], [431.0, 5973.75], [427.0, 5845.6], [422.0, 6218.0], [421.0, 6217.0], [420.0, 6219.0], [419.0, 5758.0], [447.0, 5810.0], [446.0, 5820.666666666667], [440.0, 5779.166666666667], [437.0, 5953.0], [433.0, 5712.0], [462.0, 6059.0], [463.0, 5760.0], [461.0, 5837.0], [460.0, 6091.0], [459.0, 5916.0], [458.0, 5670.5], [456.0, 5642.0], [455.0, 5692.333333333333], [451.0, 5771.2], [448.0, 6021.0], [453.0, 5938.0], [478.0, 5898.0], [477.0, 5760.0], [476.0, 5390.5], [474.0, 6008.0], [473.0, 5525.0], [472.0, 5650.5], [470.0, 5964.25], [466.0, 5888.666666666667], [495.0, 5724.0], [494.0, 5541.666666666667], [483.0, 5803.0], [482.0, 5661.333333333333], [491.0, 5250.0], [490.0, 5061.0], [489.0, 5103.0], [488.0, 5263.0], [487.0, 5602.0], [485.0, 5157.0], [484.0, 5947.0], [510.0, 5467.0], [508.0, 5446.0], [506.0, 5473.333333333333], [503.0, 5052.0], [502.0, 5391.666666666667], [499.0, 5571.0], [498.0, 5195.0], [497.0, 5360.5], [527.0, 5146.0], [542.0, 4946.666666666667], [536.0, 5144.4], [519.0, 5147.333333333333], [516.0, 5411.0], [531.0, 5199.0], [529.0, 5037.5], [526.0, 5646.0], [524.0, 5441.0], [522.0, 5642.0], [521.0, 5123.0], [520.0, 5457.0], [575.0, 4956.0], [566.0, 5132.75], [558.0, 5078.5], [554.0, 5040.5], [555.0, 5205.0], [551.0, 5159.0], [547.0, 4945.0], [546.0, 5471.0], [594.0, 5023.0], [606.0, 5050.5], [607.0, 4695.0], [592.0, 4829.0], [604.0, 5162.666666666667], [601.0, 4920.0], [600.0, 4912.25], [584.0, 5245.75], [577.0, 5170.0], [576.0, 4647.0], [580.0, 4905.0], [579.0, 4988.333333333333], [583.0, 5278.75], [598.0, 5004.5], [597.0, 5189.0], [595.0, 5144.0], [623.0, 5107.8], [632.0, 4848.0], [631.0, 5029.5], [627.0, 4879.0], [620.0, 4774.0], [619.0, 5030.0], [618.0, 5428.0], [616.0, 4777.0], [615.0, 4598.0], [614.0, 5127.0], [613.0, 4617.0], [667.0, 5131.0], [670.0, 5302.0], [671.0, 5411.0], [668.0, 5284.0], [665.0, 5033.5], [664.0, 4676.0], [661.0, 4757.0], [656.0, 4929.25], [655.0, 4953.5], [640.0, 5161.125], [645.0, 4581.0], [642.0, 5273.0], [654.0, 5111.5], [653.0, 5176.5], [652.0, 4970.0], [649.0, 5406.0], [648.0, 4804.0], [702.0, 4997.0], [703.0, 5337.666666666667], [691.0, 4587.0], [699.0, 4607.0], [698.0, 4877.0], [697.0, 5396.0], [696.0, 5383.0], [686.0, 4873.0], [673.0, 4917.0], [676.0, 5227.4], [674.0, 5404.0], [678.0, 5369.0], [677.0, 5407.0], [685.0, 4579.0], [684.0, 5004.5], [680.0, 4818.0], [695.0, 4870.0], [694.0, 4894.2], [693.0, 4922.0], [692.0, 5394.0], [733.0, 5313.0], [728.0, 4981.5], [724.0, 4912.416666666666], [722.0, 4931.0], [718.0, 5204.0], [717.0, 5141.0], [716.0, 5373.0], [707.0, 5163.75], [766.0, 5133.0], [767.0, 5195.0], [764.0, 4482.0], [763.0, 5339.0], [762.0, 4974.0], [741.0, 4878.5], [758.0, 4936.833333333333], [757.0, 4688.0], [755.0, 4692.0], [750.0, 4864.666666666667], [747.0, 5256.0], [745.0, 4978.5], [798.0, 4984.0], [799.0, 4902.0], [797.0, 4915.0], [796.0, 4943.222222222222], [795.0, 4419.0], [775.0, 5270.0], [774.0, 4746.0], [772.0, 5081.0], [771.0, 5144.0], [770.0, 4608.666666666667], [789.0, 4347.0], [787.0, 5014.0], [784.0, 4493.5], [782.0, 4509.0], [781.0, 4597.0], [780.0, 5247.0], [779.0, 5025.0], [778.0, 4569.0], [776.0, 4395.0], [800.0, 5107.0], [861.0, 4779.0], [863.0, 4605.5], [851.0, 4684.176470588234], [850.0, 4674.181818181818], [860.0, 5049.0], [859.0, 4888.0], [858.0, 4456.0], [857.0, 4271.0], [856.0, 4536.333333333333], [847.0, 4876.0], [844.0, 4565.333333333333], [843.0, 4357.0], [841.0, 4789.0], [853.0, 4445.0], [852.0, 4597.6], [889.0, 4585.0], [881.0, 4016.0], [893.0, 4521.333333333333], [894.0, 4574.0], [880.0, 4711.0], [890.0, 4455.0], [888.0, 4041.0], [871.0, 4211.0], [870.0, 4368.0], [869.0, 4684.0], [867.0, 4916.0], [866.0, 5016.0], [865.0, 4579.0], [879.0, 4206.0], [878.0, 4633.0], [877.0, 4653.0], [876.0, 4426.0], [875.0, 4490.0], [887.0, 4729.0], [883.0, 4360.0], [882.0, 4601.0], [913.0, 4453.0], [924.0, 4336.0], [922.0, 4313.5], [920.0, 3948.6666666666665], [902.0, 4290.333333333333], [899.0, 4368.8], [917.0, 3902.0], [916.0, 4381.0], [915.0, 4351.0], [912.0, 4405.833333333334], [911.0, 4295.0], [908.0, 4602.0], [905.0, 4129.0], [904.0, 4066.0], [958.0, 4582.0], [959.0, 4096.0], [946.0, 4095.5], [944.0, 4568.0], [957.0, 4591.0], [956.0, 4187.0], [955.0, 4207.0], [954.0, 4487.0], [952.0, 4593.0], [930.0, 4442.333333333333], [929.0, 4049.5], [928.0, 3983.0], [943.0, 4487.5], [941.0, 3927.0], [940.0, 4519.666666666667], [939.0, 4330.0], [938.0, 4473.0], [937.0, 4165.0], [950.0, 4105.0], [949.0, 3962.0], [948.0, 4497.0], [947.0, 4553.0], [986.0, 3815.4545454545455], [980.0, 3950.181818181818], [964.0, 4018.0], [962.0, 3879.0], [961.0, 4530.0], [960.0, 4198.0], [1000.0, 3934.1666666666665], [994.0, 3974.0], [993.0, 3958.857142857143], [1.0, 10572.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[503.3140000000004, 5747.690999999999]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7666.666666666667, "minX": 1.70282034E12, "maxY": 491311.0, "series": [{"data": [[1.70282034E12, 491311.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70282034E12, 7666.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282034E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2147.315, "minX": 1.70282034E12, "maxY": 5747.690999999999, "series": [{"data": [[1.70282034E12, 3597.335999999998]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70282034E12, 2147.315]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70282034E12, 5747.690999999999]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282034E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2147.112999999999, "minX": 1.70282034E12, "maxY": 3515.676999999998, "series": [{"data": [[1.70282034E12, 3515.676999999998]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70282034E12, 2147.112999999999]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70282034E12, 2147.113]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282034E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1085.439999999999, "minX": 1.70282034E12, "maxY": 2898.132999999997, "series": [{"data": [[1.70282034E12, 2898.132999999997]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70282034E12, 1085.4399999999991]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70282034E12, 1085.439999999999]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282034E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1103.0, "minX": 1.70282034E12, "maxY": 11149.0, "series": [{"data": [[1.70282034E12, 11149.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70282034E12, 6574.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70282034E12, 10300.750000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70282034E12, 8178.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70282034E12, 1103.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70282034E12, 2243.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282034E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1609.0, "minX": 4.0, "maxY": 9973.0, "series": [{"data": [[518.0, 5510.5], [4.0, 9973.0], [40.0, 8185.5], [186.0, 3131.5], [387.0, 2394.0], [24.0, 8589.5], [427.0, 1609.0], [236.0, 6440.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[518.0, 5308.5], [736.0, 4332.0], [402.0, 3396.0], [236.0, 6148.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 736.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1609.0, "minX": 4.0, "maxY": 5064.5, "series": [{"data": [[518.0, 2315.5], [4.0, 5064.5], [40.0, 3429.5], [186.0, 3131.5], [387.0, 2394.0], [24.0, 4621.5], [427.0, 1609.0], [236.0, 2509.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[518.0, 3210.5], [736.0, 2496.0], [402.0, 1972.5], [236.0, 3496.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 736.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.70282034E12, "maxY": 50.0, "series": [{"data": [[1.70282034E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282034E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.566666666666667, "minX": 1.70282034E12, "maxY": 30.766666666666666, "series": [{"data": [[1.70282034E12, 2.566666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70282034E12, 16.666666666666668]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70282034E12, 30.766666666666666]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282034E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.2833333333333334, "minX": 1.70282034E12, "maxY": 16.666666666666668, "series": [{"data": [[1.70282034E12, 15.383333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70282034E12, 1.2833333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70282034E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70282034E12, 15.383333333333333]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70282034E12, 1.2833333333333334]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282034E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 19.233333333333334, "minX": 1.70282034E12, "maxY": 30.766666666666666, "series": [{"data": [[1.70282034E12, 19.233333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70282034E12, 30.766666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282034E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

