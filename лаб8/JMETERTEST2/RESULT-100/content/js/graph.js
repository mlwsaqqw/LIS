/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "maxY": 14630.0, "series": [{"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 70.0], [0.6, 70.0], [0.7, 70.0], [0.8, 70.0], [0.9, 70.0], [1.0, 70.0], [1.1, 70.0], [1.2, 70.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 70.0], [2.6, 70.0], [2.7, 70.0], [2.8, 70.0], [2.9, 70.0], [3.0, 70.0], [3.1, 70.0], [3.2, 70.0], [3.3, 70.0], [3.4, 70.0], [3.5, 70.0], [3.6, 70.0], [3.7, 70.0], [3.8, 70.0], [3.9, 70.0], [4.0, 70.0], [4.1, 70.0], [4.2, 70.0], [4.3, 70.0], [4.4, 70.0], [4.5, 70.0], [4.6, 70.0], [4.7, 70.0], [4.8, 70.0], [4.9, 70.0], [5.0, 71.0], [5.1, 71.0], [5.2, 71.0], [5.3, 71.0], [5.4, 71.0], [5.5, 71.0], [5.6, 71.0], [5.7, 71.0], [5.8, 71.0], [5.9, 71.0], [6.0, 71.0], [6.1, 71.0], [6.2, 71.0], [6.3, 71.0], [6.4, 71.0], [6.5, 71.0], [6.6, 71.0], [6.7, 71.0], [6.8, 71.0], [6.9, 71.0], [7.0, 71.0], [7.1, 71.0], [7.2, 71.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 71.0], [7.8, 71.0], [7.9, 71.0], [8.0, 71.0], [8.1, 71.0], [8.2, 71.0], [8.3, 71.0], [8.4, 71.0], [8.5, 71.0], [8.6, 71.0], [8.7, 71.0], [8.8, 71.0], [8.9, 71.0], [9.0, 71.0], [9.1, 71.0], [9.2, 71.0], [9.3, 71.0], [9.4, 71.0], [9.5, 71.0], [9.6, 71.0], [9.7, 71.0], [9.8, 71.0], [9.9, 71.0], [10.0, 71.0], [10.1, 71.0], [10.2, 71.0], [10.3, 71.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 71.0], [10.8, 71.0], [10.9, 71.0], [11.0, 71.0], [11.1, 71.0], [11.2, 71.0], [11.3, 71.0], [11.4, 71.0], [11.5, 71.0], [11.6, 71.0], [11.7, 71.0], [11.8, 71.0], [11.9, 71.0], [12.0, 71.0], [12.1, 71.0], [12.2, 71.0], [12.3, 71.0], [12.4, 71.0], [12.5, 71.0], [12.6, 71.0], [12.7, 71.0], [12.8, 71.0], [12.9, 71.0], [13.0, 71.0], [13.1, 71.0], [13.2, 71.0], [13.3, 71.0], [13.4, 71.0], [13.5, 71.0], [13.6, 71.0], [13.7, 71.0], [13.8, 71.0], [13.9, 71.0], [14.0, 71.0], [14.1, 71.0], [14.2, 71.0], [14.3, 71.0], [14.4, 71.0], [14.5, 71.0], [14.6, 71.0], [14.7, 71.0], [14.8, 71.0], [14.9, 71.0], [15.0, 71.0], [15.1, 71.0], [15.2, 71.0], [15.3, 71.0], [15.4, 71.0], [15.5, 71.0], [15.6, 71.0], [15.7, 71.0], [15.8, 71.0], [15.9, 71.0], [16.0, 71.0], [16.1, 71.0], [16.2, 71.0], [16.3, 71.0], [16.4, 71.0], [16.5, 71.0], [16.6, 71.0], [16.7, 71.0], [16.8, 71.0], [16.9, 71.0], [17.0, 71.0], [17.1, 71.0], [17.2, 71.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 71.0], [17.9, 71.0], [18.0, 72.0], [18.1, 72.0], [18.2, 72.0], [18.3, 72.0], [18.4, 72.0], [18.5, 72.0], [18.6, 72.0], [18.7, 72.0], [18.8, 72.0], [18.9, 72.0], [19.0, 72.0], [19.1, 72.0], [19.2, 72.0], [19.3, 72.0], [19.4, 72.0], [19.5, 72.0], [19.6, 72.0], [19.7, 72.0], [19.8, 72.0], [19.9, 72.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 72.0], [20.4, 72.0], [20.5, 72.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 72.0], [21.3, 72.0], [21.4, 72.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 72.0], [22.0, 72.0], [22.1, 72.0], [22.2, 72.0], [22.3, 72.0], [22.4, 72.0], [22.5, 72.0], [22.6, 72.0], [22.7, 72.0], [22.8, 72.0], [22.9, 72.0], [23.0, 72.0], [23.1, 72.0], [23.2, 72.0], [23.3, 72.0], [23.4, 72.0], [23.5, 72.0], [23.6, 72.0], [23.7, 72.0], [23.8, 72.0], [23.9, 72.0], [24.0, 73.0], [24.1, 73.0], [24.2, 73.0], [24.3, 73.0], [24.4, 73.0], [24.5, 73.0], [24.6, 73.0], [24.7, 73.0], [24.8, 73.0], [24.9, 73.0], [25.0, 73.0], [25.1, 73.0], [25.2, 73.0], [25.3, 73.0], [25.4, 73.0], [25.5, 73.0], [25.6, 73.0], [25.7, 73.0], [25.8, 73.0], [25.9, 73.0], [26.0, 73.0], [26.1, 73.0], [26.2, 73.0], [26.3, 73.0], [26.4, 73.0], [26.5, 73.0], [26.6, 73.0], [26.7, 73.0], [26.8, 73.0], [26.9, 73.0], [27.0, 73.0], [27.1, 73.0], [27.2, 73.0], [27.3, 73.0], [27.4, 73.0], [27.5, 73.0], [27.6, 73.0], [27.7, 73.0], [27.8, 73.0], [27.9, 73.0], [28.0, 74.0], [28.1, 74.0], [28.2, 74.0], [28.3, 74.0], [28.4, 74.0], [28.5, 74.0], [28.6, 74.0], [28.7, 74.0], [28.8, 74.0], [28.9, 74.0], [29.0, 74.0], [29.1, 74.0], [29.2, 74.0], [29.3, 74.0], [29.4, 74.0], [29.5, 74.0], [29.6, 74.0], [29.7, 74.0], [29.8, 74.0], [29.9, 74.0], [30.0, 74.0], [30.1, 74.0], [30.2, 74.0], [30.3, 74.0], [30.4, 74.0], [30.5, 74.0], [30.6, 74.0], [30.7, 74.0], [30.8, 74.0], [30.9, 74.0], [31.0, 74.0], [31.1, 74.0], [31.2, 74.0], [31.3, 74.0], [31.4, 74.0], [31.5, 74.0], [31.6, 74.0], [31.7, 74.0], [31.8, 74.0], [31.9, 74.0], [32.0, 74.0], [32.1, 74.0], [32.2, 74.0], [32.3, 74.0], [32.4, 74.0], [32.5, 74.0], [32.6, 74.0], [32.7, 74.0], [32.8, 74.0], [32.9, 74.0], [33.0, 74.0], [33.1, 74.0], [33.2, 74.0], [33.3, 74.0], [33.4, 74.0], [33.5, 74.0], [33.6, 74.0], [33.7, 74.0], [33.8, 74.0], [33.9, 74.0], [34.0, 74.0], [34.1, 74.0], [34.2, 74.0], [34.3, 74.0], [34.4, 74.0], [34.5, 74.0], [34.6, 74.0], [34.7, 74.0], [34.8, 74.0], [34.9, 74.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 74.0], [36.1, 74.0], [36.2, 74.0], [36.3, 74.0], [36.4, 74.0], [36.5, 74.0], [36.6, 74.0], [36.7, 74.0], [36.8, 74.0], [36.9, 74.0], [37.0, 83.0], [37.1, 83.0], [37.2, 83.0], [37.3, 83.0], [37.4, 83.0], [37.5, 83.0], [37.6, 83.0], [37.7, 83.0], [37.8, 83.0], [37.9, 83.0], [38.0, 102.0], [38.1, 102.0], [38.2, 102.0], [38.3, 102.0], [38.4, 102.0], [38.5, 102.0], [38.6, 102.0], [38.7, 102.0], [38.8, 102.0], [38.9, 102.0], [39.0, 110.0], [39.1, 110.0], [39.2, 110.0], [39.3, 110.0], [39.4, 110.0], [39.5, 110.0], [39.6, 110.0], [39.7, 110.0], [39.8, 110.0], [39.9, 110.0], [40.0, 2996.0], [40.1, 2996.0], [40.2, 2996.0], [40.3, 2996.0], [40.4, 2996.0], [40.5, 2996.0], [40.6, 2996.0], [40.7, 2996.0], [40.8, 2996.0], [40.9, 2996.0], [41.0, 3053.0], [41.1, 3053.0], [41.2, 3053.0], [41.3, 3053.0], [41.4, 3053.0], [41.5, 3053.0], [41.6, 3053.0], [41.7, 3053.0], [41.8, 3053.0], [41.9, 3053.0], [42.0, 3145.0], [42.1, 3145.0], [42.2, 3145.0], [42.3, 3145.0], [42.4, 3145.0], [42.5, 3145.0], [42.6, 3145.0], [42.7, 3145.0], [42.8, 3145.0], [42.9, 3145.0], [43.0, 3212.0], [43.1, 3212.0], [43.2, 3212.0], [43.3, 3212.0], [43.4, 3212.0], [43.5, 3212.0], [43.6, 3212.0], [43.7, 3212.0], [43.8, 3212.0], [43.9, 3212.0], [44.0, 3229.0], [44.1, 3229.0], [44.2, 3229.0], [44.3, 3229.0], [44.4, 3229.0], [44.5, 3229.0], [44.6, 3229.0], [44.7, 3229.0], [44.8, 3229.0], [44.9, 3229.0], [45.0, 3232.0], [45.1, 3232.0], [45.2, 3232.0], [45.3, 3232.0], [45.4, 3232.0], [45.5, 3232.0], [45.6, 3232.0], [45.7, 3232.0], [45.8, 3232.0], [45.9, 3232.0], [46.0, 3257.0], [46.1, 3257.0], [46.2, 3257.0], [46.3, 3257.0], [46.4, 3257.0], [46.5, 3257.0], [46.6, 3257.0], [46.7, 3257.0], [46.8, 3257.0], [46.9, 3257.0], [47.0, 3304.0], [47.1, 3304.0], [47.2, 3304.0], [47.3, 3304.0], [47.4, 3304.0], [47.5, 3304.0], [47.6, 3304.0], [47.7, 3304.0], [47.8, 3304.0], [47.9, 3304.0], [48.0, 3367.0], [48.1, 3367.0], [48.2, 3367.0], [48.3, 3367.0], [48.4, 3367.0], [48.5, 3367.0], [48.6, 3367.0], [48.7, 3367.0], [48.8, 3367.0], [48.9, 3367.0], [49.0, 3524.0], [49.1, 3524.0], [49.2, 3524.0], [49.3, 3524.0], [49.4, 3524.0], [49.5, 3524.0], [49.6, 3524.0], [49.7, 3524.0], [49.8, 3524.0], [49.9, 3524.0], [50.0, 3536.0], [50.1, 3536.0], [50.2, 3536.0], [50.3, 3536.0], [50.4, 3536.0], [50.5, 3536.0], [50.6, 3536.0], [50.7, 3536.0], [50.8, 3536.0], [50.9, 3536.0], [51.0, 3557.0], [51.1, 3557.0], [51.2, 3557.0], [51.3, 3557.0], [51.4, 3557.0], [51.5, 3557.0], [51.6, 3557.0], [51.7, 3557.0], [51.8, 3557.0], [51.9, 3557.0], [52.0, 3563.0], [52.1, 3563.0], [52.2, 3563.0], [52.3, 3563.0], [52.4, 3563.0], [52.5, 3563.0], [52.6, 3563.0], [52.7, 3563.0], [52.8, 3563.0], [52.9, 3563.0], [53.0, 3581.0], [53.1, 3581.0], [53.2, 3581.0], [53.3, 3581.0], [53.4, 3581.0], [53.5, 3581.0], [53.6, 3581.0], [53.7, 3581.0], [53.8, 3581.0], [53.9, 3581.0], [54.0, 3593.0], [54.1, 3593.0], [54.2, 3593.0], [54.3, 3593.0], [54.4, 3593.0], [54.5, 3593.0], [54.6, 3593.0], [54.7, 3593.0], [54.8, 3593.0], [54.9, 3593.0], [55.0, 3633.0], [55.1, 3633.0], [55.2, 3633.0], [55.3, 3633.0], [55.4, 3633.0], [55.5, 3633.0], [55.6, 3633.0], [55.7, 3633.0], [55.8, 3633.0], [55.9, 3633.0], [56.0, 3634.0], [56.1, 3634.0], [56.2, 3634.0], [56.3, 3634.0], [56.4, 3634.0], [56.5, 3634.0], [56.6, 3634.0], [56.7, 3634.0], [56.8, 3634.0], [56.9, 3634.0], [57.0, 3656.0], [57.1, 3656.0], [57.2, 3656.0], [57.3, 3656.0], [57.4, 3656.0], [57.5, 3656.0], [57.6, 3656.0], [57.7, 3656.0], [57.8, 3656.0], [57.9, 3656.0], [58.0, 3692.0], [58.1, 3692.0], [58.2, 3692.0], [58.3, 3692.0], [58.4, 3692.0], [58.5, 3692.0], [58.6, 3692.0], [58.7, 3692.0], [58.8, 3692.0], [58.9, 3692.0], [59.0, 3702.0], [59.1, 3702.0], [59.2, 3702.0], [59.3, 3702.0], [59.4, 3702.0], [59.5, 3702.0], [59.6, 3702.0], [59.7, 3702.0], [59.8, 3702.0], [59.9, 3702.0], [60.0, 3709.0], [60.1, 3709.0], [60.2, 3709.0], [60.3, 3709.0], [60.4, 3709.0], [60.5, 3709.0], [60.6, 3709.0], [60.7, 3709.0], [60.8, 3709.0], [60.9, 3709.0], [61.0, 3884.0], [61.1, 3884.0], [61.2, 3884.0], [61.3, 3884.0], [61.4, 3884.0], [61.5, 3884.0], [61.6, 3884.0], [61.7, 3884.0], [61.8, 3884.0], [61.9, 3884.0], [62.0, 3902.0], [62.1, 3902.0], [62.2, 3902.0], [62.3, 3902.0], [62.4, 3902.0], [62.5, 3902.0], [62.6, 3902.0], [62.7, 3902.0], [62.8, 3902.0], [62.9, 3902.0], [63.0, 3969.0], [63.1, 3969.0], [63.2, 3969.0], [63.3, 3969.0], [63.4, 3969.0], [63.5, 3969.0], [63.6, 3969.0], [63.7, 3969.0], [63.8, 3969.0], [63.9, 3969.0], [64.0, 3970.0], [64.1, 3970.0], [64.2, 3970.0], [64.3, 3970.0], [64.4, 3970.0], [64.5, 3970.0], [64.6, 3970.0], [64.7, 3970.0], [64.8, 3970.0], [64.9, 3970.0], [65.0, 3973.0], [65.1, 3973.0], [65.2, 3973.0], [65.3, 3973.0], [65.4, 3973.0], [65.5, 3973.0], [65.6, 3973.0], [65.7, 3973.0], [65.8, 3973.0], [65.9, 3973.0], [66.0, 4023.0], [66.1, 4023.0], [66.2, 4023.0], [66.3, 4023.0], [66.4, 4023.0], [66.5, 4023.0], [66.6, 4023.0], [66.7, 4023.0], [66.8, 4023.0], [66.9, 4023.0], [67.0, 4072.0], [67.1, 4072.0], [67.2, 4072.0], [67.3, 4072.0], [67.4, 4072.0], [67.5, 4072.0], [67.6, 4072.0], [67.7, 4072.0], [67.8, 4072.0], [67.9, 4072.0], [68.0, 4085.0], [68.1, 4085.0], [68.2, 4085.0], [68.3, 4085.0], [68.4, 4085.0], [68.5, 4085.0], [68.6, 4085.0], [68.7, 4085.0], [68.8, 4085.0], [68.9, 4085.0], [69.0, 4113.0], [69.1, 4113.0], [69.2, 4113.0], [69.3, 4113.0], [69.4, 4113.0], [69.5, 4113.0], [69.6, 4113.0], [69.7, 4113.0], [69.8, 4113.0], [69.9, 4113.0], [70.0, 4182.0], [70.1, 4182.0], [70.2, 4182.0], [70.3, 4182.0], [70.4, 4182.0], [70.5, 4182.0], [70.6, 4182.0], [70.7, 4182.0], [70.8, 4182.0], [70.9, 4182.0], [71.0, 4202.0], [71.1, 4202.0], [71.2, 4202.0], [71.3, 4202.0], [71.4, 4202.0], [71.5, 4202.0], [71.6, 4202.0], [71.7, 4202.0], [71.8, 4202.0], [71.9, 4202.0], [72.0, 4236.0], [72.1, 4236.0], [72.2, 4236.0], [72.3, 4236.0], [72.4, 4236.0], [72.5, 4236.0], [72.6, 4236.0], [72.7, 4236.0], [72.8, 4236.0], [72.9, 4236.0], [73.0, 4241.0], [73.1, 4241.0], [73.2, 4241.0], [73.3, 4241.0], [73.4, 4241.0], [73.5, 4241.0], [73.6, 4241.0], [73.7, 4241.0], [73.8, 4241.0], [73.9, 4241.0], [74.0, 4344.0], [74.1, 4344.0], [74.2, 4344.0], [74.3, 4344.0], [74.4, 4344.0], [74.5, 4344.0], [74.6, 4344.0], [74.7, 4344.0], [74.8, 4344.0], [74.9, 4344.0], [75.0, 4388.0], [75.1, 4388.0], [75.2, 4388.0], [75.3, 4388.0], [75.4, 4388.0], [75.5, 4388.0], [75.6, 4388.0], [75.7, 4388.0], [75.8, 4388.0], [75.9, 4388.0], [76.0, 4389.0], [76.1, 4389.0], [76.2, 4389.0], [76.3, 4389.0], [76.4, 4389.0], [76.5, 4389.0], [76.6, 4389.0], [76.7, 4389.0], [76.8, 4389.0], [76.9, 4389.0], [77.0, 4497.0], [77.1, 4497.0], [77.2, 4497.0], [77.3, 4497.0], [77.4, 4497.0], [77.5, 4497.0], [77.6, 4497.0], [77.7, 4497.0], [77.8, 4497.0], [77.9, 4497.0], [78.0, 4515.0], [78.1, 4515.0], [78.2, 4515.0], [78.3, 4515.0], [78.4, 4515.0], [78.5, 4515.0], [78.6, 4515.0], [78.7, 4515.0], [78.8, 4515.0], [78.9, 4515.0], [79.0, 4599.0], [79.1, 4599.0], [79.2, 4599.0], [79.3, 4599.0], [79.4, 4599.0], [79.5, 4599.0], [79.6, 4599.0], [79.7, 4599.0], [79.8, 4599.0], [79.9, 4599.0], [80.0, 4616.0], [80.1, 4616.0], [80.2, 4616.0], [80.3, 4616.0], [80.4, 4616.0], [80.5, 4616.0], [80.6, 4616.0], [80.7, 4616.0], [80.8, 4616.0], [80.9, 4616.0], [81.0, 4649.0], [81.1, 4649.0], [81.2, 4649.0], [81.3, 4649.0], [81.4, 4649.0], [81.5, 4649.0], [81.6, 4649.0], [81.7, 4649.0], [81.8, 4649.0], [81.9, 4649.0], [82.0, 4762.0], [82.1, 4762.0], [82.2, 4762.0], [82.3, 4762.0], [82.4, 4762.0], [82.5, 4762.0], [82.6, 4762.0], [82.7, 4762.0], [82.8, 4762.0], [82.9, 4762.0], [83.0, 4776.0], [83.1, 4776.0], [83.2, 4776.0], [83.3, 4776.0], [83.4, 4776.0], [83.5, 4776.0], [83.6, 4776.0], [83.7, 4776.0], [83.8, 4776.0], [83.9, 4776.0], [84.0, 4858.0], [84.1, 4858.0], [84.2, 4858.0], [84.3, 4858.0], [84.4, 4858.0], [84.5, 4858.0], [84.6, 4858.0], [84.7, 4858.0], [84.8, 4858.0], [84.9, 4858.0], [85.0, 4867.0], [85.1, 4867.0], [85.2, 4867.0], [85.3, 4867.0], [85.4, 4867.0], [85.5, 4867.0], [85.6, 4867.0], [85.7, 4867.0], [85.8, 4867.0], [85.9, 4867.0], [86.0, 4986.0], [86.1, 4986.0], [86.2, 4986.0], [86.3, 4986.0], [86.4, 4986.0], [86.5, 4986.0], [86.6, 4986.0], [86.7, 4986.0], [86.8, 4986.0], [86.9, 4986.0], [87.0, 5014.0], [87.1, 5014.0], [87.2, 5014.0], [87.3, 5014.0], [87.4, 5014.0], [87.5, 5014.0], [87.6, 5014.0], [87.7, 5014.0], [87.8, 5014.0], [87.9, 5014.0], [88.0, 5167.0], [88.1, 5167.0], [88.2, 5167.0], [88.3, 5167.0], [88.4, 5167.0], [88.5, 5167.0], [88.6, 5167.0], [88.7, 5167.0], [88.8, 5167.0], [88.9, 5167.0], [89.0, 5175.0], [89.1, 5175.0], [89.2, 5175.0], [89.3, 5175.0], [89.4, 5175.0], [89.5, 5175.0], [89.6, 5175.0], [89.7, 5175.0], [89.8, 5175.0], [89.9, 5175.0], [90.0, 5219.0], [90.1, 5219.0], [90.2, 5219.0], [90.3, 5219.0], [90.4, 5219.0], [90.5, 5219.0], [90.6, 5219.0], [90.7, 5219.0], [90.8, 5219.0], [90.9, 5219.0], [91.0, 5224.0], [91.1, 5224.0], [91.2, 5224.0], [91.3, 5224.0], [91.4, 5224.0], [91.5, 5224.0], [91.6, 5224.0], [91.7, 5224.0], [91.8, 5224.0], [91.9, 5224.0], [92.0, 5324.0], [92.1, 5324.0], [92.2, 5324.0], [92.3, 5324.0], [92.4, 5324.0], [92.5, 5324.0], [92.6, 5324.0], [92.7, 5324.0], [92.8, 5324.0], [92.9, 5324.0], [93.0, 5332.0], [93.1, 5332.0], [93.2, 5332.0], [93.3, 5332.0], [93.4, 5332.0], [93.5, 5332.0], [93.6, 5332.0], [93.7, 5332.0], [93.8, 5332.0], [93.9, 5332.0], [94.0, 5366.0], [94.1, 5366.0], [94.2, 5366.0], [94.3, 5366.0], [94.4, 5366.0], [94.5, 5366.0], [94.6, 5366.0], [94.7, 5366.0], [94.8, 5366.0], [94.9, 5366.0], [95.0, 5448.0], [95.1, 5448.0], [95.2, 5448.0], [95.3, 5448.0], [95.4, 5448.0], [95.5, 5448.0], [95.6, 5448.0], [95.7, 5448.0], [95.8, 5448.0], [95.9, 5448.0], [96.0, 5722.0], [96.1, 5722.0], [96.2, 5722.0], [96.3, 5722.0], [96.4, 5722.0], [96.5, 5722.0], [96.6, 5722.0], [96.7, 5722.0], [96.8, 5722.0], [96.9, 5722.0], [97.0, 5837.0], [97.1, 5837.0], [97.2, 5837.0], [97.3, 5837.0], [97.4, 5837.0], [97.5, 5837.0], [97.6, 5837.0], [97.7, 5837.0], [97.8, 5837.0], [97.9, 5837.0], [98.0, 5969.0], [98.1, 5969.0], [98.2, 5969.0], [98.3, 5969.0], [98.4, 5969.0], [98.5, 5969.0], [98.6, 5969.0], [98.7, 5969.0], [98.8, 5969.0], [98.9, 5969.0], [99.0, 6185.0], [99.1, 6185.0], [99.2, 6185.0], [99.3, 6185.0], [99.4, 6185.0], [99.5, 6185.0], [99.6, 6185.0], [99.7, 6185.0], [99.8, 6185.0], [99.9, 6185.0]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 70.0], [0.6, 70.0], [0.7, 70.0], [0.8, 70.0], [0.9, 70.0], [1.0, 72.0], [1.1, 72.0], [1.2, 72.0], [1.3, 72.0], [1.4, 72.0], [1.5, 72.0], [1.6, 72.0], [1.7, 72.0], [1.8, 72.0], [1.9, 72.0], [2.0, 72.0], [2.1, 72.0], [2.2, 72.0], [2.3, 72.0], [2.4, 72.0], [2.5, 72.0], [2.6, 72.0], [2.7, 72.0], [2.8, 72.0], [2.9, 72.0], [3.0, 72.0], [3.1, 72.0], [3.2, 72.0], [3.3, 72.0], [3.4, 72.0], [3.5, 72.0], [3.6, 72.0], [3.7, 72.0], [3.8, 72.0], [3.9, 72.0], [4.0, 73.0], [4.1, 73.0], [4.2, 73.0], [4.3, 73.0], [4.4, 73.0], [4.5, 73.0], [4.6, 73.0], [4.7, 73.0], [4.8, 73.0], [4.9, 73.0], [5.0, 73.0], [5.1, 73.0], [5.2, 73.0], [5.3, 73.0], [5.4, 73.0], [5.5, 73.0], [5.6, 73.0], [5.7, 73.0], [5.8, 73.0], [5.9, 73.0], [6.0, 75.0], [6.1, 75.0], [6.2, 75.0], [6.3, 75.0], [6.4, 75.0], [6.5, 75.0], [6.6, 75.0], [6.7, 75.0], [6.8, 75.0], [6.9, 75.0], [7.0, 76.0], [7.1, 76.0], [7.2, 76.0], [7.3, 76.0], [7.4, 76.0], [7.5, 76.0], [7.6, 76.0], [7.7, 76.0], [7.8, 76.0], [7.9, 76.0], [8.0, 76.0], [8.1, 76.0], [8.2, 76.0], [8.3, 76.0], [8.4, 76.0], [8.5, 76.0], [8.6, 76.0], [8.7, 76.0], [8.8, 76.0], [8.9, 76.0], [9.0, 76.0], [9.1, 76.0], [9.2, 76.0], [9.3, 76.0], [9.4, 76.0], [9.5, 76.0], [9.6, 76.0], [9.7, 76.0], [9.8, 76.0], [9.9, 76.0], [10.0, 77.0], [10.1, 77.0], [10.2, 77.0], [10.3, 77.0], [10.4, 77.0], [10.5, 77.0], [10.6, 77.0], [10.7, 77.0], [10.8, 77.0], [10.9, 77.0], [11.0, 77.0], [11.1, 77.0], [11.2, 77.0], [11.3, 77.0], [11.4, 77.0], [11.5, 77.0], [11.6, 77.0], [11.7, 77.0], [11.8, 77.0], [11.9, 77.0], [12.0, 77.0], [12.1, 77.0], [12.2, 77.0], [12.3, 77.0], [12.4, 77.0], [12.5, 77.0], [12.6, 77.0], [12.7, 77.0], [12.8, 77.0], [12.9, 77.0], [13.0, 77.0], [13.1, 77.0], [13.2, 77.0], [13.3, 77.0], [13.4, 77.0], [13.5, 77.0], [13.6, 77.0], [13.7, 77.0], [13.8, 77.0], [13.9, 77.0], [14.0, 77.0], [14.1, 77.0], [14.2, 77.0], [14.3, 77.0], [14.4, 77.0], [14.5, 77.0], [14.6, 77.0], [14.7, 77.0], [14.8, 77.0], [14.9, 77.0], [15.0, 78.0], [15.1, 78.0], [15.2, 78.0], [15.3, 78.0], [15.4, 78.0], [15.5, 78.0], [15.6, 78.0], [15.7, 78.0], [15.8, 78.0], [15.9, 78.0], [16.0, 78.0], [16.1, 78.0], [16.2, 78.0], [16.3, 78.0], [16.4, 78.0], [16.5, 78.0], [16.6, 78.0], [16.7, 78.0], [16.8, 78.0], [16.9, 78.0], [17.0, 78.0], [17.1, 78.0], [17.2, 78.0], [17.3, 78.0], [17.4, 78.0], [17.5, 78.0], [17.6, 78.0], [17.7, 78.0], [17.8, 78.0], [17.9, 78.0], [18.0, 78.0], [18.1, 78.0], [18.2, 78.0], [18.3, 78.0], [18.4, 78.0], [18.5, 78.0], [18.6, 78.0], [18.7, 78.0], [18.8, 78.0], [18.9, 78.0], [19.0, 78.0], [19.1, 78.0], [19.2, 78.0], [19.3, 78.0], [19.4, 78.0], [19.5, 78.0], [19.6, 78.0], [19.7, 78.0], [19.8, 78.0], [19.9, 78.0], [20.0, 78.0], [20.1, 78.0], [20.2, 78.0], [20.3, 78.0], [20.4, 78.0], [20.5, 78.0], [20.6, 78.0], [20.7, 78.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 78.0], [21.2, 78.0], [21.3, 78.0], [21.4, 78.0], [21.5, 78.0], [21.6, 78.0], [21.7, 78.0], [21.8, 78.0], [21.9, 78.0], [22.0, 78.0], [22.1, 78.0], [22.2, 78.0], [22.3, 78.0], [22.4, 78.0], [22.5, 78.0], [22.6, 78.0], [22.7, 78.0], [22.8, 78.0], [22.9, 78.0], [23.0, 79.0], [23.1, 79.0], [23.2, 79.0], [23.3, 79.0], [23.4, 79.0], [23.5, 79.0], [23.6, 79.0], [23.7, 79.0], [23.8, 79.0], [23.9, 79.0], [24.0, 79.0], [24.1, 79.0], [24.2, 79.0], [24.3, 79.0], [24.4, 79.0], [24.5, 79.0], [24.6, 79.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 79.0], [25.4, 79.0], [25.5, 79.0], [25.6, 79.0], [25.7, 79.0], [25.8, 79.0], [25.9, 79.0], [26.0, 79.0], [26.1, 79.0], [26.2, 79.0], [26.3, 79.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 79.0], [27.5, 79.0], [27.6, 79.0], [27.7, 79.0], [27.8, 79.0], [27.9, 79.0], [28.0, 1729.0], [28.1, 1729.0], [28.2, 1729.0], [28.3, 1729.0], [28.4, 1729.0], [28.5, 1729.0], [28.6, 1729.0], [28.7, 1729.0], [28.8, 1729.0], [28.9, 1729.0], [29.0, 1897.0], [29.1, 1897.0], [29.2, 1897.0], [29.3, 1897.0], [29.4, 1897.0], [29.5, 1897.0], [29.6, 1897.0], [29.7, 1897.0], [29.8, 1897.0], [29.9, 1897.0], [30.0, 1932.0], [30.1, 1932.0], [30.2, 1932.0], [30.3, 1932.0], [30.4, 1932.0], [30.5, 1932.0], [30.6, 1932.0], [30.7, 1932.0], [30.8, 1932.0], [30.9, 1932.0], [31.0, 2015.0], [31.1, 2015.0], [31.2, 2015.0], [31.3, 2015.0], [31.4, 2015.0], [31.5, 2015.0], [31.6, 2015.0], [31.7, 2015.0], [31.8, 2015.0], [31.9, 2015.0], [32.0, 2052.0], [32.1, 2052.0], [32.2, 2052.0], [32.3, 2052.0], [32.4, 2052.0], [32.5, 2052.0], [32.6, 2052.0], [32.7, 2052.0], [32.8, 2052.0], [32.9, 2052.0], [33.0, 2101.0], [33.1, 2101.0], [33.2, 2101.0], [33.3, 2101.0], [33.4, 2101.0], [33.5, 2101.0], [33.6, 2101.0], [33.7, 2101.0], [33.8, 2101.0], [33.9, 2101.0], [34.0, 2121.0], [34.1, 2121.0], [34.2, 2121.0], [34.3, 2121.0], [34.4, 2121.0], [34.5, 2121.0], [34.6, 2121.0], [34.7, 2121.0], [34.8, 2121.0], [34.9, 2121.0], [35.0, 2173.0], [35.1, 2173.0], [35.2, 2173.0], [35.3, 2173.0], [35.4, 2173.0], [35.5, 2173.0], [35.6, 2173.0], [35.7, 2173.0], [35.8, 2173.0], [35.9, 2173.0], [36.0, 2203.0], [36.1, 2203.0], [36.2, 2203.0], [36.3, 2203.0], [36.4, 2203.0], [36.5, 2203.0], [36.6, 2203.0], [36.7, 2203.0], [36.8, 2203.0], [36.9, 2203.0], [37.0, 2211.0], [37.1, 2211.0], [37.2, 2211.0], [37.3, 2211.0], [37.4, 2211.0], [37.5, 2211.0], [37.6, 2211.0], [37.7, 2211.0], [37.8, 2211.0], [37.9, 2211.0], [38.0, 2251.0], [38.1, 2251.0], [38.2, 2251.0], [38.3, 2251.0], [38.4, 2251.0], [38.5, 2251.0], [38.6, 2251.0], [38.7, 2251.0], [38.8, 2251.0], [38.9, 2251.0], [39.0, 2252.0], [39.1, 2252.0], [39.2, 2252.0], [39.3, 2252.0], [39.4, 2252.0], [39.5, 2252.0], [39.6, 2252.0], [39.7, 2252.0], [39.8, 2252.0], [39.9, 2252.0], [40.0, 2321.0], [40.1, 2321.0], [40.2, 2321.0], [40.3, 2321.0], [40.4, 2321.0], [40.5, 2321.0], [40.6, 2321.0], [40.7, 2321.0], [40.8, 2321.0], [40.9, 2321.0], [41.0, 2374.0], [41.1, 2374.0], [41.2, 2374.0], [41.3, 2374.0], [41.4, 2374.0], [41.5, 2374.0], [41.6, 2374.0], [41.7, 2374.0], [41.8, 2374.0], [41.9, 2374.0], [42.0, 2443.0], [42.1, 2443.0], [42.2, 2443.0], [42.3, 2443.0], [42.4, 2443.0], [42.5, 2443.0], [42.6, 2443.0], [42.7, 2443.0], [42.8, 2443.0], [42.9, 2443.0], [43.0, 2486.0], [43.1, 2486.0], [43.2, 2486.0], [43.3, 2486.0], [43.4, 2486.0], [43.5, 2486.0], [43.6, 2486.0], [43.7, 2486.0], [43.8, 2486.0], [43.9, 2486.0], [44.0, 2501.0], [44.1, 2501.0], [44.2, 2501.0], [44.3, 2501.0], [44.4, 2501.0], [44.5, 2501.0], [44.6, 2501.0], [44.7, 2501.0], [44.8, 2501.0], [44.9, 2501.0], [45.0, 2505.0], [45.1, 2505.0], [45.2, 2505.0], [45.3, 2505.0], [45.4, 2505.0], [45.5, 2505.0], [45.6, 2505.0], [45.7, 2505.0], [45.8, 2505.0], [45.9, 2505.0], [46.0, 2517.0], [46.1, 2517.0], [46.2, 2517.0], [46.3, 2517.0], [46.4, 2517.0], [46.5, 2517.0], [46.6, 2517.0], [46.7, 2517.0], [46.8, 2517.0], [46.9, 2517.0], [47.0, 2613.0], [47.1, 2613.0], [47.2, 2613.0], [47.3, 2613.0], [47.4, 2613.0], [47.5, 2613.0], [47.6, 2613.0], [47.7, 2613.0], [47.8, 2613.0], [47.9, 2613.0], [48.0, 2652.0], [48.1, 2652.0], [48.2, 2652.0], [48.3, 2652.0], [48.4, 2652.0], [48.5, 2652.0], [48.6, 2652.0], [48.7, 2652.0], [48.8, 2652.0], [48.9, 2652.0], [49.0, 2684.0], [49.1, 2684.0], [49.2, 2684.0], [49.3, 2684.0], [49.4, 2684.0], [49.5, 2684.0], [49.6, 2684.0], [49.7, 2684.0], [49.8, 2684.0], [49.9, 2684.0], [50.0, 2697.0], [50.1, 2697.0], [50.2, 2697.0], [50.3, 2697.0], [50.4, 2697.0], [50.5, 2697.0], [50.6, 2697.0], [50.7, 2697.0], [50.8, 2697.0], [50.9, 2697.0], [51.0, 2698.0], [51.1, 2698.0], [51.2, 2698.0], [51.3, 2698.0], [51.4, 2698.0], [51.5, 2698.0], [51.6, 2698.0], [51.7, 2698.0], [51.8, 2698.0], [51.9, 2698.0], [52.0, 2702.0], [52.1, 2702.0], [52.2, 2702.0], [52.3, 2702.0], [52.4, 2702.0], [52.5, 2702.0], [52.6, 2702.0], [52.7, 2702.0], [52.8, 2702.0], [52.9, 2702.0], [53.0, 2714.0], [53.1, 2714.0], [53.2, 2714.0], [53.3, 2714.0], [53.4, 2714.0], [53.5, 2714.0], [53.6, 2714.0], [53.7, 2714.0], [53.8, 2714.0], [53.9, 2714.0], [54.0, 2716.0], [54.1, 2716.0], [54.2, 2716.0], [54.3, 2716.0], [54.4, 2716.0], [54.5, 2716.0], [54.6, 2716.0], [54.7, 2716.0], [54.8, 2716.0], [54.9, 2716.0], [55.0, 2722.0], [55.1, 2722.0], [55.2, 2722.0], [55.3, 2722.0], [55.4, 2722.0], [55.5, 2722.0], [55.6, 2722.0], [55.7, 2722.0], [55.8, 2722.0], [55.9, 2722.0], [56.0, 2731.0], [56.1, 2731.0], [56.2, 2731.0], [56.3, 2731.0], [56.4, 2731.0], [56.5, 2731.0], [56.6, 2731.0], [56.7, 2731.0], [56.8, 2731.0], [56.9, 2731.0], [57.0, 2874.0], [57.1, 2874.0], [57.2, 2874.0], [57.3, 2874.0], [57.4, 2874.0], [57.5, 2874.0], [57.6, 2874.0], [57.7, 2874.0], [57.8, 2874.0], [57.9, 2874.0], [58.0, 2899.0], [58.1, 2899.0], [58.2, 2899.0], [58.3, 2899.0], [58.4, 2899.0], [58.5, 2899.0], [58.6, 2899.0], [58.7, 2899.0], [58.8, 2899.0], [58.9, 2899.0], [59.0, 2906.0], [59.1, 2906.0], [59.2, 2906.0], [59.3, 2906.0], [59.4, 2906.0], [59.5, 2906.0], [59.6, 2906.0], [59.7, 2906.0], [59.8, 2906.0], [59.9, 2906.0], [60.0, 2924.0], [60.1, 2924.0], [60.2, 2924.0], [60.3, 2924.0], [60.4, 2924.0], [60.5, 2924.0], [60.6, 2924.0], [60.7, 2924.0], [60.8, 2924.0], [60.9, 2924.0], [61.0, 2927.0], [61.1, 2927.0], [61.2, 2927.0], [61.3, 2927.0], [61.4, 2927.0], [61.5, 2927.0], [61.6, 2927.0], [61.7, 2927.0], [61.8, 2927.0], [61.9, 2927.0], [62.0, 2937.0], [62.1, 2937.0], [62.2, 2937.0], [62.3, 2937.0], [62.4, 2937.0], [62.5, 2937.0], [62.6, 2937.0], [62.7, 2937.0], [62.8, 2937.0], [62.9, 2937.0], [63.0, 2954.0], [63.1, 2954.0], [63.2, 2954.0], [63.3, 2954.0], [63.4, 2954.0], [63.5, 2954.0], [63.6, 2954.0], [63.7, 2954.0], [63.8, 2954.0], [63.9, 2954.0], [64.0, 2980.0], [64.1, 2980.0], [64.2, 2980.0], [64.3, 2980.0], [64.4, 2980.0], [64.5, 2980.0], [64.6, 2980.0], [64.7, 2980.0], [64.8, 2980.0], [64.9, 2980.0], [65.0, 2988.0], [65.1, 2988.0], [65.2, 2988.0], [65.3, 2988.0], [65.4, 2988.0], [65.5, 2988.0], [65.6, 2988.0], [65.7, 2988.0], [65.8, 2988.0], [65.9, 2988.0], [66.0, 3001.0], [66.1, 3001.0], [66.2, 3001.0], [66.3, 3001.0], [66.4, 3001.0], [66.5, 3001.0], [66.6, 3001.0], [66.7, 3001.0], [66.8, 3001.0], [66.9, 3001.0], [67.0, 3008.0], [67.1, 3008.0], [67.2, 3008.0], [67.3, 3008.0], [67.4, 3008.0], [67.5, 3008.0], [67.6, 3008.0], [67.7, 3008.0], [67.8, 3008.0], [67.9, 3008.0], [68.0, 3009.0], [68.1, 3009.0], [68.2, 3009.0], [68.3, 3009.0], [68.4, 3009.0], [68.5, 3009.0], [68.6, 3009.0], [68.7, 3009.0], [68.8, 3009.0], [68.9, 3009.0], [69.0, 3039.0], [69.1, 3039.0], [69.2, 3039.0], [69.3, 3039.0], [69.4, 3039.0], [69.5, 3039.0], [69.6, 3039.0], [69.7, 3039.0], [69.8, 3039.0], [69.9, 3039.0], [70.0, 3042.0], [70.1, 3042.0], [70.2, 3042.0], [70.3, 3042.0], [70.4, 3042.0], [70.5, 3042.0], [70.6, 3042.0], [70.7, 3042.0], [70.8, 3042.0], [70.9, 3042.0], [71.0, 3046.0], [71.1, 3046.0], [71.2, 3046.0], [71.3, 3046.0], [71.4, 3046.0], [71.5, 3046.0], [71.6, 3046.0], [71.7, 3046.0], [71.8, 3046.0], [71.9, 3046.0], [72.0, 3090.0], [72.1, 3090.0], [72.2, 3090.0], [72.3, 3090.0], [72.4, 3090.0], [72.5, 3090.0], [72.6, 3090.0], [72.7, 3090.0], [72.8, 3090.0], [72.9, 3090.0], [73.0, 3098.0], [73.1, 3098.0], [73.2, 3098.0], [73.3, 3098.0], [73.4, 3098.0], [73.5, 3098.0], [73.6, 3098.0], [73.7, 3098.0], [73.8, 3098.0], [73.9, 3098.0], [74.0, 3105.0], [74.1, 3105.0], [74.2, 3105.0], [74.3, 3105.0], [74.4, 3105.0], [74.5, 3105.0], [74.6, 3105.0], [74.7, 3105.0], [74.8, 3105.0], [74.9, 3105.0], [75.0, 3118.0], [75.1, 3118.0], [75.2, 3118.0], [75.3, 3118.0], [75.4, 3118.0], [75.5, 3118.0], [75.6, 3118.0], [75.7, 3118.0], [75.8, 3118.0], [75.9, 3118.0], [76.0, 3124.0], [76.1, 3124.0], [76.2, 3124.0], [76.3, 3124.0], [76.4, 3124.0], [76.5, 3124.0], [76.6, 3124.0], [76.7, 3124.0], [76.8, 3124.0], [76.9, 3124.0], [77.0, 3129.0], [77.1, 3129.0], [77.2, 3129.0], [77.3, 3129.0], [77.4, 3129.0], [77.5, 3129.0], [77.6, 3129.0], [77.7, 3129.0], [77.8, 3129.0], [77.9, 3129.0], [78.0, 3222.0], [78.1, 3222.0], [78.2, 3222.0], [78.3, 3222.0], [78.4, 3222.0], [78.5, 3222.0], [78.6, 3222.0], [78.7, 3222.0], [78.8, 3222.0], [78.9, 3222.0], [79.0, 3239.0], [79.1, 3239.0], [79.2, 3239.0], [79.3, 3239.0], [79.4, 3239.0], [79.5, 3239.0], [79.6, 3239.0], [79.7, 3239.0], [79.8, 3239.0], [79.9, 3239.0], [80.0, 3252.0], [80.1, 3252.0], [80.2, 3252.0], [80.3, 3252.0], [80.4, 3252.0], [80.5, 3252.0], [80.6, 3252.0], [80.7, 3252.0], [80.8, 3252.0], [80.9, 3252.0], [81.0, 3254.0], [81.1, 3254.0], [81.2, 3254.0], [81.3, 3254.0], [81.4, 3254.0], [81.5, 3254.0], [81.6, 3254.0], [81.7, 3254.0], [81.8, 3254.0], [81.9, 3254.0], [82.0, 3276.0], [82.1, 3276.0], [82.2, 3276.0], [82.3, 3276.0], [82.4, 3276.0], [82.5, 3276.0], [82.6, 3276.0], [82.7, 3276.0], [82.8, 3276.0], [82.9, 3276.0], [83.0, 3282.0], [83.1, 3282.0], [83.2, 3282.0], [83.3, 3282.0], [83.4, 3282.0], [83.5, 3282.0], [83.6, 3282.0], [83.7, 3282.0], [83.8, 3282.0], [83.9, 3282.0], [84.0, 3462.0], [84.1, 3462.0], [84.2, 3462.0], [84.3, 3462.0], [84.4, 3462.0], [84.5, 3462.0], [84.6, 3462.0], [84.7, 3462.0], [84.8, 3462.0], [84.9, 3462.0], [85.0, 3506.0], [85.1, 3506.0], [85.2, 3506.0], [85.3, 3506.0], [85.4, 3506.0], [85.5, 3506.0], [85.6, 3506.0], [85.7, 3506.0], [85.8, 3506.0], [85.9, 3506.0], [86.0, 3518.0], [86.1, 3518.0], [86.2, 3518.0], [86.3, 3518.0], [86.4, 3518.0], [86.5, 3518.0], [86.6, 3518.0], [86.7, 3518.0], [86.8, 3518.0], [86.9, 3518.0], [87.0, 3520.0], [87.1, 3520.0], [87.2, 3520.0], [87.3, 3520.0], [87.4, 3520.0], [87.5, 3520.0], [87.6, 3520.0], [87.7, 3520.0], [87.8, 3520.0], [87.9, 3520.0], [88.0, 3556.0], [88.1, 3556.0], [88.2, 3556.0], [88.3, 3556.0], [88.4, 3556.0], [88.5, 3556.0], [88.6, 3556.0], [88.7, 3556.0], [88.8, 3556.0], [88.9, 3556.0], [89.0, 3620.0], [89.1, 3620.0], [89.2, 3620.0], [89.3, 3620.0], [89.4, 3620.0], [89.5, 3620.0], [89.6, 3620.0], [89.7, 3620.0], [89.8, 3620.0], [89.9, 3620.0], [90.0, 3692.0], [90.1, 3692.0], [90.2, 3692.0], [90.3, 3692.0], [90.4, 3692.0], [90.5, 3692.0], [90.6, 3692.0], [90.7, 3692.0], [90.8, 3692.0], [90.9, 3692.0], [91.0, 3723.0], [91.1, 3723.0], [91.2, 3723.0], [91.3, 3723.0], [91.4, 3723.0], [91.5, 3723.0], [91.6, 3723.0], [91.7, 3723.0], [91.8, 3723.0], [91.9, 3723.0], [92.0, 3858.0], [92.1, 3858.0], [92.2, 3858.0], [92.3, 3858.0], [92.4, 3858.0], [92.5, 3858.0], [92.6, 3858.0], [92.7, 3858.0], [92.8, 3858.0], [92.9, 3858.0], [93.0, 3862.0], [93.1, 3862.0], [93.2, 3862.0], [93.3, 3862.0], [93.4, 3862.0], [93.5, 3862.0], [93.6, 3862.0], [93.7, 3862.0], [93.8, 3862.0], [93.9, 3862.0], [94.0, 3869.0], [94.1, 3869.0], [94.2, 3869.0], [94.3, 3869.0], [94.4, 3869.0], [94.5, 3869.0], [94.6, 3869.0], [94.7, 3869.0], [94.8, 3869.0], [94.9, 3869.0], [95.0, 3873.0], [95.1, 3873.0], [95.2, 3873.0], [95.3, 3873.0], [95.4, 3873.0], [95.5, 3873.0], [95.6, 3873.0], [95.7, 3873.0], [95.8, 3873.0], [95.9, 3873.0], [96.0, 3978.0], [96.1, 3978.0], [96.2, 3978.0], [96.3, 3978.0], [96.4, 3978.0], [96.5, 3978.0], [96.6, 3978.0], [96.7, 3978.0], [96.8, 3978.0], [96.9, 3978.0], [97.0, 4063.0], [97.1, 4063.0], [97.2, 4063.0], [97.3, 4063.0], [97.4, 4063.0], [97.5, 4063.0], [97.6, 4063.0], [97.7, 4063.0], [97.8, 4063.0], [97.9, 4063.0], [98.0, 4098.0], [98.1, 4098.0], [98.2, 4098.0], [98.3, 4098.0], [98.4, 4098.0], [98.5, 4098.0], [98.6, 4098.0], [98.7, 4098.0], [98.8, 4098.0], [98.9, 4098.0], [99.0, 4361.0], [99.1, 4361.0], [99.2, 4361.0], [99.3, 4361.0], [99.4, 4361.0], [99.5, 4361.0], [99.6, 4361.0], [99.7, 4361.0], [99.8, 4361.0], [99.9, 4361.0]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[0.0, 70.0], [0.1, 70.0], [0.2, 70.0], [0.3, 70.0], [0.4, 70.0], [0.5, 70.0], [0.6, 70.0], [0.7, 70.0], [0.8, 70.0], [0.9, 70.0], [1.0, 70.0], [1.1, 70.0], [1.2, 70.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 70.0], [1.8, 70.0], [1.9, 70.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 70.0], [2.6, 70.0], [2.7, 70.0], [2.8, 70.0], [2.9, 70.0], [3.0, 70.0], [3.1, 70.0], [3.2, 70.0], [3.3, 70.0], [3.4, 70.0], [3.5, 70.0], [3.6, 70.0], [3.7, 70.0], [3.8, 70.0], [3.9, 70.0], [4.0, 70.0], [4.1, 70.0], [4.2, 70.0], [4.3, 70.0], [4.4, 70.0], [4.5, 70.0], [4.6, 70.0], [4.7, 70.0], [4.8, 70.0], [4.9, 70.0], [5.0, 70.0], [5.1, 70.0], [5.2, 70.0], [5.3, 70.0], [5.4, 70.0], [5.5, 70.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 70.0], [6.9, 70.0], [7.0, 70.0], [7.1, 70.0], [7.2, 70.0], [7.3, 70.0], [7.4, 70.0], [7.5, 70.0], [7.6, 70.0], [7.7, 70.0], [7.8, 70.0], [7.9, 70.0], [8.0, 70.0], [8.1, 70.0], [8.2, 70.0], [8.3, 70.0], [8.4, 70.0], [8.5, 70.0], [8.6, 70.0], [8.7, 70.0], [8.8, 70.0], [8.9, 70.0], [9.0, 70.0], [9.1, 70.0], [9.2, 70.0], [9.3, 70.0], [9.4, 70.0], [9.5, 70.0], [9.6, 70.0], [9.7, 70.0], [9.8, 70.0], [9.9, 70.0], [10.0, 70.0], [10.1, 70.0], [10.2, 70.0], [10.3, 70.0], [10.4, 70.0], [10.5, 70.0], [10.6, 70.0], [10.7, 70.0], [10.8, 70.0], [10.9, 70.0], [11.0, 70.0], [11.1, 70.0], [11.2, 70.0], [11.3, 70.0], [11.4, 70.0], [11.5, 70.0], [11.6, 70.0], [11.7, 70.0], [11.8, 70.0], [11.9, 70.0], [12.0, 70.0], [12.1, 70.0], [12.2, 70.0], [12.3, 70.0], [12.4, 70.0], [12.5, 70.0], [12.6, 70.0], [12.7, 70.0], [12.8, 70.0], [12.9, 70.0], [13.0, 70.0], [13.1, 70.0], [13.2, 70.0], [13.3, 70.0], [13.4, 70.0], [13.5, 70.0], [13.6, 70.0], [13.7, 70.0], [13.8, 70.0], [13.9, 70.0], [14.0, 70.0], [14.1, 70.0], [14.2, 70.0], [14.3, 70.0], [14.4, 70.0], [14.5, 70.0], [14.6, 70.0], [14.7, 70.0], [14.8, 70.0], [14.9, 70.0], [15.0, 71.0], [15.1, 71.0], [15.2, 71.0], [15.3, 71.0], [15.4, 71.0], [15.5, 71.0], [15.6, 71.0], [15.7, 71.0], [15.8, 71.0], [15.9, 71.0], [16.0, 71.0], [16.1, 71.0], [16.2, 71.0], [16.3, 71.0], [16.4, 71.0], [16.5, 71.0], [16.6, 71.0], [16.7, 71.0], [16.8, 71.0], [16.9, 71.0], [17.0, 71.0], [17.1, 71.0], [17.2, 71.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 71.0], [17.9, 71.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 71.0], [18.4, 71.0], [18.5, 71.0], [18.6, 71.0], [18.7, 71.0], [18.8, 71.0], [18.9, 71.0], [19.0, 71.0], [19.1, 71.0], [19.2, 71.0], [19.3, 71.0], [19.4, 71.0], [19.5, 71.0], [19.6, 71.0], [19.7, 71.0], [19.8, 71.0], [19.9, 71.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 72.0], [20.4, 72.0], [20.5, 72.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 72.0], [21.3, 72.0], [21.4, 72.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 72.0], [22.0, 72.0], [22.1, 72.0], [22.2, 72.0], [22.3, 72.0], [22.4, 72.0], [22.5, 72.0], [22.6, 72.0], [22.7, 72.0], [22.8, 72.0], [22.9, 72.0], [23.0, 72.0], [23.1, 72.0], [23.2, 72.0], [23.3, 72.0], [23.4, 72.0], [23.5, 72.0], [23.6, 72.0], [23.7, 72.0], [23.8, 72.0], [23.9, 72.0], [24.0, 72.0], [24.1, 72.0], [24.2, 72.0], [24.3, 72.0], [24.4, 72.0], [24.5, 72.0], [24.6, 72.0], [24.7, 72.0], [24.8, 72.0], [24.9, 72.0], [25.0, 73.0], [25.1, 73.0], [25.2, 73.0], [25.3, 73.0], [25.4, 73.0], [25.5, 73.0], [25.6, 73.0], [25.7, 73.0], [25.8, 73.0], [25.9, 73.0], [26.0, 73.0], [26.1, 73.0], [26.2, 73.0], [26.3, 73.0], [26.4, 73.0], [26.5, 73.0], [26.6, 73.0], [26.7, 73.0], [26.8, 73.0], [26.9, 73.0], [27.0, 73.0], [27.1, 73.0], [27.2, 73.0], [27.3, 73.0], [27.4, 73.0], [27.5, 73.0], [27.6, 73.0], [27.7, 73.0], [27.8, 73.0], [27.9, 73.0], [28.0, 73.0], [28.1, 73.0], [28.2, 73.0], [28.3, 73.0], [28.4, 73.0], [28.5, 73.0], [28.6, 73.0], [28.7, 73.0], [28.8, 73.0], [28.9, 73.0], [29.0, 73.0], [29.1, 73.0], [29.2, 73.0], [29.3, 73.0], [29.4, 73.0], [29.5, 73.0], [29.6, 73.0], [29.7, 73.0], [29.8, 73.0], [29.9, 73.0], [30.0, 73.0], [30.1, 73.0], [30.2, 73.0], [30.3, 73.0], [30.4, 73.0], [30.5, 73.0], [30.6, 73.0], [30.7, 73.0], [30.8, 73.0], [30.9, 73.0], [31.0, 73.0], [31.1, 73.0], [31.2, 73.0], [31.3, 73.0], [31.4, 73.0], [31.5, 73.0], [31.6, 73.0], [31.7, 73.0], [31.8, 73.0], [31.9, 73.0], [32.0, 1666.0], [32.1, 1666.0], [32.2, 1666.0], [32.3, 1666.0], [32.4, 1666.0], [32.5, 1666.0], [32.6, 1666.0], [32.7, 1666.0], [32.8, 1666.0], [32.9, 1666.0], [33.0, 1678.0], [33.1, 1678.0], [33.2, 1678.0], [33.3, 1678.0], [33.4, 1678.0], [33.5, 1678.0], [33.6, 1678.0], [33.7, 1678.0], [33.8, 1678.0], [33.9, 1678.0], [34.0, 1747.0], [34.1, 1747.0], [34.2, 1747.0], [34.3, 1747.0], [34.4, 1747.0], [34.5, 1747.0], [34.6, 1747.0], [34.7, 1747.0], [34.8, 1747.0], [34.9, 1747.0], [35.0, 1827.0], [35.1, 1827.0], [35.2, 1827.0], [35.3, 1827.0], [35.4, 1827.0], [35.5, 1827.0], [35.6, 1827.0], [35.7, 1827.0], [35.8, 1827.0], [35.9, 1827.0], [36.0, 1882.0], [36.1, 1882.0], [36.2, 1882.0], [36.3, 1882.0], [36.4, 1882.0], [36.5, 1882.0], [36.6, 1882.0], [36.7, 1882.0], [36.8, 1882.0], [36.9, 1882.0], [37.0, 1938.0], [37.1, 1938.0], [37.2, 1938.0], [37.3, 1938.0], [37.4, 1938.0], [37.5, 1938.0], [37.6, 1938.0], [37.7, 1938.0], [37.8, 1938.0], [37.9, 1938.0], [38.0, 2207.0], [38.1, 2207.0], [38.2, 2207.0], [38.3, 2207.0], [38.4, 2207.0], [38.5, 2207.0], [38.6, 2207.0], [38.7, 2207.0], [38.8, 2207.0], [38.9, 2207.0], [39.0, 2513.0], [39.1, 2513.0], [39.2, 2513.0], [39.3, 2513.0], [39.4, 2513.0], [39.5, 2513.0], [39.6, 2513.0], [39.7, 2513.0], [39.8, 2513.0], [39.9, 2513.0], [40.0, 2536.0], [40.1, 2536.0], [40.2, 2536.0], [40.3, 2536.0], [40.4, 2536.0], [40.5, 2536.0], [40.6, 2536.0], [40.7, 2536.0], [40.8, 2536.0], [40.9, 2536.0], [41.0, 2573.0], [41.1, 2573.0], [41.2, 2573.0], [41.3, 2573.0], [41.4, 2573.0], [41.5, 2573.0], [41.6, 2573.0], [41.7, 2573.0], [41.8, 2573.0], [41.9, 2573.0], [42.0, 2596.0], [42.1, 2596.0], [42.2, 2596.0], [42.3, 2596.0], [42.4, 2596.0], [42.5, 2596.0], [42.6, 2596.0], [42.7, 2596.0], [42.8, 2596.0], [42.9, 2596.0], [43.0, 2619.0], [43.1, 2619.0], [43.2, 2619.0], [43.3, 2619.0], [43.4, 2619.0], [43.5, 2619.0], [43.6, 2619.0], [43.7, 2619.0], [43.8, 2619.0], [43.9, 2619.0], [44.0, 2632.0], [44.1, 2632.0], [44.2, 2632.0], [44.3, 2632.0], [44.4, 2632.0], [44.5, 2632.0], [44.6, 2632.0], [44.7, 2632.0], [44.8, 2632.0], [44.9, 2632.0], [45.0, 2659.0], [45.1, 2659.0], [45.2, 2659.0], [45.3, 2659.0], [45.4, 2659.0], [45.5, 2659.0], [45.6, 2659.0], [45.7, 2659.0], [45.8, 2659.0], [45.9, 2659.0], [46.0, 2695.0], [46.1, 2695.0], [46.2, 2695.0], [46.3, 2695.0], [46.4, 2695.0], [46.5, 2695.0], [46.6, 2695.0], [46.7, 2695.0], [46.8, 2695.0], [46.9, 2695.0], [47.0, 2706.0], [47.1, 2706.0], [47.2, 2706.0], [47.3, 2706.0], [47.4, 2706.0], [47.5, 2706.0], [47.6, 2706.0], [47.7, 2706.0], [47.8, 2706.0], [47.9, 2706.0], [48.0, 2726.0], [48.1, 2726.0], [48.2, 2726.0], [48.3, 2726.0], [48.4, 2726.0], [48.5, 2726.0], [48.6, 2726.0], [48.7, 2726.0], [48.8, 2726.0], [48.9, 2726.0], [49.0, 2751.0], [49.1, 2751.0], [49.2, 2751.0], [49.3, 2751.0], [49.4, 2751.0], [49.5, 2751.0], [49.6, 2751.0], [49.7, 2751.0], [49.8, 2751.0], [49.9, 2751.0], [50.0, 2752.0], [50.1, 2752.0], [50.2, 2752.0], [50.3, 2752.0], [50.4, 2752.0], [50.5, 2752.0], [50.6, 2752.0], [50.7, 2752.0], [50.8, 2752.0], [50.9, 2752.0], [51.0, 2802.0], [51.1, 2802.0], [51.2, 2802.0], [51.3, 2802.0], [51.4, 2802.0], [51.5, 2802.0], [51.6, 2802.0], [51.7, 2802.0], [51.8, 2802.0], [51.9, 2802.0], [52.0, 2803.0], [52.1, 2803.0], [52.2, 2803.0], [52.3, 2803.0], [52.4, 2803.0], [52.5, 2803.0], [52.6, 2803.0], [52.7, 2803.0], [52.8, 2803.0], [52.9, 2803.0], [53.0, 2823.0], [53.1, 2823.0], [53.2, 2823.0], [53.3, 2823.0], [53.4, 2823.0], [53.5, 2823.0], [53.6, 2823.0], [53.7, 2823.0], [53.8, 2823.0], [53.9, 2823.0], [54.0, 2862.0], [54.1, 2862.0], [54.2, 2862.0], [54.3, 2862.0], [54.4, 2862.0], [54.5, 2862.0], [54.6, 2862.0], [54.7, 2862.0], [54.8, 2862.0], [54.9, 2862.0], [55.0, 2893.0], [55.1, 2893.0], [55.2, 2893.0], [55.3, 2893.0], [55.4, 2893.0], [55.5, 2893.0], [55.6, 2893.0], [55.7, 2893.0], [55.8, 2893.0], [55.9, 2893.0], [56.0, 2917.0], [56.1, 2917.0], [56.2, 2917.0], [56.3, 2917.0], [56.4, 2917.0], [56.5, 2917.0], [56.6, 2917.0], [56.7, 2917.0], [56.8, 2917.0], [56.9, 2917.0], [57.0, 2922.0], [57.1, 2922.0], [57.2, 2922.0], [57.3, 2922.0], [57.4, 2922.0], [57.5, 2922.0], [57.6, 2922.0], [57.7, 2922.0], [57.8, 2922.0], [57.9, 2922.0], [58.0, 2928.0], [58.1, 2928.0], [58.2, 2928.0], [58.3, 2928.0], [58.4, 2928.0], [58.5, 2928.0], [58.6, 2928.0], [58.7, 2928.0], [58.8, 2928.0], [58.9, 2928.0], [59.0, 2932.0], [59.1, 2932.0], [59.2, 2932.0], [59.3, 2932.0], [59.4, 2932.0], [59.5, 2932.0], [59.6, 2932.0], [59.7, 2932.0], [59.8, 2932.0], [59.9, 2932.0], [60.0, 2955.0], [60.1, 2955.0], [60.2, 2955.0], [60.3, 2955.0], [60.4, 2955.0], [60.5, 2955.0], [60.6, 2955.0], [60.7, 2955.0], [60.8, 2955.0], [60.9, 2955.0], [61.0, 2960.0], [61.1, 2960.0], [61.2, 2960.0], [61.3, 2960.0], [61.4, 2960.0], [61.5, 2960.0], [61.6, 2960.0], [61.7, 2960.0], [61.8, 2960.0], [61.9, 2960.0], [62.0, 2968.0], [62.1, 2968.0], [62.2, 2968.0], [62.3, 2968.0], [62.4, 2968.0], [62.5, 2968.0], [62.6, 2968.0], [62.7, 2968.0], [62.8, 2968.0], [62.9, 2968.0], [63.0, 2995.0], [63.1, 2995.0], [63.2, 2995.0], [63.3, 2995.0], [63.4, 2995.0], [63.5, 2995.0], [63.6, 2995.0], [63.7, 2995.0], [63.8, 2995.0], [63.9, 2995.0], [64.0, 3018.0], [64.1, 3018.0], [64.2, 3018.0], [64.3, 3018.0], [64.4, 3018.0], [64.5, 3018.0], [64.6, 3018.0], [64.7, 3018.0], [64.8, 3018.0], [64.9, 3018.0], [65.0, 3028.0], [65.1, 3028.0], [65.2, 3028.0], [65.3, 3028.0], [65.4, 3028.0], [65.5, 3028.0], [65.6, 3028.0], [65.7, 3028.0], [65.8, 3028.0], [65.9, 3028.0], [66.0, 3045.0], [66.1, 3045.0], [66.2, 3045.0], [66.3, 3045.0], [66.4, 3045.0], [66.5, 3045.0], [66.6, 3045.0], [66.7, 3045.0], [66.8, 3045.0], [66.9, 3045.0], [67.0, 3161.0], [67.1, 3161.0], [67.2, 3161.0], [67.3, 3161.0], [67.4, 3161.0], [67.5, 3161.0], [67.6, 3161.0], [67.7, 3161.0], [67.8, 3161.0], [67.9, 3161.0], [68.0, 3350.0], [68.1, 3350.0], [68.2, 3350.0], [68.3, 3350.0], [68.4, 3350.0], [68.5, 3350.0], [68.6, 3350.0], [68.7, 3350.0], [68.8, 3350.0], [68.9, 3350.0], [69.0, 3560.0], [69.1, 3560.0], [69.2, 3560.0], [69.3, 3560.0], [69.4, 3560.0], [69.5, 3560.0], [69.6, 3560.0], [69.7, 3560.0], [69.8, 3560.0], [69.9, 3560.0], [70.0, 3658.0], [70.1, 3658.0], [70.2, 3658.0], [70.3, 3658.0], [70.4, 3658.0], [70.5, 3658.0], [70.6, 3658.0], [70.7, 3658.0], [70.8, 3658.0], [70.9, 3658.0], [71.0, 3743.0], [71.1, 3743.0], [71.2, 3743.0], [71.3, 3743.0], [71.4, 3743.0], [71.5, 3743.0], [71.6, 3743.0], [71.7, 3743.0], [71.8, 3743.0], [71.9, 3743.0], [72.0, 3819.0], [72.1, 3819.0], [72.2, 3819.0], [72.3, 3819.0], [72.4, 3819.0], [72.5, 3819.0], [72.6, 3819.0], [72.7, 3819.0], [72.8, 3819.0], [72.9, 3819.0], [73.0, 3852.0], [73.1, 3852.0], [73.2, 3852.0], [73.3, 3852.0], [73.4, 3852.0], [73.5, 3852.0], [73.6, 3852.0], [73.7, 3852.0], [73.8, 3852.0], [73.9, 3852.0], [74.0, 3874.0], [74.1, 3874.0], [74.2, 3874.0], [74.3, 3874.0], [74.4, 3874.0], [74.5, 3874.0], [74.6, 3874.0], [74.7, 3874.0], [74.8, 3874.0], [74.9, 3874.0], [75.0, 3935.0], [75.1, 3935.0], [75.2, 3935.0], [75.3, 3935.0], [75.4, 3935.0], [75.5, 3935.0], [75.6, 3935.0], [75.7, 3935.0], [75.8, 3935.0], [75.9, 3935.0], [76.0, 3968.0], [76.1, 3968.0], [76.2, 3968.0], [76.3, 3968.0], [76.4, 3968.0], [76.5, 3968.0], [76.6, 3968.0], [76.7, 3968.0], [76.8, 3968.0], [76.9, 3968.0], [77.0, 3969.0], [77.1, 3969.0], [77.2, 3969.0], [77.3, 3969.0], [77.4, 3969.0], [77.5, 3969.0], [77.6, 3969.0], [77.7, 3969.0], [77.8, 3969.0], [77.9, 3969.0], [78.0, 3989.0], [78.1, 3989.0], [78.2, 3989.0], [78.3, 3989.0], [78.4, 3989.0], [78.5, 3989.0], [78.6, 3989.0], [78.7, 3989.0], [78.8, 3989.0], [78.9, 3989.0], [79.0, 4014.0], [79.1, 4014.0], [79.2, 4014.0], [79.3, 4014.0], [79.4, 4014.0], [79.5, 4014.0], [79.6, 4014.0], [79.7, 4014.0], [79.8, 4014.0], [79.9, 4014.0], [80.0, 4032.0], [80.1, 4032.0], [80.2, 4032.0], [80.3, 4032.0], [80.4, 4032.0], [80.5, 4032.0], [80.6, 4032.0], [80.7, 4032.0], [80.8, 4032.0], [80.9, 4032.0], [81.0, 4055.0], [81.1, 4055.0], [81.2, 4055.0], [81.3, 4055.0], [81.4, 4055.0], [81.5, 4055.0], [81.6, 4055.0], [81.7, 4055.0], [81.8, 4055.0], [81.9, 4055.0], [82.0, 4118.0], [82.1, 4118.0], [82.2, 4118.0], [82.3, 4118.0], [82.4, 4118.0], [82.5, 4118.0], [82.6, 4118.0], [82.7, 4118.0], [82.8, 4118.0], [82.9, 4118.0], [83.0, 4180.0], [83.1, 4180.0], [83.2, 4180.0], [83.3, 4180.0], [83.4, 4180.0], [83.5, 4180.0], [83.6, 4180.0], [83.7, 4180.0], [83.8, 4180.0], [83.9, 4180.0], [84.0, 4225.0], [84.1, 4225.0], [84.2, 4225.0], [84.3, 4225.0], [84.4, 4225.0], [84.5, 4225.0], [84.6, 4225.0], [84.7, 4225.0], [84.8, 4225.0], [84.9, 4225.0], [85.0, 4309.0], [85.1, 4309.0], [85.2, 4309.0], [85.3, 4309.0], [85.4, 4309.0], [85.5, 4309.0], [85.6, 4309.0], [85.7, 4309.0], [85.8, 4309.0], [85.9, 4309.0], [86.0, 4310.0], [86.1, 4310.0], [86.2, 4310.0], [86.3, 4310.0], [86.4, 4310.0], [86.5, 4310.0], [86.6, 4310.0], [86.7, 4310.0], [86.8, 4310.0], [86.9, 4310.0], [87.0, 4319.0], [87.1, 4319.0], [87.2, 4319.0], [87.3, 4319.0], [87.4, 4319.0], [87.5, 4319.0], [87.6, 4319.0], [87.7, 4319.0], [87.8, 4319.0], [87.9, 4319.0], [88.0, 4334.0], [88.1, 4334.0], [88.2, 4334.0], [88.3, 4334.0], [88.4, 4334.0], [88.5, 4334.0], [88.6, 4334.0], [88.7, 4334.0], [88.8, 4334.0], [88.9, 4334.0], [89.0, 4358.0], [89.1, 4358.0], [89.2, 4358.0], [89.3, 4358.0], [89.4, 4358.0], [89.5, 4358.0], [89.6, 4358.0], [89.7, 4358.0], [89.8, 4358.0], [89.9, 4358.0], [90.0, 4397.0], [90.1, 4397.0], [90.2, 4397.0], [90.3, 4397.0], [90.4, 4397.0], [90.5, 4397.0], [90.6, 4397.0], [90.7, 4397.0], [90.8, 4397.0], [90.9, 4397.0], [91.0, 4445.0], [91.1, 4445.0], [91.2, 4445.0], [91.3, 4445.0], [91.4, 4445.0], [91.5, 4445.0], [91.6, 4445.0], [91.7, 4445.0], [91.8, 4445.0], [91.9, 4445.0], [92.0, 4446.0], [92.1, 4446.0], [92.2, 4446.0], [92.3, 4446.0], [92.4, 4446.0], [92.5, 4446.0], [92.6, 4446.0], [92.7, 4446.0], [92.8, 4446.0], [92.9, 4446.0], [93.0, 4643.0], [93.1, 4643.0], [93.2, 4643.0], [93.3, 4643.0], [93.4, 4643.0], [93.5, 4643.0], [93.6, 4643.0], [93.7, 4643.0], [93.8, 4643.0], [93.9, 4643.0], [94.0, 4757.0], [94.1, 4757.0], [94.2, 4757.0], [94.3, 4757.0], [94.4, 4757.0], [94.5, 4757.0], [94.6, 4757.0], [94.7, 4757.0], [94.8, 4757.0], [94.9, 4757.0], [95.0, 4801.0], [95.1, 4801.0], [95.2, 4801.0], [95.3, 4801.0], [95.4, 4801.0], [95.5, 4801.0], [95.6, 4801.0], [95.7, 4801.0], [95.8, 4801.0], [95.9, 4801.0], [96.0, 5268.0], [96.1, 5268.0], [96.2, 5268.0], [96.3, 5268.0], [96.4, 5268.0], [96.5, 5268.0], [96.6, 5268.0], [96.7, 5268.0], [96.8, 5268.0], [96.9, 5268.0], [97.0, 5361.0], [97.1, 5361.0], [97.2, 5361.0], [97.3, 5361.0], [97.4, 5361.0], [97.5, 5361.0], [97.6, 5361.0], [97.7, 5361.0], [97.8, 5361.0], [97.9, 5361.0], [98.0, 5526.0], [98.1, 5526.0], [98.2, 5526.0], [98.3, 5526.0], [98.4, 5526.0], [98.5, 5526.0], [98.6, 5526.0], [98.7, 5526.0], [98.8, 5526.0], [98.9, 5526.0], [99.0, 6012.0], [99.1, 6012.0], [99.2, 6012.0], [99.3, 6012.0], [99.4, 6012.0], [99.5, 6012.0], [99.6, 6012.0], [99.7, 6012.0], [99.8, 6012.0], [99.9, 6012.0]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[0.0, 802.0], [0.1, 802.0], [0.2, 802.0], [0.3, 802.0], [0.4, 802.0], [0.5, 802.0], [0.6, 802.0], [0.7, 802.0], [0.8, 802.0], [0.9, 802.0], [1.0, 828.0], [1.1, 828.0], [1.2, 828.0], [1.3, 828.0], [1.4, 828.0], [1.5, 828.0], [1.6, 828.0], [1.7, 828.0], [1.8, 828.0], [1.9, 828.0], [2.0, 879.0], [2.1, 879.0], [2.2, 879.0], [2.3, 879.0], [2.4, 879.0], [2.5, 879.0], [2.6, 879.0], [2.7, 879.0], [2.8, 879.0], [2.9, 879.0], [3.0, 886.0], [3.1, 886.0], [3.2, 886.0], [3.3, 886.0], [3.4, 886.0], [3.5, 886.0], [3.6, 886.0], [3.7, 886.0], [3.8, 886.0], [3.9, 886.0], [4.0, 923.0], [4.1, 923.0], [4.2, 923.0], [4.3, 923.0], [4.4, 923.0], [4.5, 923.0], [4.6, 923.0], [4.7, 923.0], [4.8, 923.0], [4.9, 923.0], [5.0, 977.0], [5.1, 977.0], [5.2, 977.0], [5.3, 977.0], [5.4, 977.0], [5.5, 977.0], [5.6, 977.0], [5.7, 977.0], [5.8, 977.0], [5.9, 977.0], [6.0, 1108.0], [6.1, 1108.0], [6.2, 1108.0], [6.3, 1108.0], [6.4, 1108.0], [6.5, 1108.0], [6.6, 1108.0], [6.7, 1108.0], [6.8, 1108.0], [6.9, 1108.0], [7.0, 1111.0], [7.1, 1111.0], [7.2, 1111.0], [7.3, 1111.0], [7.4, 1111.0], [7.5, 1111.0], [7.6, 1111.0], [7.7, 1111.0], [7.8, 1111.0], [7.9, 1111.0], [8.0, 1127.0], [8.1, 1127.0], [8.2, 1127.0], [8.3, 1127.0], [8.4, 1127.0], [8.5, 1127.0], [8.6, 1127.0], [8.7, 1127.0], [8.8, 1127.0], [8.9, 1127.0], [9.0, 1132.0], [9.1, 1132.0], [9.2, 1132.0], [9.3, 1132.0], [9.4, 1132.0], [9.5, 1132.0], [9.6, 1132.0], [9.7, 1132.0], [9.8, 1132.0], [9.9, 1132.0], [10.0, 1202.0], [10.1, 1202.0], [10.2, 1202.0], [10.3, 1202.0], [10.4, 1202.0], [10.5, 1202.0], [10.6, 1202.0], [10.7, 1202.0], [10.8, 1202.0], [10.9, 1202.0], [11.0, 1217.0], [11.1, 1217.0], [11.2, 1217.0], [11.3, 1217.0], [11.4, 1217.0], [11.5, 1217.0], [11.6, 1217.0], [11.7, 1217.0], [11.8, 1217.0], [11.9, 1217.0], [12.0, 1302.0], [12.1, 1302.0], [12.2, 1302.0], [12.3, 1302.0], [12.4, 1302.0], [12.5, 1302.0], [12.6, 1302.0], [12.7, 1302.0], [12.8, 1302.0], [12.9, 1302.0], [13.0, 1360.0], [13.1, 1360.0], [13.2, 1360.0], [13.3, 1360.0], [13.4, 1360.0], [13.5, 1360.0], [13.6, 1360.0], [13.7, 1360.0], [13.8, 1360.0], [13.9, 1360.0], [14.0, 1372.0], [14.1, 1372.0], [14.2, 1372.0], [14.3, 1372.0], [14.4, 1372.0], [14.5, 1372.0], [14.6, 1372.0], [14.7, 1372.0], [14.8, 1372.0], [14.9, 1372.0], [15.0, 1395.0], [15.1, 1395.0], [15.2, 1395.0], [15.3, 1395.0], [15.4, 1395.0], [15.5, 1395.0], [15.6, 1395.0], [15.7, 1395.0], [15.8, 1395.0], [15.9, 1395.0], [16.0, 1418.0], [16.1, 1418.0], [16.2, 1418.0], [16.3, 1418.0], [16.4, 1418.0], [16.5, 1418.0], [16.6, 1418.0], [16.7, 1418.0], [16.8, 1418.0], [16.9, 1418.0], [17.0, 1459.0], [17.1, 1459.0], [17.2, 1459.0], [17.3, 1459.0], [17.4, 1459.0], [17.5, 1459.0], [17.6, 1459.0], [17.7, 1459.0], [17.8, 1459.0], [17.9, 1459.0], [18.0, 1482.0], [18.1, 1482.0], [18.2, 1482.0], [18.3, 1482.0], [18.4, 1482.0], [18.5, 1482.0], [18.6, 1482.0], [18.7, 1482.0], [18.8, 1482.0], [18.9, 1482.0], [19.0, 1534.0], [19.1, 1534.0], [19.2, 1534.0], [19.3, 1534.0], [19.4, 1534.0], [19.5, 1534.0], [19.6, 1534.0], [19.7, 1534.0], [19.8, 1534.0], [19.9, 1534.0], [20.0, 1549.0], [20.1, 1549.0], [20.2, 1549.0], [20.3, 1549.0], [20.4, 1549.0], [20.5, 1549.0], [20.6, 1549.0], [20.7, 1549.0], [20.8, 1549.0], [20.9, 1549.0], [21.0, 1608.0], [21.1, 1608.0], [21.2, 1608.0], [21.3, 1608.0], [21.4, 1608.0], [21.5, 1608.0], [21.6, 1608.0], [21.7, 1608.0], [21.8, 1608.0], [21.9, 1608.0], [22.0, 1651.0], [22.1, 1651.0], [22.2, 1651.0], [22.3, 1651.0], [22.4, 1651.0], [22.5, 1651.0], [22.6, 1651.0], [22.7, 1651.0], [22.8, 1651.0], [22.9, 1651.0], [23.0, 1721.0], [23.1, 1721.0], [23.2, 1721.0], [23.3, 1721.0], [23.4, 1721.0], [23.5, 1721.0], [23.6, 1721.0], [23.7, 1721.0], [23.8, 1721.0], [23.9, 1721.0], [24.0, 6101.0], [24.1, 6101.0], [24.2, 6101.0], [24.3, 6101.0], [24.4, 6101.0], [24.5, 6101.0], [24.6, 6101.0], [24.7, 6101.0], [24.8, 6101.0], [24.9, 6101.0], [25.0, 6340.0], [25.1, 6340.0], [25.2, 6340.0], [25.3, 6340.0], [25.4, 6340.0], [25.5, 6340.0], [25.6, 6340.0], [25.7, 6340.0], [25.8, 6340.0], [25.9, 6340.0], [26.0, 7656.0], [26.1, 7656.0], [26.2, 7656.0], [26.3, 7656.0], [26.4, 7656.0], [26.5, 7656.0], [26.6, 7656.0], [26.7, 7656.0], [26.8, 7656.0], [26.9, 7656.0], [27.0, 8689.0], [27.1, 8689.0], [27.2, 8689.0], [27.3, 8689.0], [27.4, 8689.0], [27.5, 8689.0], [27.6, 8689.0], [27.7, 8689.0], [27.8, 8689.0], [27.9, 8689.0], [28.0, 8977.0], [28.1, 8977.0], [28.2, 8977.0], [28.3, 8977.0], [28.4, 8977.0], [28.5, 8977.0], [28.6, 8977.0], [28.7, 8977.0], [28.8, 8977.0], [28.9, 8977.0], [29.0, 9158.0], [29.1, 9158.0], [29.2, 9158.0], [29.3, 9158.0], [29.4, 9158.0], [29.5, 9158.0], [29.6, 9158.0], [29.7, 9158.0], [29.8, 9158.0], [29.9, 9158.0], [30.0, 9161.0], [30.1, 9161.0], [30.2, 9161.0], [30.3, 9161.0], [30.4, 9161.0], [30.5, 9161.0], [30.6, 9161.0], [30.7, 9161.0], [30.8, 9161.0], [30.9, 9161.0], [31.0, 9391.0], [31.1, 9391.0], [31.2, 9391.0], [31.3, 9391.0], [31.4, 9391.0], [31.5, 9391.0], [31.6, 9391.0], [31.7, 9391.0], [31.8, 9391.0], [31.9, 9391.0], [32.0, 9430.0], [32.1, 9430.0], [32.2, 9430.0], [32.3, 9430.0], [32.4, 9430.0], [32.5, 9430.0], [32.6, 9430.0], [32.7, 9430.0], [32.8, 9430.0], [32.9, 9430.0], [33.0, 9841.0], [33.1, 9841.0], [33.2, 9841.0], [33.3, 9841.0], [33.4, 9841.0], [33.5, 9841.0], [33.6, 9841.0], [33.7, 9841.0], [33.8, 9841.0], [33.9, 9841.0], [34.0, 10001.0], [34.1, 10001.0], [34.2, 10001.0], [34.3, 10001.0], [34.4, 10001.0], [34.5, 10001.0], [34.6, 10001.0], [34.7, 10001.0], [34.8, 10001.0], [34.9, 10001.0], [35.0, 10021.0], [35.1, 10021.0], [35.2, 10021.0], [35.3, 10021.0], [35.4, 10021.0], [35.5, 10021.0], [35.6, 10021.0], [35.7, 10021.0], [35.8, 10021.0], [35.9, 10021.0], [36.0, 10052.0], [36.1, 10052.0], [36.2, 10052.0], [36.3, 10052.0], [36.4, 10052.0], [36.5, 10052.0], [36.6, 10052.0], [36.7, 10052.0], [36.8, 10052.0], [36.9, 10052.0], [37.0, 10131.0], [37.1, 10131.0], [37.2, 10131.0], [37.3, 10131.0], [37.4, 10131.0], [37.5, 10131.0], [37.6, 10131.0], [37.7, 10131.0], [37.8, 10131.0], [37.9, 10131.0], [38.0, 10149.0], [38.1, 10149.0], [38.2, 10149.0], [38.3, 10149.0], [38.4, 10149.0], [38.5, 10149.0], [38.6, 10149.0], [38.7, 10149.0], [38.8, 10149.0], [38.9, 10149.0], [39.0, 10186.0], [39.1, 10186.0], [39.2, 10186.0], [39.3, 10186.0], [39.4, 10186.0], [39.5, 10186.0], [39.6, 10186.0], [39.7, 10186.0], [39.8, 10186.0], [39.9, 10186.0], [40.0, 10238.0], [40.1, 10238.0], [40.2, 10238.0], [40.3, 10238.0], [40.4, 10238.0], [40.5, 10238.0], [40.6, 10238.0], [40.7, 10238.0], [40.8, 10238.0], [40.9, 10238.0], [41.0, 10339.0], [41.1, 10339.0], [41.2, 10339.0], [41.3, 10339.0], [41.4, 10339.0], [41.5, 10339.0], [41.6, 10339.0], [41.7, 10339.0], [41.8, 10339.0], [41.9, 10339.0], [42.0, 10426.0], [42.1, 10426.0], [42.2, 10426.0], [42.3, 10426.0], [42.4, 10426.0], [42.5, 10426.0], [42.6, 10426.0], [42.7, 10426.0], [42.8, 10426.0], [42.9, 10426.0], [43.0, 10488.0], [43.1, 10488.0], [43.2, 10488.0], [43.3, 10488.0], [43.4, 10488.0], [43.5, 10488.0], [43.6, 10488.0], [43.7, 10488.0], [43.8, 10488.0], [43.9, 10488.0], [44.0, 10652.0], [44.1, 10652.0], [44.2, 10652.0], [44.3, 10652.0], [44.4, 10652.0], [44.5, 10652.0], [44.6, 10652.0], [44.7, 10652.0], [44.8, 10652.0], [44.9, 10652.0], [45.0, 10711.0], [45.1, 10711.0], [45.2, 10711.0], [45.3, 10711.0], [45.4, 10711.0], [45.5, 10711.0], [45.6, 10711.0], [45.7, 10711.0], [45.8, 10711.0], [45.9, 10711.0], [46.0, 10725.0], [46.1, 10725.0], [46.2, 10725.0], [46.3, 10725.0], [46.4, 10725.0], [46.5, 10725.0], [46.6, 10725.0], [46.7, 10725.0], [46.8, 10725.0], [46.9, 10725.0], [47.0, 10793.0], [47.1, 10793.0], [47.2, 10793.0], [47.3, 10793.0], [47.4, 10793.0], [47.5, 10793.0], [47.6, 10793.0], [47.7, 10793.0], [47.8, 10793.0], [47.9, 10793.0], [48.0, 10835.0], [48.1, 10835.0], [48.2, 10835.0], [48.3, 10835.0], [48.4, 10835.0], [48.5, 10835.0], [48.6, 10835.0], [48.7, 10835.0], [48.8, 10835.0], [48.9, 10835.0], [49.0, 10863.0], [49.1, 10863.0], [49.2, 10863.0], [49.3, 10863.0], [49.4, 10863.0], [49.5, 10863.0], [49.6, 10863.0], [49.7, 10863.0], [49.8, 10863.0], [49.9, 10863.0], [50.0, 11068.0], [50.1, 11068.0], [50.2, 11068.0], [50.3, 11068.0], [50.4, 11068.0], [50.5, 11068.0], [50.6, 11068.0], [50.7, 11068.0], [50.8, 11068.0], [50.9, 11068.0], [51.0, 11409.0], [51.1, 11409.0], [51.2, 11409.0], [51.3, 11409.0], [51.4, 11409.0], [51.5, 11409.0], [51.6, 11409.0], [51.7, 11409.0], [51.8, 11409.0], [51.9, 11409.0], [52.0, 11454.0], [52.1, 11454.0], [52.2, 11454.0], [52.3, 11454.0], [52.4, 11454.0], [52.5, 11454.0], [52.6, 11454.0], [52.7, 11454.0], [52.8, 11454.0], [52.9, 11454.0], [53.0, 11750.0], [53.1, 11750.0], [53.2, 11750.0], [53.3, 11750.0], [53.4, 11750.0], [53.5, 11750.0], [53.6, 11750.0], [53.7, 11750.0], [53.8, 11750.0], [53.9, 11750.0], [54.0, 11820.0], [54.1, 11820.0], [54.2, 11820.0], [54.3, 11820.0], [54.4, 11820.0], [54.5, 11820.0], [54.6, 11820.0], [54.7, 11820.0], [54.8, 11820.0], [54.9, 11820.0], [55.0, 11842.0], [55.1, 11842.0], [55.2, 11842.0], [55.3, 11842.0], [55.4, 11842.0], [55.5, 11842.0], [55.6, 11842.0], [55.7, 11842.0], [55.8, 11842.0], [55.9, 11842.0], [56.0, 12094.0], [56.1, 12094.0], [56.2, 12094.0], [56.3, 12094.0], [56.4, 12094.0], [56.5, 12094.0], [56.6, 12094.0], [56.7, 12094.0], [56.8, 12094.0], [56.9, 12094.0], [57.0, 12146.0], [57.1, 12146.0], [57.2, 12146.0], [57.3, 12146.0], [57.4, 12146.0], [57.5, 12146.0], [57.6, 12146.0], [57.7, 12146.0], [57.8, 12146.0], [57.9, 12146.0], [58.0, 12175.0], [58.1, 12175.0], [58.2, 12175.0], [58.3, 12175.0], [58.4, 12175.0], [58.5, 12175.0], [58.6, 12175.0], [58.7, 12175.0], [58.8, 12175.0], [58.9, 12175.0], [59.0, 12218.0], [59.1, 12218.0], [59.2, 12218.0], [59.3, 12218.0], [59.4, 12218.0], [59.5, 12218.0], [59.6, 12218.0], [59.7, 12218.0], [59.8, 12218.0], [59.9, 12218.0], [60.0, 12402.0], [60.1, 12402.0], [60.2, 12402.0], [60.3, 12402.0], [60.4, 12402.0], [60.5, 12402.0], [60.6, 12402.0], [60.7, 12402.0], [60.8, 12402.0], [60.9, 12402.0], [61.0, 12431.0], [61.1, 12431.0], [61.2, 12431.0], [61.3, 12431.0], [61.4, 12431.0], [61.5, 12431.0], [61.6, 12431.0], [61.7, 12431.0], [61.8, 12431.0], [61.9, 12431.0], [62.0, 12471.0], [62.1, 12471.0], [62.2, 12471.0], [62.3, 12471.0], [62.4, 12471.0], [62.5, 12471.0], [62.6, 12471.0], [62.7, 12471.0], [62.8, 12471.0], [62.9, 12471.0], [63.0, 12539.0], [63.1, 12539.0], [63.2, 12539.0], [63.3, 12539.0], [63.4, 12539.0], [63.5, 12539.0], [63.6, 12539.0], [63.7, 12539.0], [63.8, 12539.0], [63.9, 12539.0], [64.0, 12555.0], [64.1, 12555.0], [64.2, 12555.0], [64.3, 12555.0], [64.4, 12555.0], [64.5, 12555.0], [64.6, 12555.0], [64.7, 12555.0], [64.8, 12555.0], [64.9, 12555.0], [65.0, 12617.0], [65.1, 12617.0], [65.2, 12617.0], [65.3, 12617.0], [65.4, 12617.0], [65.5, 12617.0], [65.6, 12617.0], [65.7, 12617.0], [65.8, 12617.0], [65.9, 12617.0], [66.0, 12645.0], [66.1, 12645.0], [66.2, 12645.0], [66.3, 12645.0], [66.4, 12645.0], [66.5, 12645.0], [66.6, 12645.0], [66.7, 12645.0], [66.8, 12645.0], [66.9, 12645.0], [67.0, 12666.0], [67.1, 12666.0], [67.2, 12666.0], [67.3, 12666.0], [67.4, 12666.0], [67.5, 12666.0], [67.6, 12666.0], [67.7, 12666.0], [67.8, 12666.0], [67.9, 12666.0], [68.0, 12724.0], [68.1, 12724.0], [68.2, 12724.0], [68.3, 12724.0], [68.4, 12724.0], [68.5, 12724.0], [68.6, 12724.0], [68.7, 12724.0], [68.8, 12724.0], [68.9, 12724.0], [69.0, 12782.0], [69.1, 12782.0], [69.2, 12782.0], [69.3, 12782.0], [69.4, 12782.0], [69.5, 12782.0], [69.6, 12782.0], [69.7, 12782.0], [69.8, 12782.0], [69.9, 12782.0], [70.0, 12802.0], [70.1, 12802.0], [70.2, 12802.0], [70.3, 12802.0], [70.4, 12802.0], [70.5, 12802.0], [70.6, 12802.0], [70.7, 12802.0], [70.8, 12802.0], [70.9, 12802.0], [71.0, 12829.0], [71.1, 12829.0], [71.2, 12829.0], [71.3, 12829.0], [71.4, 12829.0], [71.5, 12829.0], [71.6, 12829.0], [71.7, 12829.0], [71.8, 12829.0], [71.9, 12829.0], [72.0, 12841.0], [72.1, 12841.0], [72.2, 12841.0], [72.3, 12841.0], [72.4, 12841.0], [72.5, 12841.0], [72.6, 12841.0], [72.7, 12841.0], [72.8, 12841.0], [72.9, 12841.0], [73.0, 12847.0], [73.1, 12847.0], [73.2, 12847.0], [73.3, 12847.0], [73.4, 12847.0], [73.5, 12847.0], [73.6, 12847.0], [73.7, 12847.0], [73.8, 12847.0], [73.9, 12847.0], [74.0, 12883.0], [74.1, 12883.0], [74.2, 12883.0], [74.3, 12883.0], [74.4, 12883.0], [74.5, 12883.0], [74.6, 12883.0], [74.7, 12883.0], [74.8, 12883.0], [74.9, 12883.0], [75.0, 13011.0], [75.1, 13011.0], [75.2, 13011.0], [75.3, 13011.0], [75.4, 13011.0], [75.5, 13011.0], [75.6, 13011.0], [75.7, 13011.0], [75.8, 13011.0], [75.9, 13011.0], [76.0, 13011.0], [76.1, 13011.0], [76.2, 13011.0], [76.3, 13011.0], [76.4, 13011.0], [76.5, 13011.0], [76.6, 13011.0], [76.7, 13011.0], [76.8, 13011.0], [76.9, 13011.0], [77.0, 13032.0], [77.1, 13032.0], [77.2, 13032.0], [77.3, 13032.0], [77.4, 13032.0], [77.5, 13032.0], [77.6, 13032.0], [77.7, 13032.0], [77.8, 13032.0], [77.9, 13032.0], [78.0, 13036.0], [78.1, 13036.0], [78.2, 13036.0], [78.3, 13036.0], [78.4, 13036.0], [78.5, 13036.0], [78.6, 13036.0], [78.7, 13036.0], [78.8, 13036.0], [78.9, 13036.0], [79.0, 13039.0], [79.1, 13039.0], [79.2, 13039.0], [79.3, 13039.0], [79.4, 13039.0], [79.5, 13039.0], [79.6, 13039.0], [79.7, 13039.0], [79.8, 13039.0], [79.9, 13039.0], [80.0, 13064.0], [80.1, 13064.0], [80.2, 13064.0], [80.3, 13064.0], [80.4, 13064.0], [80.5, 13064.0], [80.6, 13064.0], [80.7, 13064.0], [80.8, 13064.0], [80.9, 13064.0], [81.0, 13067.0], [81.1, 13067.0], [81.2, 13067.0], [81.3, 13067.0], [81.4, 13067.0], [81.5, 13067.0], [81.6, 13067.0], [81.7, 13067.0], [81.8, 13067.0], [81.9, 13067.0], [82.0, 13090.0], [82.1, 13090.0], [82.2, 13090.0], [82.3, 13090.0], [82.4, 13090.0], [82.5, 13090.0], [82.6, 13090.0], [82.7, 13090.0], [82.8, 13090.0], [82.9, 13090.0], [83.0, 13107.0], [83.1, 13107.0], [83.2, 13107.0], [83.3, 13107.0], [83.4, 13107.0], [83.5, 13107.0], [83.6, 13107.0], [83.7, 13107.0], [83.8, 13107.0], [83.9, 13107.0], [84.0, 13170.0], [84.1, 13170.0], [84.2, 13170.0], [84.3, 13170.0], [84.4, 13170.0], [84.5, 13170.0], [84.6, 13170.0], [84.7, 13170.0], [84.8, 13170.0], [84.9, 13170.0], [85.0, 13175.0], [85.1, 13175.0], [85.2, 13175.0], [85.3, 13175.0], [85.4, 13175.0], [85.5, 13175.0], [85.6, 13175.0], [85.7, 13175.0], [85.8, 13175.0], [85.9, 13175.0], [86.0, 13211.0], [86.1, 13211.0], [86.2, 13211.0], [86.3, 13211.0], [86.4, 13211.0], [86.5, 13211.0], [86.6, 13211.0], [86.7, 13211.0], [86.8, 13211.0], [86.9, 13211.0], [87.0, 13238.0], [87.1, 13238.0], [87.2, 13238.0], [87.3, 13238.0], [87.4, 13238.0], [87.5, 13238.0], [87.6, 13238.0], [87.7, 13238.0], [87.8, 13238.0], [87.9, 13238.0], [88.0, 13277.0], [88.1, 13277.0], [88.2, 13277.0], [88.3, 13277.0], [88.4, 13277.0], [88.5, 13277.0], [88.6, 13277.0], [88.7, 13277.0], [88.8, 13277.0], [88.9, 13277.0], [89.0, 13289.0], [89.1, 13289.0], [89.2, 13289.0], [89.3, 13289.0], [89.4, 13289.0], [89.5, 13289.0], [89.6, 13289.0], [89.7, 13289.0], [89.8, 13289.0], [89.9, 13289.0], [90.0, 13388.0], [90.1, 13388.0], [90.2, 13388.0], [90.3, 13388.0], [90.4, 13388.0], [90.5, 13388.0], [90.6, 13388.0], [90.7, 13388.0], [90.8, 13388.0], [90.9, 13388.0], [91.0, 13472.0], [91.1, 13472.0], [91.2, 13472.0], [91.3, 13472.0], [91.4, 13472.0], [91.5, 13472.0], [91.6, 13472.0], [91.7, 13472.0], [91.8, 13472.0], [91.9, 13472.0], [92.0, 13687.0], [92.1, 13687.0], [92.2, 13687.0], [92.3, 13687.0], [92.4, 13687.0], [92.5, 13687.0], [92.6, 13687.0], [92.7, 13687.0], [92.8, 13687.0], [92.9, 13687.0], [93.0, 13899.0], [93.1, 13899.0], [93.2, 13899.0], [93.3, 13899.0], [93.4, 13899.0], [93.5, 13899.0], [93.6, 13899.0], [93.7, 13899.0], [93.8, 13899.0], [93.9, 13899.0], [94.0, 13959.0], [94.1, 13959.0], [94.2, 13959.0], [94.3, 13959.0], [94.4, 13959.0], [94.5, 13959.0], [94.6, 13959.0], [94.7, 13959.0], [94.8, 13959.0], [94.9, 13959.0], [95.0, 14023.0], [95.1, 14023.0], [95.2, 14023.0], [95.3, 14023.0], [95.4, 14023.0], [95.5, 14023.0], [95.6, 14023.0], [95.7, 14023.0], [95.8, 14023.0], [95.9, 14023.0], [96.0, 14077.0], [96.1, 14077.0], [96.2, 14077.0], [96.3, 14077.0], [96.4, 14077.0], [96.5, 14077.0], [96.6, 14077.0], [96.7, 14077.0], [96.8, 14077.0], [96.9, 14077.0], [97.0, 14128.0], [97.1, 14128.0], [97.2, 14128.0], [97.3, 14128.0], [97.4, 14128.0], [97.5, 14128.0], [97.6, 14128.0], [97.7, 14128.0], [97.8, 14128.0], [97.9, 14128.0], [98.0, 14172.0], [98.1, 14172.0], [98.2, 14172.0], [98.3, 14172.0], [98.4, 14172.0], [98.5, 14172.0], [98.6, 14172.0], [98.7, 14172.0], [98.8, 14172.0], [98.9, 14172.0], [99.0, 14630.0], [99.1, 14630.0], [99.2, 14630.0], [99.3, 14630.0], [99.4, 14630.0], [99.5, 14630.0], [99.6, 14630.0], [99.7, 14630.0], [99.8, 14630.0], [99.9, 14630.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 580.0], [0.1, 580.0], [0.2, 580.0], [0.3, 580.0], [0.4, 580.0], [0.5, 580.0], [0.6, 580.0], [0.7, 580.0], [0.8, 580.0], [0.9, 580.0], [1.0, 593.0], [1.1, 593.0], [1.2, 593.0], [1.3, 593.0], [1.4, 593.0], [1.5, 593.0], [1.6, 593.0], [1.7, 593.0], [1.8, 593.0], [1.9, 593.0], [2.0, 608.0], [2.1, 608.0], [2.2, 608.0], [2.3, 608.0], [2.4, 608.0], [2.5, 608.0], [2.6, 608.0], [2.7, 608.0], [2.8, 608.0], [2.9, 608.0], [3.0, 658.0], [3.1, 658.0], [3.2, 658.0], [3.3, 658.0], [3.4, 658.0], [3.5, 658.0], [3.6, 658.0], [3.7, 658.0], [3.8, 658.0], [3.9, 658.0], [4.0, 667.0], [4.1, 667.0], [4.2, 667.0], [4.3, 667.0], [4.4, 667.0], [4.5, 667.0], [4.6, 667.0], [4.7, 667.0], [4.8, 667.0], [4.9, 667.0], [5.0, 668.0], [5.1, 668.0], [5.2, 668.0], [5.3, 668.0], [5.4, 668.0], [5.5, 668.0], [5.6, 668.0], [5.7, 668.0], [5.8, 668.0], [5.9, 668.0], [6.0, 678.0], [6.1, 678.0], [6.2, 678.0], [6.3, 678.0], [6.4, 678.0], [6.5, 678.0], [6.6, 678.0], [6.7, 678.0], [6.8, 678.0], [6.9, 678.0], [7.0, 697.0], [7.1, 697.0], [7.2, 697.0], [7.3, 697.0], [7.4, 697.0], [7.5, 697.0], [7.6, 697.0], [7.7, 697.0], [7.8, 697.0], [7.9, 697.0], [8.0, 729.0], [8.1, 729.0], [8.2, 729.0], [8.3, 729.0], [8.4, 729.0], [8.5, 729.0], [8.6, 729.0], [8.7, 729.0], [8.8, 729.0], [8.9, 729.0], [9.0, 740.0], [9.1, 740.0], [9.2, 740.0], [9.3, 740.0], [9.4, 740.0], [9.5, 740.0], [9.6, 740.0], [9.7, 740.0], [9.8, 740.0], [9.9, 740.0], [10.0, 753.0], [10.1, 753.0], [10.2, 753.0], [10.3, 753.0], [10.4, 753.0], [10.5, 753.0], [10.6, 753.0], [10.7, 753.0], [10.8, 753.0], [10.9, 753.0], [11.0, 778.0], [11.1, 778.0], [11.2, 778.0], [11.3, 778.0], [11.4, 778.0], [11.5, 778.0], [11.6, 778.0], [11.7, 778.0], [11.8, 778.0], [11.9, 778.0], [12.0, 788.0], [12.1, 788.0], [12.2, 788.0], [12.3, 788.0], [12.4, 788.0], [12.5, 788.0], [12.6, 788.0], [12.7, 788.0], [12.8, 788.0], [12.9, 788.0], [13.0, 818.0], [13.1, 818.0], [13.2, 818.0], [13.3, 818.0], [13.4, 818.0], [13.5, 818.0], [13.6, 818.0], [13.7, 818.0], [13.8, 818.0], [13.9, 818.0], [14.0, 839.0], [14.1, 839.0], [14.2, 839.0], [14.3, 839.0], [14.4, 839.0], [14.5, 839.0], [14.6, 839.0], [14.7, 839.0], [14.8, 839.0], [14.9, 839.0], [15.0, 889.0], [15.1, 889.0], [15.2, 889.0], [15.3, 889.0], [15.4, 889.0], [15.5, 889.0], [15.6, 889.0], [15.7, 889.0], [15.8, 889.0], [15.9, 889.0], [16.0, 890.0], [16.1, 890.0], [16.2, 890.0], [16.3, 890.0], [16.4, 890.0], [16.5, 890.0], [16.6, 890.0], [16.7, 890.0], [16.8, 890.0], [16.9, 890.0], [17.0, 906.0], [17.1, 906.0], [17.2, 906.0], [17.3, 906.0], [17.4, 906.0], [17.5, 906.0], [17.6, 906.0], [17.7, 906.0], [17.8, 906.0], [17.9, 906.0], [18.0, 909.0], [18.1, 909.0], [18.2, 909.0], [18.3, 909.0], [18.4, 909.0], [18.5, 909.0], [18.6, 909.0], [18.7, 909.0], [18.8, 909.0], [18.9, 909.0], [19.0, 938.0], [19.1, 938.0], [19.2, 938.0], [19.3, 938.0], [19.4, 938.0], [19.5, 938.0], [19.6, 938.0], [19.7, 938.0], [19.8, 938.0], [19.9, 938.0], [20.0, 984.0], [20.1, 984.0], [20.2, 984.0], [20.3, 984.0], [20.4, 984.0], [20.5, 984.0], [20.6, 984.0], [20.7, 984.0], [20.8, 984.0], [20.9, 984.0], [21.0, 987.0], [21.1, 987.0], [21.2, 987.0], [21.3, 987.0], [21.4, 987.0], [21.5, 987.0], [21.6, 987.0], [21.7, 987.0], [21.8, 987.0], [21.9, 987.0], [22.0, 998.0], [22.1, 998.0], [22.2, 998.0], [22.3, 998.0], [22.4, 998.0], [22.5, 998.0], [22.6, 998.0], [22.7, 998.0], [22.8, 998.0], [22.9, 998.0], [23.0, 1019.0], [23.1, 1019.0], [23.2, 1019.0], [23.3, 1019.0], [23.4, 1019.0], [23.5, 1019.0], [23.6, 1019.0], [23.7, 1019.0], [23.8, 1019.0], [23.9, 1019.0], [24.0, 1030.0], [24.1, 1030.0], [24.2, 1030.0], [24.3, 1030.0], [24.4, 1030.0], [24.5, 1030.0], [24.6, 1030.0], [24.7, 1030.0], [24.8, 1030.0], [24.9, 1030.0], [25.0, 1078.0], [25.1, 1078.0], [25.2, 1078.0], [25.3, 1078.0], [25.4, 1078.0], [25.5, 1078.0], [25.6, 1078.0], [25.7, 1078.0], [25.8, 1078.0], [25.9, 1078.0], [26.0, 1119.0], [26.1, 1119.0], [26.2, 1119.0], [26.3, 1119.0], [26.4, 1119.0], [26.5, 1119.0], [26.6, 1119.0], [26.7, 1119.0], [26.8, 1119.0], [26.9, 1119.0], [27.0, 1142.0], [27.1, 1142.0], [27.2, 1142.0], [27.3, 1142.0], [27.4, 1142.0], [27.5, 1142.0], [27.6, 1142.0], [27.7, 1142.0], [27.8, 1142.0], [27.9, 1142.0], [28.0, 1150.0], [28.1, 1150.0], [28.2, 1150.0], [28.3, 1150.0], [28.4, 1150.0], [28.5, 1150.0], [28.6, 1150.0], [28.7, 1150.0], [28.8, 1150.0], [28.9, 1150.0], [29.0, 1174.0], [29.1, 1174.0], [29.2, 1174.0], [29.3, 1174.0], [29.4, 1174.0], [29.5, 1174.0], [29.6, 1174.0], [29.7, 1174.0], [29.8, 1174.0], [29.9, 1174.0], [30.0, 1197.0], [30.1, 1197.0], [30.2, 1197.0], [30.3, 1197.0], [30.4, 1197.0], [30.5, 1197.0], [30.6, 1197.0], [30.7, 1197.0], [30.8, 1197.0], [30.9, 1197.0], [31.0, 1239.0], [31.1, 1239.0], [31.2, 1239.0], [31.3, 1239.0], [31.4, 1239.0], [31.5, 1239.0], [31.6, 1239.0], [31.7, 1239.0], [31.8, 1239.0], [31.9, 1239.0], [32.0, 1239.0], [32.1, 1239.0], [32.2, 1239.0], [32.3, 1239.0], [32.4, 1239.0], [32.5, 1239.0], [32.6, 1239.0], [32.7, 1239.0], [32.8, 1239.0], [32.9, 1239.0], [33.0, 1263.0], [33.1, 1263.0], [33.2, 1263.0], [33.3, 1263.0], [33.4, 1263.0], [33.5, 1263.0], [33.6, 1263.0], [33.7, 1263.0], [33.8, 1263.0], [33.9, 1263.0], [34.0, 1269.0], [34.1, 1269.0], [34.2, 1269.0], [34.3, 1269.0], [34.4, 1269.0], [34.5, 1269.0], [34.6, 1269.0], [34.7, 1269.0], [34.8, 1269.0], [34.9, 1269.0], [35.0, 1292.0], [35.1, 1292.0], [35.2, 1292.0], [35.3, 1292.0], [35.4, 1292.0], [35.5, 1292.0], [35.6, 1292.0], [35.7, 1292.0], [35.8, 1292.0], [35.9, 1292.0], [36.0, 1299.0], [36.1, 1299.0], [36.2, 1299.0], [36.3, 1299.0], [36.4, 1299.0], [36.5, 1299.0], [36.6, 1299.0], [36.7, 1299.0], [36.8, 1299.0], [36.9, 1299.0], [37.0, 1312.0], [37.1, 1312.0], [37.2, 1312.0], [37.3, 1312.0], [37.4, 1312.0], [37.5, 1312.0], [37.6, 1312.0], [37.7, 1312.0], [37.8, 1312.0], [37.9, 1312.0], [38.0, 1331.0], [38.1, 1331.0], [38.2, 1331.0], [38.3, 1331.0], [38.4, 1331.0], [38.5, 1331.0], [38.6, 1331.0], [38.7, 1331.0], [38.8, 1331.0], [38.9, 1331.0], [39.0, 1348.0], [39.1, 1348.0], [39.2, 1348.0], [39.3, 1348.0], [39.4, 1348.0], [39.5, 1348.0], [39.6, 1348.0], [39.7, 1348.0], [39.8, 1348.0], [39.9, 1348.0], [40.0, 1369.0], [40.1, 1369.0], [40.2, 1369.0], [40.3, 1369.0], [40.4, 1369.0], [40.5, 1369.0], [40.6, 1369.0], [40.7, 1369.0], [40.8, 1369.0], [40.9, 1369.0], [41.0, 1390.0], [41.1, 1390.0], [41.2, 1390.0], [41.3, 1390.0], [41.4, 1390.0], [41.5, 1390.0], [41.6, 1390.0], [41.7, 1390.0], [41.8, 1390.0], [41.9, 1390.0], [42.0, 1398.0], [42.1, 1398.0], [42.2, 1398.0], [42.3, 1398.0], [42.4, 1398.0], [42.5, 1398.0], [42.6, 1398.0], [42.7, 1398.0], [42.8, 1398.0], [42.9, 1398.0], [43.0, 1429.0], [43.1, 1429.0], [43.2, 1429.0], [43.3, 1429.0], [43.4, 1429.0], [43.5, 1429.0], [43.6, 1429.0], [43.7, 1429.0], [43.8, 1429.0], [43.9, 1429.0], [44.0, 1458.0], [44.1, 1458.0], [44.2, 1458.0], [44.3, 1458.0], [44.4, 1458.0], [44.5, 1458.0], [44.6, 1458.0], [44.7, 1458.0], [44.8, 1458.0], [44.9, 1458.0], [45.0, 1467.0], [45.1, 1467.0], [45.2, 1467.0], [45.3, 1467.0], [45.4, 1467.0], [45.5, 1467.0], [45.6, 1467.0], [45.7, 1467.0], [45.8, 1467.0], [45.9, 1467.0], [46.0, 1488.0], [46.1, 1488.0], [46.2, 1488.0], [46.3, 1488.0], [46.4, 1488.0], [46.5, 1488.0], [46.6, 1488.0], [46.7, 1488.0], [46.8, 1488.0], [46.9, 1488.0], [47.0, 1499.0], [47.1, 1499.0], [47.2, 1499.0], [47.3, 1499.0], [47.4, 1499.0], [47.5, 1499.0], [47.6, 1499.0], [47.7, 1499.0], [47.8, 1499.0], [47.9, 1499.0], [48.0, 1500.0], [48.1, 1500.0], [48.2, 1500.0], [48.3, 1500.0], [48.4, 1500.0], [48.5, 1500.0], [48.6, 1500.0], [48.7, 1500.0], [48.8, 1500.0], [48.9, 1500.0], [49.0, 1501.0], [49.1, 1501.0], [49.2, 1501.0], [49.3, 1501.0], [49.4, 1501.0], [49.5, 1501.0], [49.6, 1501.0], [49.7, 1501.0], [49.8, 1501.0], [49.9, 1501.0], [50.0, 1503.0], [50.1, 1503.0], [50.2, 1503.0], [50.3, 1503.0], [50.4, 1503.0], [50.5, 1503.0], [50.6, 1503.0], [50.7, 1503.0], [50.8, 1503.0], [50.9, 1503.0], [51.0, 1568.0], [51.1, 1568.0], [51.2, 1568.0], [51.3, 1568.0], [51.4, 1568.0], [51.5, 1568.0], [51.6, 1568.0], [51.7, 1568.0], [51.8, 1568.0], [51.9, 1568.0], [52.0, 1595.0], [52.1, 1595.0], [52.2, 1595.0], [52.3, 1595.0], [52.4, 1595.0], [52.5, 1595.0], [52.6, 1595.0], [52.7, 1595.0], [52.8, 1595.0], [52.9, 1595.0], [53.0, 1646.0], [53.1, 1646.0], [53.2, 1646.0], [53.3, 1646.0], [53.4, 1646.0], [53.5, 1646.0], [53.6, 1646.0], [53.7, 1646.0], [53.8, 1646.0], [53.9, 1646.0], [54.0, 1771.0], [54.1, 1771.0], [54.2, 1771.0], [54.3, 1771.0], [54.4, 1771.0], [54.5, 1771.0], [54.6, 1771.0], [54.7, 1771.0], [54.8, 1771.0], [54.9, 1771.0], [55.0, 2023.0], [55.1, 2023.0], [55.2, 2023.0], [55.3, 2023.0], [55.4, 2023.0], [55.5, 2023.0], [55.6, 2023.0], [55.7, 2023.0], [55.8, 2023.0], [55.9, 2023.0], [56.0, 2139.0], [56.1, 2139.0], [56.2, 2139.0], [56.3, 2139.0], [56.4, 2139.0], [56.5, 2139.0], [56.6, 2139.0], [56.7, 2139.0], [56.8, 2139.0], [56.9, 2139.0], [57.0, 2159.0], [57.1, 2159.0], [57.2, 2159.0], [57.3, 2159.0], [57.4, 2159.0], [57.5, 2159.0], [57.6, 2159.0], [57.7, 2159.0], [57.8, 2159.0], [57.9, 2159.0], [58.0, 2190.0], [58.1, 2190.0], [58.2, 2190.0], [58.3, 2190.0], [58.4, 2190.0], [58.5, 2190.0], [58.6, 2190.0], [58.7, 2190.0], [58.8, 2190.0], [58.9, 2190.0], [59.0, 2341.0], [59.1, 2341.0], [59.2, 2341.0], [59.3, 2341.0], [59.4, 2341.0], [59.5, 2341.0], [59.6, 2341.0], [59.7, 2341.0], [59.8, 2341.0], [59.9, 2341.0], [60.0, 2403.0], [60.1, 2403.0], [60.2, 2403.0], [60.3, 2403.0], [60.4, 2403.0], [60.5, 2403.0], [60.6, 2403.0], [60.7, 2403.0], [60.8, 2403.0], [60.9, 2403.0], [61.0, 2514.0], [61.1, 2514.0], [61.2, 2514.0], [61.3, 2514.0], [61.4, 2514.0], [61.5, 2514.0], [61.6, 2514.0], [61.7, 2514.0], [61.8, 2514.0], [61.9, 2514.0], [62.0, 2518.0], [62.1, 2518.0], [62.2, 2518.0], [62.3, 2518.0], [62.4, 2518.0], [62.5, 2518.0], [62.6, 2518.0], [62.7, 2518.0], [62.8, 2518.0], [62.9, 2518.0], [63.0, 2706.0], [63.1, 2706.0], [63.2, 2706.0], [63.3, 2706.0], [63.4, 2706.0], [63.5, 2706.0], [63.6, 2706.0], [63.7, 2706.0], [63.8, 2706.0], [63.9, 2706.0], [64.0, 2867.0], [64.1, 2867.0], [64.2, 2867.0], [64.3, 2867.0], [64.4, 2867.0], [64.5, 2867.0], [64.6, 2867.0], [64.7, 2867.0], [64.8, 2867.0], [64.9, 2867.0], [65.0, 2900.0], [65.1, 2900.0], [65.2, 2900.0], [65.3, 2900.0], [65.4, 2900.0], [65.5, 2900.0], [65.6, 2900.0], [65.7, 2900.0], [65.8, 2900.0], [65.9, 2900.0], [66.0, 2900.0], [66.1, 2900.0], [66.2, 2900.0], [66.3, 2900.0], [66.4, 2900.0], [66.5, 2900.0], [66.6, 2900.0], [66.7, 2900.0], [66.8, 2900.0], [66.9, 2900.0], [67.0, 2947.0], [67.1, 2947.0], [67.2, 2947.0], [67.3, 2947.0], [67.4, 2947.0], [67.5, 2947.0], [67.6, 2947.0], [67.7, 2947.0], [67.8, 2947.0], [67.9, 2947.0], [68.0, 3041.0], [68.1, 3041.0], [68.2, 3041.0], [68.3, 3041.0], [68.4, 3041.0], [68.5, 3041.0], [68.6, 3041.0], [68.7, 3041.0], [68.8, 3041.0], [68.9, 3041.0], [69.0, 3046.0], [69.1, 3046.0], [69.2, 3046.0], [69.3, 3046.0], [69.4, 3046.0], [69.5, 3046.0], [69.6, 3046.0], [69.7, 3046.0], [69.8, 3046.0], [69.9, 3046.0], [70.0, 3063.0], [70.1, 3063.0], [70.2, 3063.0], [70.3, 3063.0], [70.4, 3063.0], [70.5, 3063.0], [70.6, 3063.0], [70.7, 3063.0], [70.8, 3063.0], [70.9, 3063.0], [71.0, 3114.0], [71.1, 3114.0], [71.2, 3114.0], [71.3, 3114.0], [71.4, 3114.0], [71.5, 3114.0], [71.6, 3114.0], [71.7, 3114.0], [71.8, 3114.0], [71.9, 3114.0], [72.0, 3149.0], [72.1, 3149.0], [72.2, 3149.0], [72.3, 3149.0], [72.4, 3149.0], [72.5, 3149.0], [72.6, 3149.0], [72.7, 3149.0], [72.8, 3149.0], [72.9, 3149.0], [73.0, 3190.0], [73.1, 3190.0], [73.2, 3190.0], [73.3, 3190.0], [73.4, 3190.0], [73.5, 3190.0], [73.6, 3190.0], [73.7, 3190.0], [73.8, 3190.0], [73.9, 3190.0], [74.0, 3210.0], [74.1, 3210.0], [74.2, 3210.0], [74.3, 3210.0], [74.4, 3210.0], [74.5, 3210.0], [74.6, 3210.0], [74.7, 3210.0], [74.8, 3210.0], [74.9, 3210.0], [75.0, 3218.0], [75.1, 3218.0], [75.2, 3218.0], [75.3, 3218.0], [75.4, 3218.0], [75.5, 3218.0], [75.6, 3218.0], [75.7, 3218.0], [75.8, 3218.0], [75.9, 3218.0], [76.0, 3426.0], [76.1, 3426.0], [76.2, 3426.0], [76.3, 3426.0], [76.4, 3426.0], [76.5, 3426.0], [76.6, 3426.0], [76.7, 3426.0], [76.8, 3426.0], [76.9, 3426.0], [77.0, 3457.0], [77.1, 3457.0], [77.2, 3457.0], [77.3, 3457.0], [77.4, 3457.0], [77.5, 3457.0], [77.6, 3457.0], [77.7, 3457.0], [77.8, 3457.0], [77.9, 3457.0], [78.0, 3470.0], [78.1, 3470.0], [78.2, 3470.0], [78.3, 3470.0], [78.4, 3470.0], [78.5, 3470.0], [78.6, 3470.0], [78.7, 3470.0], [78.8, 3470.0], [78.9, 3470.0], [79.0, 3606.0], [79.1, 3606.0], [79.2, 3606.0], [79.3, 3606.0], [79.4, 3606.0], [79.5, 3606.0], [79.6, 3606.0], [79.7, 3606.0], [79.8, 3606.0], [79.9, 3606.0], [80.0, 3807.0], [80.1, 3807.0], [80.2, 3807.0], [80.3, 3807.0], [80.4, 3807.0], [80.5, 3807.0], [80.6, 3807.0], [80.7, 3807.0], [80.8, 3807.0], [80.9, 3807.0], [81.0, 3849.0], [81.1, 3849.0], [81.2, 3849.0], [81.3, 3849.0], [81.4, 3849.0], [81.5, 3849.0], [81.6, 3849.0], [81.7, 3849.0], [81.8, 3849.0], [81.9, 3849.0], [82.0, 3997.0], [82.1, 3997.0], [82.2, 3997.0], [82.3, 3997.0], [82.4, 3997.0], [82.5, 3997.0], [82.6, 3997.0], [82.7, 3997.0], [82.8, 3997.0], [82.9, 3997.0], [83.0, 4030.0], [83.1, 4030.0], [83.2, 4030.0], [83.3, 4030.0], [83.4, 4030.0], [83.5, 4030.0], [83.6, 4030.0], [83.7, 4030.0], [83.8, 4030.0], [83.9, 4030.0], [84.0, 4049.0], [84.1, 4049.0], [84.2, 4049.0], [84.3, 4049.0], [84.4, 4049.0], [84.5, 4049.0], [84.6, 4049.0], [84.7, 4049.0], [84.8, 4049.0], [84.9, 4049.0], [85.0, 4170.0], [85.1, 4170.0], [85.2, 4170.0], [85.3, 4170.0], [85.4, 4170.0], [85.5, 4170.0], [85.6, 4170.0], [85.7, 4170.0], [85.8, 4170.0], [85.9, 4170.0], [86.0, 4189.0], [86.1, 4189.0], [86.2, 4189.0], [86.3, 4189.0], [86.4, 4189.0], [86.5, 4189.0], [86.6, 4189.0], [86.7, 4189.0], [86.8, 4189.0], [86.9, 4189.0], [87.0, 4196.0], [87.1, 4196.0], [87.2, 4196.0], [87.3, 4196.0], [87.4, 4196.0], [87.5, 4196.0], [87.6, 4196.0], [87.7, 4196.0], [87.8, 4196.0], [87.9, 4196.0], [88.0, 4197.0], [88.1, 4197.0], [88.2, 4197.0], [88.3, 4197.0], [88.4, 4197.0], [88.5, 4197.0], [88.6, 4197.0], [88.7, 4197.0], [88.8, 4197.0], [88.9, 4197.0], [89.0, 4205.0], [89.1, 4205.0], [89.2, 4205.0], [89.3, 4205.0], [89.4, 4205.0], [89.5, 4205.0], [89.6, 4205.0], [89.7, 4205.0], [89.8, 4205.0], [89.9, 4205.0], [90.0, 4216.0], [90.1, 4216.0], [90.2, 4216.0], [90.3, 4216.0], [90.4, 4216.0], [90.5, 4216.0], [90.6, 4216.0], [90.7, 4216.0], [90.8, 4216.0], [90.9, 4216.0], [91.0, 4221.0], [91.1, 4221.0], [91.2, 4221.0], [91.3, 4221.0], [91.4, 4221.0], [91.5, 4221.0], [91.6, 4221.0], [91.7, 4221.0], [91.8, 4221.0], [91.9, 4221.0], [92.0, 4231.0], [92.1, 4231.0], [92.2, 4231.0], [92.3, 4231.0], [92.4, 4231.0], [92.5, 4231.0], [92.6, 4231.0], [92.7, 4231.0], [92.8, 4231.0], [92.9, 4231.0], [93.0, 4246.0], [93.1, 4246.0], [93.2, 4246.0], [93.3, 4246.0], [93.4, 4246.0], [93.5, 4246.0], [93.6, 4246.0], [93.7, 4246.0], [93.8, 4246.0], [93.9, 4246.0], [94.0, 4253.0], [94.1, 4253.0], [94.2, 4253.0], [94.3, 4253.0], [94.4, 4253.0], [94.5, 4253.0], [94.6, 4253.0], [94.7, 4253.0], [94.8, 4253.0], [94.9, 4253.0], [95.0, 4265.0], [95.1, 4265.0], [95.2, 4265.0], [95.3, 4265.0], [95.4, 4265.0], [95.5, 4265.0], [95.6, 4265.0], [95.7, 4265.0], [95.8, 4265.0], [95.9, 4265.0], [96.0, 4435.0], [96.1, 4435.0], [96.2, 4435.0], [96.3, 4435.0], [96.4, 4435.0], [96.5, 4435.0], [96.6, 4435.0], [96.7, 4435.0], [96.8, 4435.0], [96.9, 4435.0], [97.0, 4445.0], [97.1, 4445.0], [97.2, 4445.0], [97.3, 4445.0], [97.4, 4445.0], [97.5, 4445.0], [97.6, 4445.0], [97.7, 4445.0], [97.8, 4445.0], [97.9, 4445.0], [98.0, 4508.0], [98.1, 4508.0], [98.2, 4508.0], [98.3, 4508.0], [98.4, 4508.0], [98.5, 4508.0], [98.6, 4508.0], [98.7, 4508.0], [98.8, 4508.0], [98.9, 4508.0], [99.0, 5110.0], [99.1, 5110.0], [99.2, 5110.0], [99.3, 5110.0], [99.4, 5110.0], [99.5, 5110.0], [99.6, 5110.0], [99.7, 5110.0], [99.8, 5110.0], [99.9, 5110.0]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 38.0, "series": [{"data": [[0.0, 38.0], [100.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 4.0], [3300.0, 2.0], [3500.0, 6.0], [3600.0, 4.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 4.0], [4000.0, 3.0], [4100.0, 2.0], [4200.0, 3.0], [4300.0, 3.0], [4500.0, 2.0], [4600.0, 2.0], [4400.0, 1.0], [4700.0, 2.0], [4800.0, 2.0], [4900.0, 1.0], [5100.0, 2.0], [5000.0, 1.0], [5200.0, 2.0], [5300.0, 3.0], [5400.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6100.0, 1.0]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[0.0, 28.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 5.0], [2700.0, 5.0], [2800.0, 2.0], [2900.0, 7.0], [3000.0, 8.0], [3100.0, 4.0], [3200.0, 6.0], [3400.0, 1.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 4.0], [3900.0, 1.0], [4000.0, 2.0], [4300.0, 1.0]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[0.0, 32.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 1.0], [2200.0, 1.0], [2500.0, 4.0], [2600.0, 4.0], [2800.0, 5.0], [2700.0, 4.0], [2900.0, 8.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 4.0], [4000.0, 3.0], [4300.0, 6.0], [4200.0, 1.0], [4100.0, 2.0], [4600.0, 1.0], [4400.0, 2.0], [4700.0, 1.0], [4800.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [6000.0, 1.0]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[800.0, 4.0], [900.0, 2.0], [1100.0, 4.0], [1200.0, 2.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [7600.0, 1.0], [8600.0, 1.0], [9100.0, 2.0], [8900.0, 1.0], [9400.0, 1.0], [9300.0, 1.0], [9800.0, 1.0], [10000.0, 3.0], [10100.0, 3.0], [10200.0, 1.0], [10700.0, 3.0], [10400.0, 2.0], [10300.0, 1.0], [10600.0, 1.0], [10800.0, 2.0], [11000.0, 1.0], [11400.0, 2.0], [11700.0, 1.0], [12000.0, 1.0], [12200.0, 1.0], [11800.0, 2.0], [12100.0, 2.0], [12500.0, 2.0], [12400.0, 3.0], [12700.0, 2.0], [12600.0, 3.0], [12800.0, 5.0], [13000.0, 8.0], [13100.0, 3.0], [13200.0, 4.0], [13300.0, 1.0], [13400.0, 1.0], [13600.0, 1.0], [13800.0, 1.0], [14000.0, 2.0], [13900.0, 1.0], [14100.0, 2.0], [14600.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[600.0, 6.0], [700.0, 5.0], [800.0, 4.0], [900.0, 6.0], [1000.0, 3.0], [1100.0, 5.0], [1200.0, 6.0], [1300.0, 6.0], [1400.0, 5.0], [1500.0, 5.0], [1600.0, 1.0], [1700.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 2.0], [4200.0, 7.0], [4100.0, 4.0], [4500.0, 1.0], [4400.0, 2.0], [5100.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 180.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 220.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 220.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 180.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.7028201E12, "maxY": 81.58313817330215, "series": [{"data": [[1.70282016E12, 37.0], [1.7028201E12, 81.58313817330215]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282016E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 14630.0, "series": [{"data": [[76.0, 4543.085714285715], [100.0, 1541.6153846153843]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[91.60000000000001, 2592.1299999999997]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/-Aggregated", "isController": false}, {"data": [[75.0, 3111.0], [74.0, 2829.5714285714294], [73.0, 2392.894736842105], [76.0, 3185.8947368421054], [100.0, 76.62962962962965]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[81.60999999999999, 2144.34]], "isOverall": false, "label": "https://www.amry.ru/stocks/-Aggregated", "isController": false}, {"data": [[2.0, 3935.0], [3.0, 4014.0], [4.0, 4445.0], [5.0, 4309.0], [6.0, 4446.0], [7.0, 4801.0], [8.0, 4358.0], [9.0, 3161.0], [10.0, 3989.0], [11.0, 4310.0], [12.0, 2922.0], [13.0, 2726.0], [14.0, 2752.0], [15.0, 3028.0], [16.0, 2803.0], [17.0, 4180.0], [18.0, 2960.0], [19.0, 4055.0], [20.0, 2619.0], [21.0, 2995.0], [22.0, 4757.0], [23.0, 2659.0], [24.0, 2823.0], [25.0, 2955.0], [26.0, 2695.0], [27.0, 2632.0], [28.0, 2751.0], [29.0, 2932.0], [30.0, 2893.0], [31.0, 4643.0], [33.0, 4397.0], [32.0, 5268.0], [35.0, 2968.0], [34.0, 2862.0], [37.0, 2802.0], [36.0, 2706.0], [39.0, 2928.0], [38.0, 3018.0], [41.0, 4334.0], [40.0, 4118.0], [43.0, 3969.0], [42.0, 4225.0], [45.0, 4032.0], [44.0, 3819.0], [47.0, 3852.0], [46.0, 3968.0], [49.0, 3743.0], [48.0, 4319.0], [51.0, 3350.0], [50.0, 3560.0], [53.0, 70.0], [52.0, 70.0], [55.0, 70.0], [54.0, 70.0], [57.0, 70.0], [56.0, 70.0], [59.0, 72.0], [58.0, 71.0], [61.0, 1938.0], [60.0, 2207.0], [63.0, 1882.0], [62.0, 3045.0], [67.0, 1666.0], [66.0, 1678.0], [65.0, 1827.0], [64.0, 2917.0], [71.0, 2513.0], [70.0, 2536.0], [69.0, 1747.0], [68.0, 2596.0], [75.0, 5526.0], [74.0, 6012.0], [73.0, 3874.0], [72.0, 2573.0], [76.0, 5361.0], [83.0, 72.0], [81.0, 71.33333333333333], [87.0, 72.0], [85.0, 73.0], [84.0, 72.0], [91.0, 70.0], [89.0, 73.0], [88.0, 73.0], [94.0, 70.0], [98.0, 70.28571428571429], [100.0, 70.0], [1.0, 3658.0]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[51.080000000000034, 2346.18]], "isOverall": false, "label": "https://www.amry.ru/accum/-Aggregated", "isController": false}, {"data": [[2.0, 13899.0], [3.0, 14630.0], [4.0, 14172.0], [5.0, 14128.0], [6.0, 13687.0], [7.0, 13959.0], [8.0, 14077.0], [9.0, 13388.0], [10.0, 13289.0], [11.0, 13472.0], [12.0, 13067.0], [13.0, 13090.0], [14.0, 12666.0], [15.0, 13211.0], [16.0, 12645.0], [17.0, 13107.0], [18.0, 13036.0], [19.0, 13039.0], [20.0, 12782.0], [21.0, 13170.0], [22.0, 13238.0], [23.0, 12617.0], [24.0, 13011.0], [25.0, 13277.0], [26.0, 12883.0], [27.0, 12724.0], [28.0, 13011.0], [29.0, 12802.0], [30.0, 12847.0], [31.0, 13032.0], [33.0, 12555.0], [32.0, 13175.0], [35.0, 12175.0], [34.0, 13064.0], [37.0, 12402.0], [36.0, 12841.0], [39.0, 12146.0], [38.0, 12829.0], [41.0, 12431.0], [40.0, 12471.0], [43.0, 11820.0], [42.0, 12539.0], [45.0, 12218.0], [44.0, 11842.0], [47.0, 11750.0], [46.0, 12094.0], [49.0, 11068.0], [48.0, 11409.0], [51.0, 10652.0], [50.0, 11454.0], [53.0, 10863.0], [52.0, 10793.0], [55.0, 10339.0], [54.0, 10488.0], [57.0, 10835.0], [56.0, 10238.0], [59.0, 10052.0], [58.0, 10149.0], [61.0, 10131.0], [60.0, 10426.0], [63.0, 10001.0], [62.0, 10711.0], [67.0, 10021.0], [66.0, 9391.0], [65.0, 10186.0], [64.0, 10725.0], [71.0, 8977.0], [70.0, 9841.0], [69.0, 9158.0], [68.0, 9430.0], [75.0, 6340.0], [74.0, 7656.0], [73.0, 8689.0], [72.0, 9161.0], [76.0, 6101.0], [83.0, 1459.0], [81.0, 1265.0], [87.0, 828.0], [85.0, 1111.0], [84.0, 1608.0], [91.0, 1132.0], [89.0, 977.0], [88.0, 1129.8], [94.0, 1721.0], [98.0, 1348.2857142857144], [100.0, 1162.5], [1.0, 14023.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[51.080000000000034, 9256.589999999997]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[100.0, 2173.9400000000005]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}, {"data": [[100.0, 2173.9400000000005]], "isOverall": false, "label": "https://www.amry.ru/about/company/-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 667.95, "minX": 1.7028201E12, "maxY": 482852.81666666665, "series": [{"data": [[1.70282016E12, 379327.7833333333], [1.7028201E12, 482852.81666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70282016E12, 667.95], [1.7028201E12, 2841.9166666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282016E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 689.3333333333333, "minX": 1.7028201E12, "maxY": 9256.589999999997, "series": [{"data": [[1.7028201E12, 2592.1299999999997]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[1.7028201E12, 2144.34]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[1.70282016E12, 2958.9863013698637], [1.7028201E12, 689.3333333333333]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[1.7028201E12, 9256.589999999997]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7028201E12, 2173.9400000000005]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282016E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 610.2962962962963, "minX": 1.7028201E12, "maxY": 8514.499999999998, "series": [{"data": [[1.7028201E12, 2461.34]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[1.7028201E12, 1943.3]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[1.70282016E12, 2576.4931506849316], [1.7028201E12, 610.2962962962963]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[1.7028201E12, 8514.499999999998]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7028201E12, 2064.24]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282016E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7028201E12, "maxY": 986.98, "series": [{"data": [[1.7028201E12, 0.0]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/", "isController": false}, {"data": [[1.7028201E12, 0.0]], "isOverall": false, "label": "https://www.amry.ru/stocks/", "isController": false}, {"data": [[1.70282016E12, 0.0], [1.7028201E12, 0.0]], "isOverall": false, "label": "https://www.amry.ru/accum/", "isController": false}, {"data": [[1.7028201E12, 986.98]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7028201E12, 986.9799999999999]], "isOverall": false, "label": "https://www.amry.ru/about/company/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282016E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1501.0, "minX": 1.7028201E12, "maxY": 6185.0, "series": [{"data": [[1.70282016E12, 5268.0], [1.7028201E12, 6185.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70282016E12, 4688.599999999999], [1.7028201E12, 4914.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70282016E12, 5268.0], [1.7028201E12, 6036.2199999999975]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70282016E12, 4894.399999999998], [1.7028201E12, 5352.299999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70282016E12, 2513.0], [1.7028201E12, 1501.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70282016E12, 4014.0], [1.7028201E12, 3457.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282016E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 71.0, "minX": 1.0, "maxY": 4649.0, "series": [{"data": [[8.0, 4147.5], [33.0, 2652.0], [38.0, 4565.5], [10.0, 2458.5], [11.0, 3543.5], [46.0, 3218.0], [13.0, 3105.0], [56.0, 1708.5], [14.0, 3709.0], [15.0, 4225.0], [1.0, 3874.0], [17.0, 4649.0], [18.0, 3639.5], [6.0, 3951.5], [24.0, 4310.0], [7.0, 2554.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[38.0, 73.0], [46.0, 72.0], [24.0, 2823.0], [56.0, 1054.0], [14.0, 71.0], [7.0, 1678.0], [15.0, 2895.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 56.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 71.0, "minX": 1.0, "maxY": 4433.0, "series": [{"data": [[8.0, 3927.5], [33.0, 2375.0], [38.0, 4347.5], [10.0, 2242.0], [11.0, 3324.0], [46.0, 3005.0], [13.0, 2827.0], [56.0, 1487.0], [14.0, 3490.0], [15.0, 3413.0], [1.0, 3168.0], [17.0, 4433.0], [18.0, 3361.5], [6.0, 3186.0], [24.0, 3590.0], [7.0, 1816.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[38.0, 73.0], [46.0, 72.0], [24.0, 2823.0], [56.0, 1049.0], [14.0, 71.0], [7.0, 1678.0], [15.0, 2895.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 56.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9833333333333333, "minX": 1.7028201E12, "maxY": 5.683333333333334, "series": [{"data": [[1.70282016E12, 0.9833333333333333], [1.7028201E12, 5.683333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282016E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.7028201E12, "maxY": 3.0833333333333335, "series": [{"data": [[1.70282016E12, 0.5833333333333334], [1.7028201E12, 3.0833333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70282016E12, 0.13333333333333333], [1.7028201E12, 2.3666666666666667]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.70282016E12, 0.5]], "isOverall": false, "label": "529", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70282016E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7028201E12, "maxY": 1.5166666666666666, "series": [{"data": [[1.7028201E12, 0.4666666666666667]], "isOverall": false, "label": "https://www.amry.ru/stocks/-failure", "isController": false}, {"data": [[1.7028201E12, 1.2]], "isOverall": false, "label": "https://www.amry.ru/stocks/-success", "isController": false}, {"data": [[1.70282016E12, 0.6333333333333333], [1.7028201E12, 0.4]], "isOverall": false, "label": "https://www.amry.ru/accum/-failure", "isController": false}, {"data": [[1.7028201E12, 0.15]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.7028201E12, 0.6666666666666666]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/-failure", "isController": false}, {"data": [[1.7028201E12, 1.5166666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}, {"data": [[1.70282016E12, 0.5833333333333334], [1.7028201E12, 0.05]], "isOverall": false, "label": "https://www.amry.ru/accum/-success", "isController": false}, {"data": [[1.7028201E12, 0.8333333333333334]], "isOverall": false, "label": "https://www.amry.ru/about/company/-failure", "isController": false}, {"data": [[1.7028201E12, 0.8333333333333334]], "isOverall": false, "label": "https://www.amry.ru/about/company/-success", "isController": false}, {"data": [[1.7028201E12, 1.0]], "isOverall": false, "label": "https://www.amry.ru/to_suppliers/-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282016E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.7028201E12, "maxY": 3.8833333333333333, "series": [{"data": [[1.70282016E12, 0.5833333333333334], [1.7028201E12, 3.2333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70282016E12, 0.6333333333333333], [1.7028201E12, 3.8833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70282016E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

